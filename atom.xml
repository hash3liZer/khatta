<?xml version='1.0' encoding='utf-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://blog.shameerkashif.me/</id>
  <title><![CDATA[./khatta.sh]]></title>
  <subtitle><![CDATA[A Knowledge Base | Khatta is urdu for blog]]></subtitle>
  <icon>https://blog.shameerkashif.me/favicon.png</icon>
  <link href="https://blog.shameerkashif.me" />
  <link href="https://blog.shameerkashif.me/atom.xml" rel="self" type="application/atom+xml" />
  <link href="https://pubsubhubbub.appspot.com" rel="hub"/>
  <link href="https://bridgy-fed.superfeedr.com" rel="hub"/>
  <updated>2023-06-27T13:53:41.993Z</updated>
  <author>
    <name><![CDATA[@hash3liZer]]></name>
  </author>
  <category term="ctf" scheme="https://blog.shameerkashif.me/?tags=ctf" />
  <category term="writeups" scheme="https://blog.shameerkashif.me/?tags=writeups" />
  <category term="google-ctf-2023" scheme="https://blog.shameerkashif.me/?tags=google-ctf-2023" />
  <entry>
    <title type="html"><![CDATA[Google CTF 2023 Under Construction (Web) Writeup]]></title>
    <link href="https://blog.shameerkashif.me/blog/2023/writeup-under-construction-google-ctf-2024" />
    <id>https://blog.shameerkashif.me/blog/2023/writeup-under-construction-google-ctf-2024</id>
    <published>2023-06-27T00:00:00.000Z</published>
    <updated>2023-06-27T13:52:44.807Z</updated>
    <summary type="html"><![CDATA[Writeup for under construction challenge from google ctf 2023]]></summary>
    <content type="html">
      <![CDATA[<h1 id="introduction"><a href="#introduction">Introduction</a></h1><p>This writeup is for the under construction challenge from web category in Google CTF 2023. The challenge was provided with the following statement: <em>“We were building a web app but the new CEO wants it remade in php.”</em> The challenge contained 2 different web apps. One was in PHP that seems to be under development whilst flask app seemed like a full application. This writeup covers an <code>Parameter Pollution</code> vulnerability we were able to create an escalated user by supplying more than 1 parameter. </p><h1 id="writeup"><a href="#writeup">Writeup</a></h1><p>So, at first i visited the URLS and got to know the application surface. Then i downloaded the challenge files available and opened them in the editor. </p><p>Reading the code, i got to the <code>flag</code> point. In the <code>index.php</code> file, we have: </p><!-- HTML_TAG_START --><pre class="shiki material-default" php="true"><div class="language-id">php</div><div class='code-container'><code><div class='line'>...</div><div class='line'>if ($tier === NULL) &#123;</div><div class='line'>    return "Invalid credentials";</div><div class='line'>&#125;</div><div class='line'></div><div class='line'>$response = "Login successful. Welcome " . htmlspecialchars($username) . ".";</div><div class='line'></div><div class='line'>// Look at this part. </div><div class='line'>if ($tier === "gold") &#123;</div><div class='line'>    $response .= " " . getenv("FLAG");</div><div class='line'>&#125;</div><div class='line'></div><div class='line'>return $response;</div><div class='line'></div><div class='line'>...</div></code></div></pre><!-- HTML_TAG_END --><p>So, in order to get the flag, we need to create a gold tier user first. The PHP application itself doesn’t offer any signup functionlaity but the <code>account_migrator.php</code> file does that is being called from the flask application. So, if we look at the flask application, we will find where the user is being registered. </p><p>In the <code>authorized_routes.py</code>, we have: </p><!-- HTML_TAG_START --><pre class="shiki material-default" python="true"><div class="language-id">python</div><div class='code-container'><code><div class='line'>...</div><div class='line'>@authorized.route('/signup', methods=['POST'])</div><div class='line'>def signup_post():</div><div class='line'>  ...</div><div class='line'>  tier = models.Tier(request.form.get('tier'))</div><div class='line'></div><div class='line'>  if(tier == models.Tier.GOLD):</div><div class='line'>      flash('GOLD tier only allowed for the CEO')</div><div class='line'>      return redirect(url_for('authorized.signup'))  # Validation is based on first parameter</div><div class='line'>  ...</div><div class='line'></div><div class='line'>  new_user = models.User(username=username, </div><div class='line'>  password=generate_password_hash(password, method='sha256'), tier=tier.name)</div><div class='line'>  </div><div class='line'>  db.session.add(new_user)</div><div class='line'>  db.session.commit()</div><div class='line'>  </div><div class='line'>  requests.post(f"http://&#123;PHP_HOST&#125;:1337/account_migrator.php", </div><div class='line'>      headers=&#123;"token": TOKEN, "content-type": request.headers.get("content-type")&#125;, data=raw_request) # Vulnerable PART</div><div class='line'>  return redirect(url_for('authorized.login'))</div></code></div></pre><!-- HTML_TAG_END --><p>The validation is based on the statement: <code>request.form.get(&#39;tier&#39;)</code>. This will always pick the first parameter if multiple parameters are to be supplied However, the application is passing the <code>raw_request</code> as it is to the next application which is in PHP. In order words</p>]]>
    </content>
    <category term="ctf" scheme="https://blog.shameerkashif.me/?tags=ctf" />
    <category term="writeups" scheme="https://blog.shameerkashif.me/?tags=writeups" />
    <category term="google-ctf-2023" scheme="https://blog.shameerkashif.me/?tags=google-ctf-2023" />
  </entry>
</feed>