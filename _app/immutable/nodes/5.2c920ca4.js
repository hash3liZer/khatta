import{S as HF,i as MF,s as ZF,U as ep,y as I,z as j,A as x,V as YF,W as FF,g as R,d as N,B,X as dF,k as i,q as l,a as c,Y as d,l as r,m as p,r as o,h as s,c as F,Z as f,n as v,b as n,D as t,E as XF}from"../chunks/index.725d15e1.js";import{P as zF}from"../chunks/post_layout.b6bd0bbf.js";import{I as G}from"../chunks/post_card.004e8740.js";function QF(Ne){let y,k,Q,V,u,L,J,va,Ea,_s,ma,ha,ks,Da,wa,zl,ve,Be,ga,Ql,Le,ba,Vl,Ee,Ge,_a,Jl,C,ka,Cs,Ca,Oa,Os,Sa,Pa,Ss,Ta,Aa,Kl,K,$a,Ps,Ia,ja,eo,me,qe,xa,so,ee,Ra,Ts,Na,Ba,to,As,uF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">sudo apt update</span></div><div class='line'><span style="color: #EEFFFF">sudo apt install -y nginx python3 python3-dev python3-pip python3-virtualenv libpq-dev postgresql postgresql-contrib</span></div></code></div></pre>`,$s,Ue,he,lo,se,La,Is,Ga,qa,oo,js,yF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">sudo -s</span></div></code></div></pre>`,xs,We,De,ao,we,He,Ua,no,O,Wa,Rs,Ha,Ma,Ns,Za,Ya,Bs,Xa,za,io,Ls,vF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">rsync -arvz -e </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">ssh -p &lt;port-number&gt;</span><span style="color: #89DDFF">'</span><span style="color: #EEFFFF"> --progress --delete /path/to/local/folder user@remote-server:/var/www/</span></div></code></div></pre>`,Gs,te,Qa,qs,Va,Ja,ro,Us,EF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #82AAFF">cd</span><span style="color: #EEFFFF"> /var/www</span></div><div class='line'><span style="color: #EEFFFF">pip3 install django</span></div><div class='line'><span style="color: #EEFFFF">django-admin startproject myweb</span></div></code></div></pre>`,Ws,q,Ka,Hs,en,sn,Ms,tn,ln,po,Zs,mF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #82AAFF">cd</span><span style="color: #EEFFFF"> myweb/</span></div><div class='line'><span style="color: #EEFFFF">virtualenv venv</span></div></code></div></pre>`,Ys,le,on,Xs,an,nn,co,zs,hF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #82AAFF">source</span><span style="color: #EEFFFF"> ./venv/bin/activate</span></div><div class='line'><span style="color: #EEFFFF">pip3 install -r requirements.txt     </span><span style="color: #546E7A"># In case you have one</span></div><div class='line'><span style="color: #EEFFFF">pip3 install django gunicorn psycopg2-binary</span></div></code></div></pre>`,Qs,ge,Me,rn,Fo,oe,pn,Vs,cn,Fn,fo,ae,dn,Js,fn,un,uo,Ks,DF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF"><div class='code-container'><code><div class='line'><span style="color: undefined">sudo -u postgres psql</span></div></code></div></pre>`,et,U,yn,st,vn,En,tt,mn,hn,yo,lt,wF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF"><div class='code-container'><code><div class='line'><span style="color: undefined">CREATE DATABASE hashbase;</span></div><div class='line'><span style="color: undefined">CREATE USER hashbaseuser WITH PASSWORD 'password1122';</span></div><div class='line'><span style="color: undefined">GRANT ALL PRIVILEGES ON DATABASE hashbase TO hashbaseuser;</span></div></code></div></pre>`,ot,Ze,Dn,vo,at,gF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">ALTER ROLE hashbaseuser SET client_encoding TO </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">utf8</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF">ALTER ROLE hashbaseuser SET default_transaction_isolation TO </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">read committed</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF">ALTER ROLE hashbaseuser SET timezone TO </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">UTC</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">;</span></div></code></div></pre>`,nt,Ye,wn,Eo,it,bF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">q</span></div></code></div></pre>`,rt,Xe,be,mo,_e,ze,gn,ho,W,bn,pt,_n,kn,ct,Cn,On,Do,Ft,_F=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">nano myweb/settings.py</span></div></code></div></pre>`,dt,Qe,ke,wo,g,Sn,ft,Pn,Tn,ut,An,$n,yt,In,jn,vt,xn,Rn,go,Et,kF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" python="true"><div class="language-id">python</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">...</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">ALLOWED_HOSTS </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">[</span></div><div class='line'><span style="color: #EEFFFF">  </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">13.229.230.156</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF">      </span><span style="color: #546E7A"># Public IP of the Server</span></div><div class='line'><span style="color: #EEFFFF">  </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">mydomain.com</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF">        </span><span style="color: #546E7A"># In case you have a domain, you can skip the IP Address</span></div><div class='line'><span style="color: #EEFFFF">  </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">someotherhostetc</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">,</span></div><div class='line'><span style="color: #89DDFF">]</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">...</span></div></code></div></pre>`,mt,S,Nn,ht,Bn,Ln,Dt,Gn,qn,wt,Un,Wn,bo,gt,CF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" python="true"><div class="language-id">python</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">...</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">DATABASES </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">default</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">ENGINE</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">django.db.backends.postgresql_psycopg2</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">,</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">NAME</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">hashbase</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">,</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">USER</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">hashbaseuser</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">,</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">PASSWORD</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">password1122</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">,</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">HOST</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">localhost</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">,</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">PORT</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">''</span><span style="color: #89DDFF">,</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">...</span></div></code></div></pre>`,bt,h,Hn,_t,Mn,Zn,kt,Yn,Xn,Ct,zn,Qn,Ot,Vn,Jn,St,Kn,ei,_o,Pt,OF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" python="true"><div class="language-id">python</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">...</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">STATIC_URL </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">static/</span><span style="color: #89DDFF">'</span></div><div class='line'><span style="color: #EEFFFF">STATIC_ROOT </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> BASE_DIR </span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">public</span><span style="color: #89DDFF">'</span></div><div class='line'><span style="color: #EEFFFF">MEDIA_URL  </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">media/</span><span style="color: #89DDFF">'</span></div><div class='line'><span style="color: #EEFFFF">MEDIA_ROOT </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> BASE_DIR </span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">media</span><span style="color: #89DDFF">'</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">...</span></div></code></div></pre>`,Tt,E,si,At,ti,li,$t,oi,ai,It,ni,ii,jt,ri,pi,xt,ci,Fi,Rt,di,fi,Nt,ui,yi,ko,Ce,Ve,vi,Co,Je,Ei,Oo,Ke,mi,So,Bt,SF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF"><div class='code-container'><code><div class='line'><span style="color: undefined">python3 manage.py makemigrations</span></div><div class='line'><span style="color: undefined">python3 manage.py migrate</span></div><div class='line'><span style="color: undefined">python3 manage.py createsuperuser     # Enter your credentials for the superuser when prompted</span></div></code></div></pre>`,Lt,es,Oe,Po,P,hi,Gt,Di,wi,qt,gi,bi,Ut,_i,ki,To,Wt,PF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" python="true"><div class="language-id">python</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">python3 manage</span><span style="color: #89DDFF">.</span><span style="color: #F07178">py</span><span style="color: #EEFFFF"> collectstatic</span></div></code></div></pre>`,Ht,ss,Se,Ao,H,Ci,Mt,Oi,Si,Zt,Pi,Ti,$o,Yt,TF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" python="true"><div class="language-id">python</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">service nginx stop</span></div><div class='line'><span style="color: #EEFFFF">python3 manage</span><span style="color: #89DDFF">.</span><span style="color: #F07178">py</span><span style="color: #EEFFFF"> runserver </span><span style="color: #F78C6C">0.0</span><span style="color: #89DDFF">.</span><span style="color: #F07178">0</span><span style="color: #89DDFF">.</span><span style="color: #F07178">0</span><span style="color: #89DDFF">:</span><span style="color: #F78C6C">80</span></div></code></div></pre>`,Xt,ne,Ai,zt,$i,Ii,Io,Qt,AF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" python="true"><div class="language-id">python</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">http</span><span style="color: #89DDFF">://</span><span style="color: #EEFFFF">PUBLCI_IP_ADDRESS</span></div></code></div></pre>`,Vt,ts,Pe,jo,b,ji,Jt,xi,Ri,Kt,Ni,Bi,el,Li,Gi,sl,qi,Ui,xo,tl,$F=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF"><div class='code-container'><code><div class='line'><span style="color: undefined">nano myweb/settings.py</span></div><div class='line'><span style="color: undefined"></span></div><div class='line'><span style="color: undefined">...</span></div><div class='line'><span style="color: undefined">DEBUG = False</span></div><div class='line'><span style="color: undefined">...</span></div></code></div></pre>`,ll,ls,Wi,Ro,Te,os,Hi,No,m,Mi,ol,Zi,Yi,al,Xi,zi,nl,Qi,Vi,il,Ji,Ki,rl,er,sr,pl,tr,lr,Bo,cl,IF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">gunicorn --bind 0.0.0.0:80 myweb.wsgi</span></div></code></div></pre>`,Fl,as,Ae,Lo,ie,or,dl,ar,nr,Go,fl,jF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">nano /etc/systemd/system/gunicorn.service</span></div></code></div></pre>`,ul,M,ir,yl,rr,pr,vl,cr,Fr,qo,El,xF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" python="true"><div class="language-id">python</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">[</span><span style="color: #EEFFFF">Unit</span><span style="color: #89DDFF">]</span></div><div class='line'><span style="color: #EEFFFF">Description</span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF">gunicorn daemon</span></div><div class='line'><span style="color: #EEFFFF">After</span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF">network</span><span style="color: #89DDFF">.</span><span style="color: #F07178">target</span></div><div class='line'></div><div class='line'><span style="color: #89DDFF">[</span><span style="color: #EEFFFF">Service</span><span style="color: #89DDFF">]</span></div><div class='line'><span style="color: #EEFFFF">User</span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF">www</span><span style="color: #89DDFF">-</span><span style="color: #EEFFFF">data</span></div><div class='line'><span style="color: #EEFFFF">Group</span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF">www</span><span style="color: #89DDFF">-</span><span style="color: #EEFFFF">data</span></div><div class='line'><span style="color: #EEFFFF">WorkingDirectory</span><span style="color: #89DDFF">=/</span><span style="color: #EEFFFF">var</span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">www</span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">myweb</span></div><div class='line'><span style="color: #EEFFFF">ExecStart</span><span style="color: #89DDFF">=/</span><span style="color: #EEFFFF">var</span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">www</span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">myweb</span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">venv</span><span style="color: #89DDFF">/</span><span style="color: #82AAFF">bin</span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">gunicorn --access</span><span style="color: #89DDFF">-</span><span style="color: #EEFFFF">logfile </span><span style="color: #89DDFF">-</span><span style="color: #EEFFFF"> --workers </span><span style="color: #F78C6C">3</span><span style="color: #EEFFFF"> --timeout </span><span style="color: #F78C6C">300</span><span style="color: #EEFFFF"> --bind unix</span><span style="color: #89DDFF">:/</span><span style="color: #EEFFFF">var</span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">www</span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">myweb</span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">myweb</span><span style="color: #89DDFF">.</span><span style="color: #F07178">sock</span><span style="color: #EEFFFF"> myweb</span><span style="color: #89DDFF">.</span><span style="color: #F07178">wsgi</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF">application</span></div><div class='line'></div><div class='line'><span style="color: #89DDFF">[</span><span style="color: #EEFFFF">Install</span><span style="color: #89DDFF">]</span></div><div class='line'><span style="color: #EEFFFF">WantedBy</span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF">multi</span><span style="color: #89DDFF">-</span><span style="color: #EEFFFF">user</span><span style="color: #89DDFF">.</span><span style="color: #F07178">target</span></div></code></div></pre>`,ml,D,dr,hl,fr,ur,Dl,yr,vr,wl,Er,mr,gl,hr,Dr,bl,wr,gr,Uo,ns,br,Wo,_l,RF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">chown www-data:www-data -R /var/www/myweb</span></div></code></div></pre>`,kl,is,_r,Ho,Cl,NF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">systemctl daemon-reload</span></div><div class='line'><span style="color: #EEFFFF">systemctl restart gunicorn.service</span></div><div class='line'><span style="color: #EEFFFF">systemctl status gunicorn.service</span></div></code></div></pre>`,Ol,rs,$e,Mo,ps,kr,Zo,Sl,BF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">sudo journalctl -u gunicorn</span></div></code></div></pre>`,Pl,Ie,cs,Cr,Yo,Z,Or,Tl,Sr,Pr,Al,Tr,Ar,Xo,$l,LF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">rm /etc/nginx/sites-enabled/default</span></div><div class='line'><span style="color: #EEFFFF">nano /etc/nginx/sites-available/myweb</span></div></code></div></pre>`,Il,Fs,$r,zo,jl,GF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" nginx="true"><div class="language-id">nginx</div><div class='code-container'><code><div class='line'><span style="color: #C792EA">server</span><span style="color: #EEFFFF"> &#123;</span></div><div class='line'><span style="color: #EEFFFF">   </span><span style="color: #89DDFF"> listen </span><span style="color: #EEFFFF">80</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF">   </span><span style="color: #89DDFF"> server_name </span><span style="color: #EEFFFF">DOMAIN_OR_PUBLIC_IP</span><span style="color: #89DDFF">;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">location</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #C3E88D">/favicon.ico </span><span style="color: #EEFFFF">&#123;</span><span style="color: #89DDFF"> access_log </span><span style="color: #EEFFFF">off</span><span style="color: #89DDFF">; log_not_found </span><span style="color: #EEFFFF">off</span><span style="color: #89DDFF">;</span><span style="color: #EEFFFF"> &#125;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">location</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">/static/ </span><span style="color: #EEFFFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">       </span><span style="color: #89DDFF"> alias </span><span style="color: #EEFFFF">/var/www/myweb/public/</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF">       </span><span style="color: #89DDFF"> add_header </span><span style="color: #EEFFFF">Strict-Transport-Security </span><span style="color: #C3E88D">"max-age=31536000; includeSubDomains"</span><span style="color: #EEFFFF"> always</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF">    &#125;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">location</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">/media/ </span><span style="color: #EEFFFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">       </span><span style="color: #89DDFF"> alias </span><span style="color: #EEFFFF">/var/www/myweb/media/</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF">    &#125;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">location</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">/ </span><span style="color: #EEFFFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">       </span><span style="color: #89DDFF"> include </span><span style="color: #EEFFFF">proxy_params</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF">       </span><span style="color: #89DDFF"> add_header </span><span style="color: #EEFFFF">Strict-Transport-Security </span><span style="color: #C3E88D">"max-age=31536000; includeSubDomains"</span><span style="color: #EEFFFF"> always</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF">       </span><span style="color: #89DDFF"> proxy_pass </span><span style="color: #EEFFFF">http://unix:/var/www/myweb/myweb.sock</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF">    &#125;</span></div><div class='line'><span style="color: #EEFFFF">&#125;</span></div></code></div></pre>`,xl,re,Ir,Rl,jr,xr,Qo,pe,Rr,Nl,Nr,Br,Vo,Bl,qF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" python="true"><div class="language-id">python</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">ln </span><span style="color: #89DDFF">-</span><span style="color: #EEFFFF">s </span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">etc</span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">nginx</span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">sites</span><span style="color: #89DDFF">-</span><span style="color: #EEFFFF">available</span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">myweb </span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">etc</span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">nginx</span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">sites</span><span style="color: #89DDFF">-</span><span style="color: #EEFFFF">enabled</span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">myweb</span></div></code></div></pre>`,Ll,ds,Lr,Jo,Gl,UF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF"><div class='code-container'><code><div class='line'><span style="color: undefined">nginx -t</span></div><div class='line'><span style="color: undefined">systemctl restart nginx</span></div><div class='line'><span style="color: undefined">systemctl status nginx</span></div></code></div></pre>`,ql,fs,je,Ko,T,Gr,Ul,qr,Ur,Wl,Wr,Hr,Hl,Mr,Zr,ea,Ml,WF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" python="true"><div class="language-id">python</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">http</span><span style="color: #89DDFF">://</span><span style="color: #EEFFFF">PUBLIC_IP_ADDRESS_OR_DOMAIN</span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">admin</span></div></code></div></pre>`,Zl,us,xe,sa,Y,Yr,Yl,Xr,zr,Xl,Qr,Vr,ta,Re,ys,Jr,la,vs,Kr,oa;return he=new G({props:{src:"https://github.com/hash3liZer/khatta/assets/29171692/5796e18f-36ee-4cb5-bd9c-7a8398627981",alt:"image"}}),De=new G({props:{src:"https://github.com/hash3liZer/khatta/assets/29171692/be2a19b9-c46a-4a72-b70f-dbb0446dd33c",alt:"image"}}),be=new G({props:{src:"https://github.com/hash3liZer/khatta/assets/29171692/a450e21a-dfbe-4122-986f-8b5dc9e5c284",alt:"image"}}),ke=new G({props:{src:"https://github.com/hash3liZer/khatta/assets/29171692/3f6ad510-3443-4499-90ba-2ef8098d0989",alt:"image"}}),Oe=new G({props:{src:"https://github.com/hash3liZer/khatta/assets/29171692/bf41701c-c35d-448e-adbc-ff111a9ef7e6",alt:"image"}}),Se=new G({props:{src:"https://github.com/hash3liZer/khatta/assets/29171692/a79e25e0-5960-4cd5-ab97-f359cc2de470",alt:"image"}}),Pe=new G({props:{src:"https://github.com/hash3liZer/khatta/assets/29171692/f1bea206-f36f-4df3-8448-f5b2824587c1",alt:"image"}}),Ae=new G({props:{src:"https://github.com/hash3liZer/khatta/assets/29171692/8c4e703d-fcf7-4658-b358-1addaa74f6fb",alt:"image"}}),$e=new G({props:{src:"https://github.com/hash3liZer/khatta/assets/29171692/4f2ca54a-e633-4593-86f1-a292d4e899e6",alt:"image"}}),je=new G({props:{src:"https://github.com/hash3liZer/khatta/assets/29171692/bbab172e-0279-4ac6-a274-1fa9181530da",alt:"image"}}),xe=new G({props:{src:"https://github.com/hash3liZer/khatta/assets/29171692/f3b0c7d0-3dff-40fd-b17f-4a22f280cc09",alt:"image"}}),{c(){y=i("h2"),k=i("a"),Q=l("Introduction"),V=c(),u=i("p"),L=l("Hi, its been a while since i wrote something on my blog. Today, i am going to write about the process of deployment of a django application on a Ubuntu 22.02 live server. I’ll try to cover as much details as i can and mention about the common issues i normally faces while following the process. This article is also a kind of reminder for myself for the tutorials and blog that i followed and the issues i ran into. So, we are going to cover this deployment process through "),J=i("strong"),va=l("Gunicorn"),Ea=l(", "),_s=i("strong"),ma=l("NGINX"),ha=l(" and optionally using "),ks=i("strong"),Da=l("Postgresql"),wa=l(" database."),zl=c(),ve=i("h2"),Be=i("a"),ga=l("Tutorial"),Ql=c(),Le=i("p"),ba=l("So, without wasting any further time. Lets jump right into the details."),Vl=c(),Ee=i("h3"),Ge=i("a"),_a=l("Pre-Reqs"),Jl=c(),C=i("p"),ka=l("The foremost thing are the pre-reqs that we need to follow this tutorial. First is a server with a public IP. Many of you who are reading this might already have one before moving one. Well, if you don’t you can simply get one from any of the hosting services or Cloud platforms. Personally, i use "),Cs=i("strong"),Ca=l("DigitalOcean"),Oa=l(" or "),Os=i("strong"),Sa=l("AWS"),Pa=l(" most of the time. And also, for the sake of this tutorial i’ll be using a "),Ss=i("code"),Ta=l("t2.micro"),Aa=l(" instance of EC2 service from AWS."),Kl=c(),K=i("p"),$a=l("But in general what you need is an online server with "),Ps=i("strong"),Ia=l("Ubuntu 22.04"),ja=l(" installed and with publicly accessibly ports. Thi should also work just fine with Ubuntu 20.04. Let me know in comments if someone tests it."),eo=c(),me=i("h3"),qe=i("a"),xa=l("Installing Packages"),so=c(),ee=i("p"),Ra=l("First, lets update our "),Ts=i("strong"),Na=l("ubuntu"),Ba=l(" machine and install the required packages:"),to=c(),As=new d(!1),$s=c(),Ue=i("p"),I(he.$$.fragment),lo=c(),se=i("p"),La=l("Before going forward, lets escalate to the "),Is=i("code"),Ga=l("root"),qa=l(" shell as we might run into the permission issues again and again. And don’t worry, we will see the project and permissions of the other files at the last:"),oo=c(),js=new d(!1),xs=c(),We=i("p"),I(De.$$.fragment),ao=c(),we=i("h3"),He=i("a"),Ua=l("Setting up Project Directory"),no=c(),O=i("p"),Wa=l("Now, lets move to the "),Rs=i("code"),Ha=l("/var/www/"),Ma=l(" directory where we are going to place our project folder. I am going to setup a project from scratch for demo purposes using "),Ns=i("code"),Za=l("django-admin"),Ya=l(" command. But if you already have one, make sure its uploaded correctly. I normally used "),Bs=i("code"),Xa=l("rsync"),za=l(" for this:"),io=c(),Ls=new d(!1),Gs=c(),te=i("p"),Qa=l("For now, i will setup a new project from scratch and name it "),qs=i("code"),Va=l("myweb"),Ja=l(". Lets install django and initialize an empty project:"),ro=c(),Us=new d(!1),Ws=c(),q=i("p"),Ka=l("Move to "),Hs=i("code"),en=l("myweb"),sn=l(" and initialize new "),Ms=i("em"),tn=l("virtual environment"),ln=l(":"),po=c(),Zs=new d(!1),Ys=c(),le=i("p"),on=l("Moving forward, activate the virtual environment and install all the necessary packages that you might have placed in "),Xs=i("code"),an=l("requirements.txt"),nn=l("."),co=c(),zs=new d(!1),Qs=c(),ge=i("h3"),Me=i("a"),rn=l("Setting up Postgres (Database)"),Fo=c(),oe=i("p"),pn=l("You could move forward without this step if you are planning on using some other database or the default sqlite. But please note that you will have to install the relevant packages for that. While in this case, i am only focusing on "),Vs=i("code"),cn=l("postgres"),Fn=l("."),fo=c(),ae=i("p"),dn=l("Launch "),Js=i("code"),fn=l("postgres"),un=l(":"),uo=c(),Ks=new d(!1),et=c(),U=i("p"),yn=l("The next steps are supposed to be inside the "),st=i("code"),vn=l("postgres"),En=l(" terminal. Create a new database. I am naming it "),tt=i("code"),mn=l("hashbase"),hn=l(". Setup a new user and assign it to the database that we just created:"),yo=c(),lt=new d(!1),ot=c(),Ze=i("p"),Dn=l("Next, we will modify a couple of our database settings for better processing and django functions:"),vo=c(),at=new d(!1),nt=c(),Ye=i("p"),wn=l("Quit:"),Eo=c(),it=new d(!1),rt=c(),Xe=i("p"),I(be.$$.fragment),mo=c(),_e=i("h3"),ze=i("a"),gn=l("Project Settings"),ho=c(),W=i("p"),bn=l("We will look at the project settings now that needs to be replaced or modified. Considering we are in the project directory located at "),pt=i("code"),_n=l("/var/www/myweb"),kn=l(". Lets edit the "),ct=i("code"),Cn=l("settings.py"),On=l(" file:"),Do=c(),Ft=new d(!1),dt=c(),Qe=i("p"),I(ke.$$.fragment),wo=c(),g=i("p"),Sn=l("Edit the "),ft=i("code"),Pn=l("ALLOWED_HOSTS"),Tn=l(" list variable to include all the "),ut=i("strong"),An=l("IPs"),$n=l(" or "),yt=i("strong"),In=l("Hostnames"),jn=l(" that you plan on using for the website. In here, i am simply going to put the "),vt=i("strong"),xn=l("PUBLIC IP"),Rn=l(" of the server i am on. You can put domain names if you are going to configure one with the website."),go=c(),Et=new d(!1),mt=c(),S=i("p"),Nn=l("Now, move a bit below to this and find the "),ht=i("code"),Bn=l("DATABASES"),Ln=l(" variable section. By default it is configured to use "),Dt=i("code"),Gn=l("sqlite3"),qn=l(" as its database. We will change the settings to use "),wt=i("code"),Un=l("postgresql"),Wn=l(":"),bo=c(),gt=new d(!1),bt=c(),h=i("p"),Hn=l("After this, we need to setup a "),_t=i("code"),Mn=l("static"),Zn=l(" and "),kt=i("code"),Yn=l("media"),Xn=l(" directory where our project static files are going to be stored. The "),Ct=i("code"),zn=l("media"),Qn=l(" folder will contain files that are supposed to be uploaded by the user of the application. So, again in the "),Ot=i("code"),Vn=l("settings.py"),Jn=l(" file, move at the end of the file and find the line "),St=i("code"),Kn=l("STATIC_URL = 'static/'"),ei=l(" and add some new content below it:"),_o=c(),Pt=new d(!1),Tt=c(),E=i("p"),si=l("The "),At=i("code"),ti=l("STATIC_ROOT"),li=l(" defines the folder where the public content like "),$t=i("em"),oi=l("css,js or imgs"),ai=l(" are going to be stored upon running the "),It=i("code"),ni=l("collectstatic"),ii=l(" command on "),jt=i("code"),ri=l("manage.py"),pi=l(" file. Please note that its totally different from the "),xt=i("code"),ci=l("STATICFILES_DIRS"),Fi=l(" variable which is used to define the directories to locate static files. Think of "),Rt=i("code"),di=l("STATIC_ROOT"),fi=l(" as more of a "),Nt=i("strong"),ui=l("production"),yi=l(" specific variable."),ko=c(),Ce=i("h3"),Ve=i("a"),vi=l("Spin up the Project"),Co=c(),Je=i("p"),Ei=l("Lets move towards spinning up the project for the public. For that, we will do the normal django commands like migrations and super user."),Oo=c(),Ke=i("p"),mi=l("Run migrations and create a superuser:"),So=c(),Bt=new d(!1),Lt=c(),es=i("p"),I(Oe.$$.fragment),Po=c(),P=i("p"),hi=l("After this, we will run the "),Gt=i("code"),Di=l("collectstatic"),wi=l(" command to locate all the static files we have in our project and put them to the folder that we defined at "),qt=i("code"),gi=l("STATIC_ROOT"),bi=l(" variable. These static files will be served by the "),Ut=i("code"),_i=l("nginx"),ki=l(" server and not from django like we see during the development."),To=c(),Wt=new d(!1),Ht=c(),ss=i("p"),I(Se.$$.fragment),Ao=c(),H=i("p"),Ci=l("You can now execute the "),Mt=i("code"),Oi=l("runserver"),Si=l(" command on public interface to see your website. Before also make sure nginx is not using the port "),Zt=i("code"),Pi=l("80"),Ti=l(" by default:"),$o=c(),Yt=new d(!1),Xt=c(),ne=i("p"),Ai=l("Now, if you access your website at port "),zt=i("code"),$i=l("80"),Ii=l(" you would be able to see your project:"),Io=c(),Qt=new d(!1),Vt=c(),ts=i("p"),I(Pe.$$.fragment),jo=c(),b=i("p"),ji=l("Finally, back in the "),Jt=i("code"),xi=l("settings.py"),Ri=l(" put the "),Kt=i("code"),Ni=l("DEBUG"),Bi=l(" value to "),el=i("code"),Li=l("False"),Gi=l(". You can keep it enabled if you are going to debug the project or facing some other issue. But make sure to put the value to "),sl=i("code"),qi=l("False"),Ui=l(" for the production cases:"),xo=c(),tl=new d(!1),ll=c(),ls=i("p"),Wi=l("At this point, we have our project all ok. But this is not how we are going to host the website actually."),Ro=c(),Te=i("h3"),os=i("a"),Hi=l("Setting up Gunicorn"),No=c(),m=i("p"),Mi=l("Gunicorn is the server service that we are going to configure with "),ol=i("code"),Zi=l("nginx"),Yi=l(" for the public. We will configure a new "),al=i("code"),Xi=l("systemd"),zi=l(" service for this. But before, we will test if "),nl=i("code"),Qi=l("gunicorn"),Vi=l(" is really working or not. So, simply bind gunicorn to the "),il=i("code"),Ji=l("0.0.0.0"),Ki=l(" and test if we can access the website at port "),rl=i("code"),er=l("80"),sr=l(" like we did before. Note that we are still inside "),pl=i("code"),tr=l("/var/www/myweb"),lr=l(" directory"),Bo=c(),cl=new d(!1),Fl=c(),as=i("p"),I(Ae.$$.fragment),Lo=c(),ie=i("p"),or=l("Fire up "),dl=i("code"),ar=l("nano"),nr=l(" again for the gunicorn service and do the configuration:"),Go=c(),fl=new d(!1),ul=c(),M=i("p"),ir=l("Inside the file. I’ll not get into much details of what is happening here. But you can refer to the "),yl=i("code"),rr=l("systemd"),pr=l(" documentation for more in depth detail. However, we will review the "),vl=i("code"),cr=l("Service"),Fr=l(" section here:"),qo=c(),El=new d(!1),ml=c(),D=i("p"),dr=l("The "),hl=i("code"),fr=l("User"),ur=l(" and "),Dl=i("code"),yr=l("Group"),vr=l(" defines the privileges the command is going to be executed with. The complete command is specified with "),wl=i("code"),Er=l("ExecStart"),mr=l(" variable. Make sure to specify "),gl=i("code"),hr=l("WorkingDirectory"),Dr=l(" as well. Otherwise, gunicorn wouldn’t be able to locate the "),bl=i("code"),wr=l("myweb.wsgi"),gr=l(" on path. Save the file."),Uo=c(),ns=i("p"),br=l("Make sure to change the project’s owner before starting gunicorn:"),Wo=c(),_l=new d(!1),kl=c(),is=i("p"),_r=l("Start the service after saving and make that its running and doesn’t have any errors. If there are errors, you will need to fix them before moving forward:"),Ho=c(),Cl=new d(!1),Ol=c(),rs=i("p"),I($e.$$.fragment),Mo=c(),ps=i("p"),kr=l("You can see more detailed logs of gunicorn if there are errors using:"),Zo=c(),Sl=new d(!1),Pl=c(),Ie=i("h3"),cs=i("a"),Cr=l("Setting UP NGINX"),Yo=c(),Z=i("p"),Or=l("This is the last step. We will configure "),Tl=i("code"),Sr=l("nginx"),Pr=l(" which in short is the public server and will take requests from the public and forward it to gunicorn as a reverse proxy. Remove the default enabled nginx website and create a new "),Al=i("code"),Tr=l("nginx"),Ar=l(" project file:"),Xo=c(),$l=new d(!1),Il=c(),Fs=i("p"),$r=l("Inside the file, configure your web server:"),zo=c(),jl=new d(!1),xl=c(),re=i("p"),Ir=l("In the above configuration, make sure you have changed it according to your requirements. One thing to look out for is the "),Rl=i("code"),jr=l("server_name"),xr=l(" directive. If you are working with a domain name, make sure to replace it correctly. Another thing would be the paths that are mentioned in the configuration. Make sure all of the mentioned paths in your correct according to your settings."),Qo=c(),pe=i("p"),Rr=l("Save the file and enable this nginx project by creating its soft link at "),Nl=i("code"),Nr=l("sites-enabled"),Br=l(" directory:"),Vo=c(),Bl=new d(!1),Ll=c(),ds=i("p"),Lr=l("Check nginx configuration and restart nginx:"),Jo=c(),Gl=new d(!1),ql=c(),fs=i("p"),I(je.$$.fragment),Ko=c(),T=i("p"),Gr=l("If everything goes correctly, you should be able to see the nginx service running and if you visit the "),Ul=i("strong"),qr=l("PUBLIC IP"),Ur=l(" or "),Wl=i("strong"),Wr=l("Domain Name"),Hr=l(" now, you will see your website. For the final test, visit the "),Hl=i("code"),Mr=l("/admin"),Zr=l(" page to make sure the static files are also served correctly from our nginx service:"),ea=c(),Ml=new d(!1),Zl=c(),us=i("p"),I(xe.$$.fragment),sa=c(),Y=i("p"),Yr=l("In case your static are not served properly, you can check the "),Yl=i("code"),Xr=l("nginx"),zr=l(" error logs at: "),Xl=i("code"),Qr=l("/var/log/nginx/error.log"),Vr=l(" and debug the issues."),ta=c(),Re=i("h2"),ys=i("a"),Jr=l("Conclusion"),la=c(),vs=i("p"),Kr=l("Thanks for making it through. All in all, we saw how to host a django website using gunicorn, nginx and postgresql. Its not very tricky but yes sometimes debugging the configuration files can take time. So, while doing your own, make sure to double check your configuration files and make sure that they are making sense for what they are supposed to do."),this.h()},l(e){y=r(e,"H2",{id:!0});var a=p(y);k=r(a,"A",{href:!0});var sp=p(k);Q=o(sp,"Introduction"),sp.forEach(s),a.forEach(s),V=F(e),u=r(e,"P",{});var ce=p(u);L=o(ce,"Hi, its been a while since i wrote something on my blog. Today, i am going to write about the process of deployment of a django application on a Ubuntu 22.02 live server. I’ll try to cover as much details as i can and mention about the common issues i normally faces while following the process. This article is also a kind of reminder for myself for the tutorials and blog that i followed and the issues i ran into. So, we are going to cover this deployment process through "),J=r(ce,"STRONG",{});var tp=p(J);va=o(tp,"Gunicorn"),tp.forEach(s),Ea=o(ce,", "),_s=r(ce,"STRONG",{});var lp=p(_s);ma=o(lp,"NGINX"),lp.forEach(s),ha=o(ce," and optionally using "),ks=r(ce,"STRONG",{});var op=p(ks);Da=o(op,"Postgresql"),op.forEach(s),wa=o(ce," database."),ce.forEach(s),zl=F(e),ve=r(e,"H2",{id:!0});var ap=p(ve);Be=r(ap,"A",{href:!0});var np=p(Be);ga=o(np,"Tutorial"),np.forEach(s),ap.forEach(s),Ql=F(e),Le=r(e,"P",{});var ip=p(Le);ba=o(ip,"So, without wasting any further time. Lets jump right into the details."),ip.forEach(s),Vl=F(e),Ee=r(e,"H3",{id:!0});var rp=p(Ee);Ge=r(rp,"A",{href:!0});var pp=p(Ge);_a=o(pp,"Pre-Reqs"),pp.forEach(s),rp.forEach(s),Jl=F(e),C=r(e,"P",{});var Fe=p(C);ka=o(Fe,"The foremost thing are the pre-reqs that we need to follow this tutorial. First is a server with a public IP. Many of you who are reading this might already have one before moving one. Well, if you don’t you can simply get one from any of the hosting services or Cloud platforms. Personally, i use "),Cs=r(Fe,"STRONG",{});var cp=p(Cs);Ca=o(cp,"DigitalOcean"),cp.forEach(s),Oa=o(Fe," or "),Os=r(Fe,"STRONG",{});var Fp=p(Os);Sa=o(Fp,"AWS"),Fp.forEach(s),Pa=o(Fe," most of the time. And also, for the sake of this tutorial i’ll be using a "),Ss=r(Fe,"CODE",{});var dp=p(Ss);Ta=o(dp,"t2.micro"),dp.forEach(s),Aa=o(Fe," instance of EC2 service from AWS."),Fe.forEach(s),Kl=F(e),K=r(e,"P",{});var aa=p(K);$a=o(aa,"But in general what you need is an online server with "),Ps=r(aa,"STRONG",{});var fp=p(Ps);Ia=o(fp,"Ubuntu 22.04"),fp.forEach(s),ja=o(aa," installed and with publicly accessibly ports. Thi should also work just fine with Ubuntu 20.04. Let me know in comments if someone tests it."),aa.forEach(s),eo=F(e),me=r(e,"H3",{id:!0});var up=p(me);qe=r(up,"A",{href:!0});var yp=p(qe);xa=o(yp,"Installing Packages"),yp.forEach(s),up.forEach(s),so=F(e),ee=r(e,"P",{});var na=p(ee);Ra=o(na,"First, lets update our "),Ts=r(na,"STRONG",{});var vp=p(Ts);Na=o(vp,"ubuntu"),vp.forEach(s),Ba=o(na," machine and install the required packages:"),na.forEach(s),to=F(e),As=f(e,!1),$s=F(e),Ue=r(e,"P",{});var Ep=p(Ue);j(he.$$.fragment,Ep),Ep.forEach(s),lo=F(e),se=r(e,"P",{});var ia=p(se);La=o(ia,"Before going forward, lets escalate to the "),Is=r(ia,"CODE",{});var mp=p(Is);Ga=o(mp,"root"),mp.forEach(s),qa=o(ia," shell as we might run into the permission issues again and again. And don’t worry, we will see the project and permissions of the other files at the last:"),ia.forEach(s),oo=F(e),js=f(e,!1),xs=F(e),We=r(e,"P",{});var hp=p(We);j(De.$$.fragment,hp),hp.forEach(s),ao=F(e),we=r(e,"H3",{id:!0});var Dp=p(we);He=r(Dp,"A",{href:!0});var wp=p(He);Ua=o(wp,"Setting up Project Directory"),wp.forEach(s),Dp.forEach(s),no=F(e),O=r(e,"P",{});var de=p(O);Wa=o(de,"Now, lets move to the "),Rs=r(de,"CODE",{});var gp=p(Rs);Ha=o(gp,"/var/www/"),gp.forEach(s),Ma=o(de," directory where we are going to place our project folder. I am going to setup a project from scratch for demo purposes using "),Ns=r(de,"CODE",{});var bp=p(Ns);Za=o(bp,"django-admin"),bp.forEach(s),Ya=o(de," command. But if you already have one, make sure its uploaded correctly. I normally used "),Bs=r(de,"CODE",{});var _p=p(Bs);Xa=o(_p,"rsync"),_p.forEach(s),za=o(de," for this:"),de.forEach(s),io=F(e),Ls=f(e,!1),Gs=F(e),te=r(e,"P",{});var ra=p(te);Qa=o(ra,"For now, i will setup a new project from scratch and name it "),qs=r(ra,"CODE",{});var kp=p(qs);Va=o(kp,"myweb"),kp.forEach(s),Ja=o(ra,". Lets install django and initialize an empty project:"),ra.forEach(s),ro=F(e),Us=f(e,!1),Ws=F(e),q=r(e,"P",{});var Es=p(q);Ka=o(Es,"Move to "),Hs=r(Es,"CODE",{});var Cp=p(Hs);en=o(Cp,"myweb"),Cp.forEach(s),sn=o(Es," and initialize new "),Ms=r(Es,"EM",{});var Op=p(Ms);tn=o(Op,"virtual environment"),Op.forEach(s),ln=o(Es,":"),Es.forEach(s),po=F(e),Zs=f(e,!1),Ys=F(e),le=r(e,"P",{});var pa=p(le);on=o(pa,"Moving forward, activate the virtual environment and install all the necessary packages that you might have placed in "),Xs=r(pa,"CODE",{});var Sp=p(Xs);an=o(Sp,"requirements.txt"),Sp.forEach(s),nn=o(pa,"."),pa.forEach(s),co=F(e),zs=f(e,!1),Qs=F(e),ge=r(e,"H3",{id:!0});var Pp=p(ge);Me=r(Pp,"A",{href:!0});var Tp=p(Me);rn=o(Tp,"Setting up Postgres (Database)"),Tp.forEach(s),Pp.forEach(s),Fo=F(e),oe=r(e,"P",{});var ca=p(oe);pn=o(ca,"You could move forward without this step if you are planning on using some other database or the default sqlite. But please note that you will have to install the relevant packages for that. While in this case, i am only focusing on "),Vs=r(ca,"CODE",{});var Ap=p(Vs);cn=o(Ap,"postgres"),Ap.forEach(s),Fn=o(ca,"."),ca.forEach(s),fo=F(e),ae=r(e,"P",{});var Fa=p(ae);dn=o(Fa,"Launch "),Js=r(Fa,"CODE",{});var $p=p(Js);fn=o($p,"postgres"),$p.forEach(s),un=o(Fa,":"),Fa.forEach(s),uo=F(e),Ks=f(e,!1),et=F(e),U=r(e,"P",{});var ms=p(U);yn=o(ms,"The next steps are supposed to be inside the "),st=r(ms,"CODE",{});var Ip=p(st);vn=o(Ip,"postgres"),Ip.forEach(s),En=o(ms," terminal. Create a new database. I am naming it "),tt=r(ms,"CODE",{});var jp=p(tt);mn=o(jp,"hashbase"),jp.forEach(s),hn=o(ms,". Setup a new user and assign it to the database that we just created:"),ms.forEach(s),yo=F(e),lt=f(e,!1),ot=F(e),Ze=r(e,"P",{});var xp=p(Ze);Dn=o(xp,"Next, we will modify a couple of our database settings for better processing and django functions:"),xp.forEach(s),vo=F(e),at=f(e,!1),nt=F(e),Ye=r(e,"P",{});var Rp=p(Ye);wn=o(Rp,"Quit:"),Rp.forEach(s),Eo=F(e),it=f(e,!1),rt=F(e),Xe=r(e,"P",{});var Np=p(Xe);j(be.$$.fragment,Np),Np.forEach(s),mo=F(e),_e=r(e,"H3",{id:!0});var Bp=p(_e);ze=r(Bp,"A",{href:!0});var Lp=p(ze);gn=o(Lp,"Project Settings"),Lp.forEach(s),Bp.forEach(s),ho=F(e),W=r(e,"P",{});var hs=p(W);bn=o(hs,"We will look at the project settings now that needs to be replaced or modified. Considering we are in the project directory located at "),pt=r(hs,"CODE",{});var Gp=p(pt);_n=o(Gp,"/var/www/myweb"),Gp.forEach(s),kn=o(hs,". Lets edit the "),ct=r(hs,"CODE",{});var qp=p(ct);Cn=o(qp,"settings.py"),qp.forEach(s),On=o(hs," file:"),hs.forEach(s),Do=F(e),Ft=f(e,!1),dt=F(e),Qe=r(e,"P",{});var Up=p(Qe);j(ke.$$.fragment,Up),Up.forEach(s),wo=F(e),g=r(e,"P",{});var X=p(g);Sn=o(X,"Edit the "),ft=r(X,"CODE",{});var Wp=p(ft);Pn=o(Wp,"ALLOWED_HOSTS"),Wp.forEach(s),Tn=o(X," list variable to include all the "),ut=r(X,"STRONG",{});var Hp=p(ut);An=o(Hp,"IPs"),Hp.forEach(s),$n=o(X," or "),yt=r(X,"STRONG",{});var Mp=p(yt);In=o(Mp,"Hostnames"),Mp.forEach(s),jn=o(X," that you plan on using for the website. In here, i am simply going to put the "),vt=r(X,"STRONG",{});var Zp=p(vt);xn=o(Zp,"PUBLIC IP"),Zp.forEach(s),Rn=o(X," of the server i am on. You can put domain names if you are going to configure one with the website."),X.forEach(s),go=F(e),Et=f(e,!1),mt=F(e),S=r(e,"P",{});var fe=p(S);Nn=o(fe,"Now, move a bit below to this and find the "),ht=r(fe,"CODE",{});var Yp=p(ht);Bn=o(Yp,"DATABASES"),Yp.forEach(s),Ln=o(fe," variable section. By default it is configured to use "),Dt=r(fe,"CODE",{});var Xp=p(Dt);Gn=o(Xp,"sqlite3"),Xp.forEach(s),qn=o(fe," as its database. We will change the settings to use "),wt=r(fe,"CODE",{});var zp=p(wt);Un=o(zp,"postgresql"),zp.forEach(s),Wn=o(fe,":"),fe.forEach(s),bo=F(e),gt=f(e,!1),bt=F(e),h=r(e,"P",{});var A=p(h);Hn=o(A,"After this, we need to setup a "),_t=r(A,"CODE",{});var Qp=p(_t);Mn=o(Qp,"static"),Qp.forEach(s),Zn=o(A," and "),kt=r(A,"CODE",{});var Vp=p(kt);Yn=o(Vp,"media"),Vp.forEach(s),Xn=o(A," directory where our project static files are going to be stored. The "),Ct=r(A,"CODE",{});var Jp=p(Ct);zn=o(Jp,"media"),Jp.forEach(s),Qn=o(A," folder will contain files that are supposed to be uploaded by the user of the application. So, again in the "),Ot=r(A,"CODE",{});var Kp=p(Ot);Vn=o(Kp,"settings.py"),Kp.forEach(s),Jn=o(A," file, move at the end of the file and find the line "),St=r(A,"CODE",{});var ec=p(St);Kn=o(ec,"STATIC_URL = 'static/'"),ec.forEach(s),ei=o(A," and add some new content below it:"),A.forEach(s),_o=F(e),Pt=f(e,!1),Tt=F(e),E=r(e,"P",{});var w=p(E);si=o(w,"The "),At=r(w,"CODE",{});var sc=p(At);ti=o(sc,"STATIC_ROOT"),sc.forEach(s),li=o(w," defines the folder where the public content like "),$t=r(w,"EM",{});var tc=p($t);oi=o(tc,"css,js or imgs"),tc.forEach(s),ai=o(w," are going to be stored upon running the "),It=r(w,"CODE",{});var lc=p(It);ni=o(lc,"collectstatic"),lc.forEach(s),ii=o(w," command on "),jt=r(w,"CODE",{});var oc=p(jt);ri=o(oc,"manage.py"),oc.forEach(s),pi=o(w," file. Please note that its totally different from the "),xt=r(w,"CODE",{});var ac=p(xt);ci=o(ac,"STATICFILES_DIRS"),ac.forEach(s),Fi=o(w," variable which is used to define the directories to locate static files. Think of "),Rt=r(w,"CODE",{});var nc=p(Rt);di=o(nc,"STATIC_ROOT"),nc.forEach(s),fi=o(w," as more of a "),Nt=r(w,"STRONG",{});var ic=p(Nt);ui=o(ic,"production"),ic.forEach(s),yi=o(w," specific variable."),w.forEach(s),ko=F(e),Ce=r(e,"H3",{id:!0});var rc=p(Ce);Ve=r(rc,"A",{href:!0});var pc=p(Ve);vi=o(pc,"Spin up the Project"),pc.forEach(s),rc.forEach(s),Co=F(e),Je=r(e,"P",{});var cc=p(Je);Ei=o(cc,"Lets move towards spinning up the project for the public. For that, we will do the normal django commands like migrations and super user."),cc.forEach(s),Oo=F(e),Ke=r(e,"P",{});var Fc=p(Ke);mi=o(Fc,"Run migrations and create a superuser:"),Fc.forEach(s),So=F(e),Bt=f(e,!1),Lt=F(e),es=r(e,"P",{});var dc=p(es);j(Oe.$$.fragment,dc),dc.forEach(s),Po=F(e),P=r(e,"P",{});var ue=p(P);hi=o(ue,"After this, we will run the "),Gt=r(ue,"CODE",{});var fc=p(Gt);Di=o(fc,"collectstatic"),fc.forEach(s),wi=o(ue," command to locate all the static files we have in our project and put them to the folder that we defined at "),qt=r(ue,"CODE",{});var uc=p(qt);gi=o(uc,"STATIC_ROOT"),uc.forEach(s),bi=o(ue," variable. These static files will be served by the "),Ut=r(ue,"CODE",{});var yc=p(Ut);_i=o(yc,"nginx"),yc.forEach(s),ki=o(ue," server and not from django like we see during the development."),ue.forEach(s),To=F(e),Wt=f(e,!1),Ht=F(e),ss=r(e,"P",{});var vc=p(ss);j(Se.$$.fragment,vc),vc.forEach(s),Ao=F(e),H=r(e,"P",{});var Ds=p(H);Ci=o(Ds,"You can now execute the "),Mt=r(Ds,"CODE",{});var Ec=p(Mt);Oi=o(Ec,"runserver"),Ec.forEach(s),Si=o(Ds," command on public interface to see your website. Before also make sure nginx is not using the port "),Zt=r(Ds,"CODE",{});var mc=p(Zt);Pi=o(mc,"80"),mc.forEach(s),Ti=o(Ds," by default:"),Ds.forEach(s),$o=F(e),Yt=f(e,!1),Xt=F(e),ne=r(e,"P",{});var da=p(ne);Ai=o(da,"Now, if you access your website at port "),zt=r(da,"CODE",{});var hc=p(zt);$i=o(hc,"80"),hc.forEach(s),Ii=o(da," you would be able to see your project:"),da.forEach(s),Io=F(e),Qt=f(e,!1),Vt=F(e),ts=r(e,"P",{});var Dc=p(ts);j(Pe.$$.fragment,Dc),Dc.forEach(s),jo=F(e),b=r(e,"P",{});var z=p(b);ji=o(z,"Finally, back in the "),Jt=r(z,"CODE",{});var wc=p(Jt);xi=o(wc,"settings.py"),wc.forEach(s),Ri=o(z," put the "),Kt=r(z,"CODE",{});var gc=p(Kt);Ni=o(gc,"DEBUG"),gc.forEach(s),Bi=o(z," value to "),el=r(z,"CODE",{});var bc=p(el);Li=o(bc,"False"),bc.forEach(s),Gi=o(z,". You can keep it enabled if you are going to debug the project or facing some other issue. But make sure to put the value to "),sl=r(z,"CODE",{});var _c=p(sl);qi=o(_c,"False"),_c.forEach(s),Ui=o(z," for the production cases:"),z.forEach(s),xo=F(e),tl=f(e,!1),ll=F(e),ls=r(e,"P",{});var kc=p(ls);Wi=o(kc,"At this point, we have our project all ok. But this is not how we are going to host the website actually."),kc.forEach(s),Ro=F(e),Te=r(e,"H3",{id:!0});var Cc=p(Te);os=r(Cc,"A",{href:!0});var Oc=p(os);Hi=o(Oc,"Setting up Gunicorn"),Oc.forEach(s),Cc.forEach(s),No=F(e),m=r(e,"P",{});var _=p(m);Mi=o(_,"Gunicorn is the server service that we are going to configure with "),ol=r(_,"CODE",{});var Sc=p(ol);Zi=o(Sc,"nginx"),Sc.forEach(s),Yi=o(_," for the public. We will configure a new "),al=r(_,"CODE",{});var Pc=p(al);Xi=o(Pc,"systemd"),Pc.forEach(s),zi=o(_," service for this. But before, we will test if "),nl=r(_,"CODE",{});var Tc=p(nl);Qi=o(Tc,"gunicorn"),Tc.forEach(s),Vi=o(_," is really working or not. So, simply bind gunicorn to the "),il=r(_,"CODE",{});var Ac=p(il);Ji=o(Ac,"0.0.0.0"),Ac.forEach(s),Ki=o(_," and test if we can access the website at port "),rl=r(_,"CODE",{});var $c=p(rl);er=o($c,"80"),$c.forEach(s),sr=o(_," like we did before. Note that we are still inside "),pl=r(_,"CODE",{});var Ic=p(pl);tr=o(Ic,"/var/www/myweb"),Ic.forEach(s),lr=o(_," directory"),_.forEach(s),Bo=F(e),cl=f(e,!1),Fl=F(e),as=r(e,"P",{});var jc=p(as);j(Ae.$$.fragment,jc),jc.forEach(s),Lo=F(e),ie=r(e,"P",{});var fa=p(ie);or=o(fa,"Fire up "),dl=r(fa,"CODE",{});var xc=p(dl);ar=o(xc,"nano"),xc.forEach(s),nr=o(fa," again for the gunicorn service and do the configuration:"),fa.forEach(s),Go=F(e),fl=f(e,!1),ul=F(e),M=r(e,"P",{});var ws=p(M);ir=o(ws,"Inside the file. I’ll not get into much details of what is happening here. But you can refer to the "),yl=r(ws,"CODE",{});var Rc=p(yl);rr=o(Rc,"systemd"),Rc.forEach(s),pr=o(ws," documentation for more in depth detail. However, we will review the "),vl=r(ws,"CODE",{});var Nc=p(vl);cr=o(Nc,"Service"),Nc.forEach(s),Fr=o(ws," section here:"),ws.forEach(s),qo=F(e),El=f(e,!1),ml=F(e),D=r(e,"P",{});var $=p(D);dr=o($,"The "),hl=r($,"CODE",{});var Bc=p(hl);fr=o(Bc,"User"),Bc.forEach(s),ur=o($," and "),Dl=r($,"CODE",{});var Lc=p(Dl);yr=o(Lc,"Group"),Lc.forEach(s),vr=o($," defines the privileges the command is going to be executed with. The complete command is specified with "),wl=r($,"CODE",{});var Gc=p(wl);Er=o(Gc,"ExecStart"),Gc.forEach(s),mr=o($," variable. Make sure to specify "),gl=r($,"CODE",{});var qc=p(gl);hr=o(qc,"WorkingDirectory"),qc.forEach(s),Dr=o($," as well. Otherwise, gunicorn wouldn’t be able to locate the "),bl=r($,"CODE",{});var Uc=p(bl);wr=o(Uc,"myweb.wsgi"),Uc.forEach(s),gr=o($," on path. Save the file."),$.forEach(s),Uo=F(e),ns=r(e,"P",{});var Wc=p(ns);br=o(Wc,"Make sure to change the project’s owner before starting gunicorn:"),Wc.forEach(s),Wo=F(e),_l=f(e,!1),kl=F(e),is=r(e,"P",{});var Hc=p(is);_r=o(Hc,"Start the service after saving and make that its running and doesn’t have any errors. If there are errors, you will need to fix them before moving forward:"),Hc.forEach(s),Ho=F(e),Cl=f(e,!1),Ol=F(e),rs=r(e,"P",{});var Mc=p(rs);j($e.$$.fragment,Mc),Mc.forEach(s),Mo=F(e),ps=r(e,"P",{});var Zc=p(ps);kr=o(Zc,"You can see more detailed logs of gunicorn if there are errors using:"),Zc.forEach(s),Zo=F(e),Sl=f(e,!1),Pl=F(e),Ie=r(e,"H3",{id:!0});var Yc=p(Ie);cs=r(Yc,"A",{href:!0});var Xc=p(cs);Cr=o(Xc,"Setting UP NGINX"),Xc.forEach(s),Yc.forEach(s),Yo=F(e),Z=r(e,"P",{});var gs=p(Z);Or=o(gs,"This is the last step. We will configure "),Tl=r(gs,"CODE",{});var zc=p(Tl);Sr=o(zc,"nginx"),zc.forEach(s),Pr=o(gs," which in short is the public server and will take requests from the public and forward it to gunicorn as a reverse proxy. Remove the default enabled nginx website and create a new "),Al=r(gs,"CODE",{});var Qc=p(Al);Tr=o(Qc,"nginx"),Qc.forEach(s),Ar=o(gs," project file:"),gs.forEach(s),Xo=F(e),$l=f(e,!1),Il=F(e),Fs=r(e,"P",{});var Vc=p(Fs);$r=o(Vc,"Inside the file, configure your web server:"),Vc.forEach(s),zo=F(e),jl=f(e,!1),xl=F(e),re=r(e,"P",{});var ua=p(re);Ir=o(ua,"In the above configuration, make sure you have changed it according to your requirements. One thing to look out for is the "),Rl=r(ua,"CODE",{});var Jc=p(Rl);jr=o(Jc,"server_name"),Jc.forEach(s),xr=o(ua," directive. If you are working with a domain name, make sure to replace it correctly. Another thing would be the paths that are mentioned in the configuration. Make sure all of the mentioned paths in your correct according to your settings."),ua.forEach(s),Qo=F(e),pe=r(e,"P",{});var ya=p(pe);Rr=o(ya,"Save the file and enable this nginx project by creating its soft link at "),Nl=r(ya,"CODE",{});var Kc=p(Nl);Nr=o(Kc,"sites-enabled"),Kc.forEach(s),Br=o(ya," directory:"),ya.forEach(s),Vo=F(e),Bl=f(e,!1),Ll=F(e),ds=r(e,"P",{});var eF=p(ds);Lr=o(eF,"Check nginx configuration and restart nginx:"),eF.forEach(s),Jo=F(e),Gl=f(e,!1),ql=F(e),fs=r(e,"P",{});var sF=p(fs);j(je.$$.fragment,sF),sF.forEach(s),Ko=F(e),T=r(e,"P",{});var ye=p(T);Gr=o(ye,"If everything goes correctly, you should be able to see the nginx service running and if you visit the "),Ul=r(ye,"STRONG",{});var tF=p(Ul);qr=o(tF,"PUBLIC IP"),tF.forEach(s),Ur=o(ye," or "),Wl=r(ye,"STRONG",{});var lF=p(Wl);Wr=o(lF,"Domain Name"),lF.forEach(s),Hr=o(ye," now, you will see your website. For the final test, visit the "),Hl=r(ye,"CODE",{});var oF=p(Hl);Mr=o(oF,"/admin"),oF.forEach(s),Zr=o(ye," page to make sure the static files are also served correctly from our nginx service:"),ye.forEach(s),ea=F(e),Ml=f(e,!1),Zl=F(e),us=r(e,"P",{});var aF=p(us);j(xe.$$.fragment,aF),aF.forEach(s),sa=F(e),Y=r(e,"P",{});var bs=p(Y);Yr=o(bs,"In case your static are not served properly, you can check the "),Yl=r(bs,"CODE",{});var nF=p(Yl);Xr=o(nF,"nginx"),nF.forEach(s),zr=o(bs," error logs at: "),Xl=r(bs,"CODE",{});var iF=p(Xl);Qr=o(iF,"/var/log/nginx/error.log"),iF.forEach(s),Vr=o(bs," and debug the issues."),bs.forEach(s),ta=F(e),Re=r(e,"H2",{id:!0});var rF=p(Re);ys=r(rF,"A",{href:!0});var pF=p(ys);Jr=o(pF,"Conclusion"),pF.forEach(s),rF.forEach(s),la=F(e),vs=r(e,"P",{});var cF=p(vs);Kr=o(cF,"Thanks for making it through. All in all, we saw how to host a django website using gunicorn, nginx and postgresql. Its not very tricky but yes sometimes debugging the configuration files can take time. So, while doing your own, make sure to double check your configuration files and make sure that they are making sense for what they are supposed to do."),cF.forEach(s),this.h()},h(){v(k,"href","#introduction"),v(y,"id","introduction"),v(Be,"href","#tutorial"),v(ve,"id","tutorial"),v(Ge,"href","#pre-reqs"),v(Ee,"id","pre-reqs"),v(qe,"href","#installing-packages"),v(me,"id","installing-packages"),As.a=$s,js.a=xs,v(He,"href","#setting-up-project-directory"),v(we,"id","setting-up-project-directory"),Ls.a=Gs,Us.a=Ws,Zs.a=Ys,zs.a=Qs,v(Me,"href","#setting-up-postgres-database"),v(ge,"id","setting-up-postgres-database"),Ks.a=et,lt.a=ot,at.a=nt,it.a=rt,v(ze,"href","#project-settings"),v(_e,"id","project-settings"),Ft.a=dt,Et.a=mt,gt.a=bt,Pt.a=Tt,v(Ve,"href","#spin-up-the-project"),v(Ce,"id","spin-up-the-project"),Bt.a=Lt,Wt.a=Ht,Yt.a=Xt,Qt.a=Vt,tl.a=ll,v(os,"href","#setting-up-gunicorn"),v(Te,"id","setting-up-gunicorn"),cl.a=Fl,fl.a=ul,El.a=ml,_l.a=kl,Cl.a=Ol,Sl.a=Pl,v(cs,"href","#setting-up-nginx"),v(Ie,"id","setting-up-nginx"),$l.a=Il,jl.a=xl,Bl.a=Ll,Gl.a=ql,Ml.a=Zl,v(ys,"href","#conclusion"),v(Re,"id","conclusion")},m(e,a){n(e,y,a),t(y,k),t(k,Q),n(e,V,a),n(e,u,a),t(u,L),t(u,J),t(J,va),t(u,Ea),t(u,_s),t(_s,ma),t(u,ha),t(u,ks),t(ks,Da),t(u,wa),n(e,zl,a),n(e,ve,a),t(ve,Be),t(Be,ga),n(e,Ql,a),n(e,Le,a),t(Le,ba),n(e,Vl,a),n(e,Ee,a),t(Ee,Ge),t(Ge,_a),n(e,Jl,a),n(e,C,a),t(C,ka),t(C,Cs),t(Cs,Ca),t(C,Oa),t(C,Os),t(Os,Sa),t(C,Pa),t(C,Ss),t(Ss,Ta),t(C,Aa),n(e,Kl,a),n(e,K,a),t(K,$a),t(K,Ps),t(Ps,Ia),t(K,ja),n(e,eo,a),n(e,me,a),t(me,qe),t(qe,xa),n(e,so,a),n(e,ee,a),t(ee,Ra),t(ee,Ts),t(Ts,Na),t(ee,Ba),n(e,to,a),As.m(uF,e,a),n(e,$s,a),n(e,Ue,a),x(he,Ue,null),n(e,lo,a),n(e,se,a),t(se,La),t(se,Is),t(Is,Ga),t(se,qa),n(e,oo,a),js.m(yF,e,a),n(e,xs,a),n(e,We,a),x(De,We,null),n(e,ao,a),n(e,we,a),t(we,He),t(He,Ua),n(e,no,a),n(e,O,a),t(O,Wa),t(O,Rs),t(Rs,Ha),t(O,Ma),t(O,Ns),t(Ns,Za),t(O,Ya),t(O,Bs),t(Bs,Xa),t(O,za),n(e,io,a),Ls.m(vF,e,a),n(e,Gs,a),n(e,te,a),t(te,Qa),t(te,qs),t(qs,Va),t(te,Ja),n(e,ro,a),Us.m(EF,e,a),n(e,Ws,a),n(e,q,a),t(q,Ka),t(q,Hs),t(Hs,en),t(q,sn),t(q,Ms),t(Ms,tn),t(q,ln),n(e,po,a),Zs.m(mF,e,a),n(e,Ys,a),n(e,le,a),t(le,on),t(le,Xs),t(Xs,an),t(le,nn),n(e,co,a),zs.m(hF,e,a),n(e,Qs,a),n(e,ge,a),t(ge,Me),t(Me,rn),n(e,Fo,a),n(e,oe,a),t(oe,pn),t(oe,Vs),t(Vs,cn),t(oe,Fn),n(e,fo,a),n(e,ae,a),t(ae,dn),t(ae,Js),t(Js,fn),t(ae,un),n(e,uo,a),Ks.m(DF,e,a),n(e,et,a),n(e,U,a),t(U,yn),t(U,st),t(st,vn),t(U,En),t(U,tt),t(tt,mn),t(U,hn),n(e,yo,a),lt.m(wF,e,a),n(e,ot,a),n(e,Ze,a),t(Ze,Dn),n(e,vo,a),at.m(gF,e,a),n(e,nt,a),n(e,Ye,a),t(Ye,wn),n(e,Eo,a),it.m(bF,e,a),n(e,rt,a),n(e,Xe,a),x(be,Xe,null),n(e,mo,a),n(e,_e,a),t(_e,ze),t(ze,gn),n(e,ho,a),n(e,W,a),t(W,bn),t(W,pt),t(pt,_n),t(W,kn),t(W,ct),t(ct,Cn),t(W,On),n(e,Do,a),Ft.m(_F,e,a),n(e,dt,a),n(e,Qe,a),x(ke,Qe,null),n(e,wo,a),n(e,g,a),t(g,Sn),t(g,ft),t(ft,Pn),t(g,Tn),t(g,ut),t(ut,An),t(g,$n),t(g,yt),t(yt,In),t(g,jn),t(g,vt),t(vt,xn),t(g,Rn),n(e,go,a),Et.m(kF,e,a),n(e,mt,a),n(e,S,a),t(S,Nn),t(S,ht),t(ht,Bn),t(S,Ln),t(S,Dt),t(Dt,Gn),t(S,qn),t(S,wt),t(wt,Un),t(S,Wn),n(e,bo,a),gt.m(CF,e,a),n(e,bt,a),n(e,h,a),t(h,Hn),t(h,_t),t(_t,Mn),t(h,Zn),t(h,kt),t(kt,Yn),t(h,Xn),t(h,Ct),t(Ct,zn),t(h,Qn),t(h,Ot),t(Ot,Vn),t(h,Jn),t(h,St),t(St,Kn),t(h,ei),n(e,_o,a),Pt.m(OF,e,a),n(e,Tt,a),n(e,E,a),t(E,si),t(E,At),t(At,ti),t(E,li),t(E,$t),t($t,oi),t(E,ai),t(E,It),t(It,ni),t(E,ii),t(E,jt),t(jt,ri),t(E,pi),t(E,xt),t(xt,ci),t(E,Fi),t(E,Rt),t(Rt,di),t(E,fi),t(E,Nt),t(Nt,ui),t(E,yi),n(e,ko,a),n(e,Ce,a),t(Ce,Ve),t(Ve,vi),n(e,Co,a),n(e,Je,a),t(Je,Ei),n(e,Oo,a),n(e,Ke,a),t(Ke,mi),n(e,So,a),Bt.m(SF,e,a),n(e,Lt,a),n(e,es,a),x(Oe,es,null),n(e,Po,a),n(e,P,a),t(P,hi),t(P,Gt),t(Gt,Di),t(P,wi),t(P,qt),t(qt,gi),t(P,bi),t(P,Ut),t(Ut,_i),t(P,ki),n(e,To,a),Wt.m(PF,e,a),n(e,Ht,a),n(e,ss,a),x(Se,ss,null),n(e,Ao,a),n(e,H,a),t(H,Ci),t(H,Mt),t(Mt,Oi),t(H,Si),t(H,Zt),t(Zt,Pi),t(H,Ti),n(e,$o,a),Yt.m(TF,e,a),n(e,Xt,a),n(e,ne,a),t(ne,Ai),t(ne,zt),t(zt,$i),t(ne,Ii),n(e,Io,a),Qt.m(AF,e,a),n(e,Vt,a),n(e,ts,a),x(Pe,ts,null),n(e,jo,a),n(e,b,a),t(b,ji),t(b,Jt),t(Jt,xi),t(b,Ri),t(b,Kt),t(Kt,Ni),t(b,Bi),t(b,el),t(el,Li),t(b,Gi),t(b,sl),t(sl,qi),t(b,Ui),n(e,xo,a),tl.m($F,e,a),n(e,ll,a),n(e,ls,a),t(ls,Wi),n(e,Ro,a),n(e,Te,a),t(Te,os),t(os,Hi),n(e,No,a),n(e,m,a),t(m,Mi),t(m,ol),t(ol,Zi),t(m,Yi),t(m,al),t(al,Xi),t(m,zi),t(m,nl),t(nl,Qi),t(m,Vi),t(m,il),t(il,Ji),t(m,Ki),t(m,rl),t(rl,er),t(m,sr),t(m,pl),t(pl,tr),t(m,lr),n(e,Bo,a),cl.m(IF,e,a),n(e,Fl,a),n(e,as,a),x(Ae,as,null),n(e,Lo,a),n(e,ie,a),t(ie,or),t(ie,dl),t(dl,ar),t(ie,nr),n(e,Go,a),fl.m(jF,e,a),n(e,ul,a),n(e,M,a),t(M,ir),t(M,yl),t(yl,rr),t(M,pr),t(M,vl),t(vl,cr),t(M,Fr),n(e,qo,a),El.m(xF,e,a),n(e,ml,a),n(e,D,a),t(D,dr),t(D,hl),t(hl,fr),t(D,ur),t(D,Dl),t(Dl,yr),t(D,vr),t(D,wl),t(wl,Er),t(D,mr),t(D,gl),t(gl,hr),t(D,Dr),t(D,bl),t(bl,wr),t(D,gr),n(e,Uo,a),n(e,ns,a),t(ns,br),n(e,Wo,a),_l.m(RF,e,a),n(e,kl,a),n(e,is,a),t(is,_r),n(e,Ho,a),Cl.m(NF,e,a),n(e,Ol,a),n(e,rs,a),x($e,rs,null),n(e,Mo,a),n(e,ps,a),t(ps,kr),n(e,Zo,a),Sl.m(BF,e,a),n(e,Pl,a),n(e,Ie,a),t(Ie,cs),t(cs,Cr),n(e,Yo,a),n(e,Z,a),t(Z,Or),t(Z,Tl),t(Tl,Sr),t(Z,Pr),t(Z,Al),t(Al,Tr),t(Z,Ar),n(e,Xo,a),$l.m(LF,e,a),n(e,Il,a),n(e,Fs,a),t(Fs,$r),n(e,zo,a),jl.m(GF,e,a),n(e,xl,a),n(e,re,a),t(re,Ir),t(re,Rl),t(Rl,jr),t(re,xr),n(e,Qo,a),n(e,pe,a),t(pe,Rr),t(pe,Nl),t(Nl,Nr),t(pe,Br),n(e,Vo,a),Bl.m(qF,e,a),n(e,Ll,a),n(e,ds,a),t(ds,Lr),n(e,Jo,a),Gl.m(UF,e,a),n(e,ql,a),n(e,fs,a),x(je,fs,null),n(e,Ko,a),n(e,T,a),t(T,Gr),t(T,Ul),t(Ul,qr),t(T,Ur),t(T,Wl),t(Wl,Wr),t(T,Hr),t(T,Hl),t(Hl,Mr),t(T,Zr),n(e,ea,a),Ml.m(WF,e,a),n(e,Zl,a),n(e,us,a),x(xe,us,null),n(e,sa,a),n(e,Y,a),t(Y,Yr),t(Y,Yl),t(Yl,Xr),t(Y,zr),t(Y,Xl),t(Xl,Qr),t(Y,Vr),n(e,ta,a),n(e,Re,a),t(Re,ys),t(ys,Jr),n(e,la,a),n(e,vs,a),t(vs,Kr),oa=!0},p:XF,i(e){oa||(R(he.$$.fragment,e),R(De.$$.fragment,e),R(be.$$.fragment,e),R(ke.$$.fragment,e),R(Oe.$$.fragment,e),R(Se.$$.fragment,e),R(Pe.$$.fragment,e),R(Ae.$$.fragment,e),R($e.$$.fragment,e),R(je.$$.fragment,e),R(xe.$$.fragment,e),oa=!0)},o(e){N(he.$$.fragment,e),N(De.$$.fragment,e),N(be.$$.fragment,e),N(ke.$$.fragment,e),N(Oe.$$.fragment,e),N(Se.$$.fragment,e),N(Pe.$$.fragment,e),N(Ae.$$.fragment,e),N($e.$$.fragment,e),N(je.$$.fragment,e),N(xe.$$.fragment,e),oa=!1},d(e){e&&s(y),e&&s(V),e&&s(u),e&&s(zl),e&&s(ve),e&&s(Ql),e&&s(Le),e&&s(Vl),e&&s(Ee),e&&s(Jl),e&&s(C),e&&s(Kl),e&&s(K),e&&s(eo),e&&s(me),e&&s(so),e&&s(ee),e&&s(to),e&&As.d(),e&&s($s),e&&s(Ue),B(he),e&&s(lo),e&&s(se),e&&s(oo),e&&js.d(),e&&s(xs),e&&s(We),B(De),e&&s(ao),e&&s(we),e&&s(no),e&&s(O),e&&s(io),e&&Ls.d(),e&&s(Gs),e&&s(te),e&&s(ro),e&&Us.d(),e&&s(Ws),e&&s(q),e&&s(po),e&&Zs.d(),e&&s(Ys),e&&s(le),e&&s(co),e&&zs.d(),e&&s(Qs),e&&s(ge),e&&s(Fo),e&&s(oe),e&&s(fo),e&&s(ae),e&&s(uo),e&&Ks.d(),e&&s(et),e&&s(U),e&&s(yo),e&&lt.d(),e&&s(ot),e&&s(Ze),e&&s(vo),e&&at.d(),e&&s(nt),e&&s(Ye),e&&s(Eo),e&&it.d(),e&&s(rt),e&&s(Xe),B(be),e&&s(mo),e&&s(_e),e&&s(ho),e&&s(W),e&&s(Do),e&&Ft.d(),e&&s(dt),e&&s(Qe),B(ke),e&&s(wo),e&&s(g),e&&s(go),e&&Et.d(),e&&s(mt),e&&s(S),e&&s(bo),e&&gt.d(),e&&s(bt),e&&s(h),e&&s(_o),e&&Pt.d(),e&&s(Tt),e&&s(E),e&&s(ko),e&&s(Ce),e&&s(Co),e&&s(Je),e&&s(Oo),e&&s(Ke),e&&s(So),e&&Bt.d(),e&&s(Lt),e&&s(es),B(Oe),e&&s(Po),e&&s(P),e&&s(To),e&&Wt.d(),e&&s(Ht),e&&s(ss),B(Se),e&&s(Ao),e&&s(H),e&&s($o),e&&Yt.d(),e&&s(Xt),e&&s(ne),e&&s(Io),e&&Qt.d(),e&&s(Vt),e&&s(ts),B(Pe),e&&s(jo),e&&s(b),e&&s(xo),e&&tl.d(),e&&s(ll),e&&s(ls),e&&s(Ro),e&&s(Te),e&&s(No),e&&s(m),e&&s(Bo),e&&cl.d(),e&&s(Fl),e&&s(as),B(Ae),e&&s(Lo),e&&s(ie),e&&s(Go),e&&fl.d(),e&&s(ul),e&&s(M),e&&s(qo),e&&El.d(),e&&s(ml),e&&s(D),e&&s(Uo),e&&s(ns),e&&s(Wo),e&&_l.d(),e&&s(kl),e&&s(is),e&&s(Ho),e&&Cl.d(),e&&s(Ol),e&&s(rs),B($e),e&&s(Mo),e&&s(ps),e&&s(Zo),e&&Sl.d(),e&&s(Pl),e&&s(Ie),e&&s(Yo),e&&s(Z),e&&s(Xo),e&&$l.d(),e&&s(Il),e&&s(Fs),e&&s(zo),e&&jl.d(),e&&s(xl),e&&s(re),e&&s(Qo),e&&s(pe),e&&s(Vo),e&&Bl.d(),e&&s(Ll),e&&s(ds),e&&s(Jo),e&&Gl.d(),e&&s(ql),e&&s(fs),B(je),e&&s(Ko),e&&s(T),e&&s(ea),e&&Ml.d(),e&&s(Zl),e&&s(us),B(xe),e&&s(sa),e&&s(Y),e&&s(ta),e&&s(Re),e&&s(la),e&&s(vs)}}}function VF(Ne){let y,k;const Q=[Ne[0],fF];let V={$$slots:{default:[QF]},$$scope:{ctx:Ne}};for(let u=0;u<Q.length;u+=1)V=ep(V,Q[u]);return y=new zF({props:V}),{c(){I(y.$$.fragment)},l(u){j(y.$$.fragment,u)},m(u,L){x(y,u,L),k=!0},p(u,[L]){const J=L&1?YF(Q,[L&1&&FF(u[0]),L&0&&FF(fF)]):{};L&2&&(J.$$scope={dirty:L,ctx:u}),y.$set(J)},i(u){k||(R(y.$$.fragment,u),k=!0)},o(u){N(y.$$.fragment,u),k=!1},d(u){B(y,u)}}}const fF={title:"Deploy a Django Application on Ubuntu 22.04 with Gunicorn & NGINX",tags:["django","deployment","development","drf","python","ubuntu"],categories:["Linux","Development"],summary:"A Detailed walkthrough of the process of deploying a django application on a ubuntu server from scratch. This guide covers the deployment stages with Gunicorn, NGINX and Postgresql.",created:"2023-09-11T00:00:00.000Z",lastmod:"2023-10-29T00:00:00.000Z",image:"https://github.com/hash3liZer/khatta/assets/29171692/ed7dd92d-f7d1-4646-9194-e02102945392",flags:[],updated:"2024-12-26T18:03:40.482Z",slug:"/blog/2023/deploy-django-website-nginx-gunicorn-ubuntu-22/+page.md",path:"/blog/2023/deploy-django-website-nginx-gunicorn-ubuntu-22",toc:[{depth:2,title:"Introduction",slug:"introduction"},{depth:2,title:"Tutorial",slug:"tutorial"},{depth:3,title:"Pre-Reqs",slug:"pre-reqs"},{depth:3,title:"Installing Packages",slug:"installing-packages"},{depth:3,title:"Setting up Project Directory",slug:"setting-up-project-directory"},{depth:3,title:"Setting up Postgres (Database)",slug:"setting-up-postgres-database"},{depth:3,title:"Project Settings",slug:"project-settings"},{depth:3,title:"Spin up the Project",slug:"spin-up-the-project"},{depth:3,title:"Setting up Gunicorn",slug:"setting-up-gunicorn"},{depth:3,title:"Setting UP NGINX",slug:"setting-up-nginx"},{depth:2,title:"Conclusion",slug:"conclusion"}]};function JF(Ne,y,k){return Ne.$$set=Q=>{k(0,y=ep(ep({},y),dF(Q)))},y=dF(y),[y]}class td extends HF{constructor(y){super(),MF(this,y,JF,VF,ZF,{})}}export{td as component};
