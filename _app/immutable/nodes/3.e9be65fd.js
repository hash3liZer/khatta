import{S as _a,i as xa,s as ka,U as Bl,y as Ea,z as va,A as ha,V as za,W as ia,g as fa,d as ua,B as ma,X as ya,k as p,q as o,a as y,Y as hs,e as Da,l as t,m as F,r as n,h as l,c as D,Z as fs,n as I,b as r,D as a,E as Ia}from"../chunks/index.725d15e1.js";import{P as Ta}from"../chunks/post_layout.1a04af22.js";import{I as Pa}from"../chunks/post_card.5135074f.js";function ja(S){let i,v,b,g,c,h,A,Ws,Rs,us,T,B,Us,ms,d,Hs,U,qs,Zs,H,Xs,Vs,q,Ys,Gs,Z,Js,Ks,ws,X,wa=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" javascript="true"><div class="language-id">javascript</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">...</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">app</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">get</span><span style="color: #EEFFFF">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">/report/:sane</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #C792EA">async</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">req</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> res</span><span style="color: #89DDFF">)</span><span style="color: #EEFFFF"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #C792EA">let</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">ctx</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #89DDFF">try</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #EEFFFF">ctx</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">await</span><span style="color: #F07178"> (</span><span style="color: #89DDFF">await</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">browser</span><span style="color: #F07178">)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">createIncognitoBrowserContext</span><span style="color: #F07178">()</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">visit</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #C792EA">async</span><span style="color: #F07178"> </span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">browser</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">sane</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">      </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">page</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">await</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">browser</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">newPage</span><span style="color: #F07178">()</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">      </span><span style="color: #89DDFF">await</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">page</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">goto</span><span style="color: #F07178">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">http://localhost:3000</span><span style="color: #89DDFF">"</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">      </span><span style="color: #89DDFF">await</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">page</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">setCookie</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#123;</span><span style="color: #F07178"> name</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">flag</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> value</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">process</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">env</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">FLAG</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#125;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">      </span><span style="color: #89DDFF">await</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">page</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">goto</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#96;</span><span style="color: #C3E88D">http://localhost:3000/</span><span style="color: #89DDFF">$&#123;</span><span style="color: #EEFFFF">sane</span><span style="color: #89DDFF">&#125;&#96;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">      </span><span style="color: #89DDFF">await</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">page</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">waitForNetworkIdle</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#123;</span><span style="color: #F07178"> timeout</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #F78C6C">5000</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#125;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">      </span><span style="color: #89DDFF">await</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">page</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">close</span><span style="color: #F07178">()</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #89DDFF">&#125;;</span></div><div class='line'></div><div class='line'><span style="color: #89DDFF">...</span></div><div class='line'></div><div class='line'><span style="color: #546E7A">// sanes.ejs file being parsed from the output</span></div><div class='line'><span style="color: #EEFFFF">app</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">get</span><span style="color: #F07178">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">/:sane</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">req</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">res</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">sane</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">sanes</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">get</span><span style="color: #F07178">(</span><span style="color: #EEFFFF">req</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">params</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">sane</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #89DDFF">if</span><span style="color: #F07178"> (</span><span style="color: #89DDFF">!</span><span style="color: #EEFFFF">sane</span><span style="color: #F07178">) </span><span style="color: #89DDFF">return</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">res</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">status</span><span style="color: #F07178">(</span><span style="color: #F78C6C">404</span><span style="color: #F07178">)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">send</span><span style="color: #F07178">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">not found</span><span style="color: #89DDFF">"</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'></div><div class='line'><span style="color: #F07178">  </span><span style="color: #EEFFFF">res</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">render</span><span style="color: #F07178">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">sanes</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">    id</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">req</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">params</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">sane</span><span style="color: #89DDFF">,</span></div><div class='line'><span style="color: #F07178">    title</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #82AAFF">encodeURIComponent</span><span style="color: #F07178">(</span><span style="color: #EEFFFF">sane</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">title</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></div><div class='line'><span style="color: #F07178">    body</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #82AAFF">encodeURIComponent</span><span style="color: #F07178">(</span><span style="color: #EEFFFF">sane</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">body</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #89DDFF">&#125;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #89DDFF">&#125;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div></code></div></pre>`,V,L,Qs,bs,Y,ba=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" html="true"><div class="language-id">html</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h1</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">title</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #89DDFF">        &lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #EEFFFF">            </span><span style="color: #C792EA">const</span><span style="color: #EEFFFF"> sanitizer </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">new</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">Sanitizer</span><span style="color: #EEFFFF">()</span><span style="color: #89DDFF">;</span><span style="color: #EEFFFF">   </span><span style="color: #89DDFF">&lt;!--</span><span style="color: #EEFFFF"> This is whee the sanitizer API is being installed </span><span style="color: #89DDFF">--&gt;</span></div><div class='line'><span style="color: #EEFFFF">            document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getElementById</span><span style="color: #EEFFFF">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">title</span><span style="color: #89DDFF">"</span><span style="color: #EEFFFF">)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">setHTML</span><span style="color: #EEFFFF">(</span><span style="color: #82AAFF">decodeURIComponent</span><span style="color: #EEFFFF">(</span><span style="color: #89DDFF">&#96;</span><span style="color: #C3E88D">&lt;%- title %&gt;</span><span style="color: #89DDFF">&#96;</span><span style="color: #EEFFFF">)</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span><span style="color: #EEFFFF"> sanitizer </span><span style="color: #89DDFF">&#125;</span><span style="color: #EEFFFF">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">div</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">paste</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #89DDFF">        &lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #EEFFFF">            </span><span style="color: #C792EA">class</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">Debug</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">                </span><span style="color: #F07178">#sanitize</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF">                </span><span style="color: #C792EA">constructor</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">sanitize </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">)</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">                    </span><span style="color: #89DDFF">this.</span><span style="color: #EEFFFF">#sanitize</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">sanitize</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">                </span><span style="color: #C792EA">get</span><span style="color: #EEFFFF"> </span><span style="color: #F07178">sanitize</span><span style="color: #89DDFF">()</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">                    </span><span style="color: #89DDFF">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">this.</span><span style="color: #EEFFFF">#sanitize</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #EEFFFF">            </span><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">            </span><span style="color: #C792EA">async</span><span style="color: #EEFFFF"> </span><span style="color: #C792EA">function</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">loadBody</span><span style="color: #89DDFF">()</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #89DDFF">&lt;!</span><span style="color: #F07178"> </span><span style="color: #89DDFF">--</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">VULNERABLE</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">CODE</span><span style="color: #F07178"> </span><span style="color: #89DDFF">--&gt;</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #C792EA">let</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">extension</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">null;</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #89DDFF">if</span><span style="color: #F07178"> (</span><span style="color: #EEFFFF">window</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">debug</span><span style="color: #89DDFF">?.</span><span style="color: #EEFFFF">extension</span><span style="color: #F07178">) </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">                    </span><span style="color: #C792EA">let</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">res</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">await</span><span style="color: #F07178"> </span><span style="color: #82AAFF">fetch</span><span style="color: #F07178">(</span><span style="color: #EEFFFF">window</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">debug</span><span style="color: #89DDFF">?.</span><span style="color: #EEFFFF">extension</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">toString</span><span style="color: #F07178">())</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">                    </span><span style="color: #EEFFFF">extension</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">await</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">res</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">json</span><span style="color: #F07178">()</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #F07178">                </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">debug</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #FFCB6B">Object</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">assign</span><span style="color: #F07178">(</span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #82AAFF">Debug</span><span style="color: #F07178">(</span><span style="color: #FF9CAC">true</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">extension</span><span style="color: #F07178"> </span><span style="color: #89DDFF">??</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#123;</span><span style="color: #F07178"> report</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">true</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#125;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #89DDFF">&lt;!--</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">VULNERABLE</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">CODE</span><span style="color: #F07178"> </span><span style="color: #89DDFF">--&gt;</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #C792EA">let</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">body</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #82AAFF">decodeURIComponent</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#96;</span><span style="color: #C3E88D">&lt;%- body %&gt;</span><span style="color: #89DDFF">&#96;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #89DDFF">if</span><span style="color: #F07178"> (</span><span style="color: #EEFFFF">debug</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">report</span><span style="color: #F07178">) </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">                    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">reportLink</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">createElement</span><span style="color: #F07178">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">a</span><span style="color: #89DDFF">"</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">                    </span><span style="color: #EEFFFF">reportLink</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">innerHTML</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#96;</span><span style="color: #C3E88D">Report &lt;%= id %&gt;</span><span style="color: #89DDFF">&#96;</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">                    </span><span style="color: #EEFFFF">reportLink</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">href</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#96;</span><span style="color: #C3E88D">report/&lt;%= id %&gt;</span><span style="color: #89DDFF">&#96;</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">                    </span><span style="color: #EEFFFF">reportLink</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">style</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">marginTop</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">1rem</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">                    </span><span style="color: #EEFFFF">reportLink</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">style</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">display</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">block</span><span style="color: #89DDFF">"</span></div><div class='line'></div><div class='line'><span style="color: #F07178">                    </span><span style="color: #EEFFFF">document</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">body</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">appendChild</span><span style="color: #F07178">(</span><span style="color: #EEFFFF">reportLink</span><span style="color: #F07178">)</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #F07178">                </span><span style="color: #89DDFF">&lt;!--</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">EXECUTION</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">POINT</span><span style="color: #F07178"> </span><span style="color: #89DDFF">--&gt;</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #89DDFF">if</span><span style="color: #F07178"> (</span><span style="color: #EEFFFF">debug</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">sanitize</span><span style="color: #F07178">) </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">                    </span><span style="color: #EEFFFF">document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getElementById</span><span style="color: #F07178">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">paste</span><span style="color: #89DDFF">"</span><span style="color: #F07178">)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">setHTML</span><span style="color: #F07178">(</span><span style="color: #EEFFFF">body</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#123;</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">sanitizer</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#125;</span><span style="color: #F07178">)</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #89DDFF">&#125;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">else</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">                    </span><span style="color: #EEFFFF">document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getElementById</span><span style="color: #F07178">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">paste</span><span style="color: #89DDFF">"</span><span style="color: #F07178">)</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">innerHTML</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">body</span></div><div class='line'><span style="color: #F07178">                </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #F07178">            </span><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">            </span><span style="color: #82AAFF">loadBody</span><span style="color: #EEFFFF">()</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span></div><div class='line'></div><div class='line'><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></div></code></div></pre>`,G,C,sl,J,ll,al,gs,K,ga=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" javascript="true"><div class="language-id">javascript</div><div class='code-container'><code><div class='line'><span style="color: #C792EA">let</span><span style="color: #EEFFFF"> extension </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">null;</span></div><div class='line'><span style="color: #89DDFF">if</span><span style="color: #EEFFFF"> (window</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">debug</span><span style="color: #89DDFF">?.</span><span style="color: #EEFFFF">extension) </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #C792EA">let</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">res</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">await</span><span style="color: #F07178"> </span><span style="color: #82AAFF">fetch</span><span style="color: #F07178">(</span><span style="color: #EEFFFF">window</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">debug</span><span style="color: #89DDFF">?.</span><span style="color: #EEFFFF">extension</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">toString</span><span style="color: #F07178">())</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #EEFFFF">extension</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">await</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">res</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">json</span><span style="color: #F07178">()</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #C792EA">const</span><span style="color: #EEFFFF"> debug </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">Object</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">assign</span><span style="color: #EEFFFF">(</span><span style="color: #89DDFF">new</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">Debug</span><span style="color: #EEFFFF">(</span><span style="color: #FF9CAC">true</span><span style="color: #EEFFFF">)</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> extension </span><span style="color: #89DDFF">??</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span><span style="color: #EEFFFF"> </span><span style="color: #F07178">report</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #FF9CAC">true</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#125;</span><span style="color: #EEFFFF">)</span><span style="color: #89DDFF">;</span></div></code></div></pre>`,Q,_,ol,ss,nl,el,As,x,ls,pl,tl,as,Fl,Cs,P,$,rl,_s,f,cl,os,il,yl,ns,Dl,dl,xs,M,j,ks,k,El,es,vl,hl,zs,ps,Aa=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" javascript="true"><div class="language-id">javascript</div><div class='code-container'><code><div class='line'><span style="color: #C792EA">class</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">Debug</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #F07178">#sanitize</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">constructor</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">sanitize </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">)</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">        </span><span style="color: #89DDFF">this.</span><span style="color: #EEFFFF">#sanitize</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">sanitize</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">get</span><span style="color: #EEFFFF"> </span><span style="color: #F07178">sanitize</span><span style="color: #89DDFF">()</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">        </span><span style="color: #89DDFF">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">this.</span><span style="color: #EEFFFF">#sanitize</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #89DDFF">&#125;</span></div></code></div></pre>`,ts,u,fl,Fs,ul,ml,rs,wl,bl,Is,O,N,gl,Ts,z,Al,cs,Cl,_l,Ps,E,xl,is,kl,zl,ys,Il,Tl,Ds,Pl,jl,ds,Ol,Sl,js,Es,Ca=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF"><div class='code-container'><code><div class='line'><span style="color: undefined">&lt;div id="debug"&gt;&lt;/debug&gt;</span></div></code></div></pre>`,vs,Os;return j=new Pa({props:{src:"https://github.com/hash3liZer/khatta/assets/29171692/fbd6557c-4b5a-4955-8d12-f6e261f983e0",alt:"image"}}),{c(){i=p("h2"),v=p("a"),b=o("Introduction"),g=y(),c=p("p"),h=o("In the AmateursCTF 2023, there was a challenge by the name "),A=p("code"),Ws=o("Sanity"),Rs=o(". Now, i wasn’t able to solve the challenge within the due time as i got stuck on the very last step of my Proof of Concept. Neverthless, i feel like writing the writeup for this one. This challenge got me hooked up for quite some time."),us=y(),T=p("h2"),B=p("a"),Us=o("Surface"),ms=y(),d=p("p"),Hs=o("We were given 2 files: "),U=p("code"),qs=o("index.js"),Zs=o(" and "),H=p("code"),Xs=o("sanes.ejs"),Vs=o(". The former is ofcourse the execution file which we are going launch and the other file is being parsed on the way to show the input we are going to enter. The "),q=p("code"),Ys=o("index.js"),Gs=o(" file was calling puppeteer which is a headless browser like selenium. The browser was visiting the server created by the script, attaching the cookie which contained the "),Z=p("code"),Js=o("flag"),Ks=o(" and the visiting the sanes page created when we submitted the data. In index.js where the flag was being attached:"),ws=y(),X=new hs(!1),V=y(),L=p("p"),Qs=o("Moving towards the template file, the template was using sanitizer API. Lets review the template file first:"),bs=y(),Y=new hs(!1),G=y(),C=p("p"),sl=o("As we can see in the above code, we have an interesting line where the javascript was checking for "),J=p("code"),ll=o("debug.sanitize"),al=o(" property and if its false, the data was passed without any sanitization. Moreover, if we move a little above from this statement, we find our actual target. The following code:"),gs=y(),K=new hs(!1),Q=y(),_=p("p"),ol=o("What exactly is happening here inside the if condition, the control is checking if the "),ss=p("code"),nl=o("debug.extension"),el=o(" parameter on windows object exists or not. If it does, fetch the value from URL and pass it to our next statement where we are passing the properties of 2 different javascript objects to another. There are 2 possible vulnerabilities that can be exploited here to gain XSS by bypassing the sanitizer API:"),As=y(),x=p("ul"),ls=p("li"),pl=o("DOM Clobbering"),tl=y(),as=p("li"),Fl=o("Prototype Pollution"),Cs=y(),P=p("h2"),$=p("a"),rl=o("Behind the Scenes"),_s=y(),f=p("p"),cl=o("First things first, i normally work with Firefox but Sanitizer API gave me "),os=p("code"),il=o("undefined"),yl=o(" error. So, i moved to chrome considering that "),ns=p("code"),Dl=o("puppeteer"),dl=o(" also uses chromium."),xs=y(),M=p("p"),Ea(j.$$.fragment),ks=y(),k=p("p"),El=o("Before moving forward, i’d another problem in mind about the "),es=p("code"),vl=o("Debug"),hl=o(" class. Inside the class we have:"),zs=y(),ps=new hs(!1),ts=y(),u=p("p"),fl=o("The class parameter initialized is a private member. The problem here is i can’t override the prameter value even with prototype pollution because its a private member. Neverthless, whats important is that default value is nothing and hence if during the exploitation, i would skip this parameter, then the "),Fs=p("code"),ul=o("debug.sanitize"),ml=o(" should resolve to "),rs=p("code"),wl=o("undefined"),bl=o(" in the execution code condition. Well, now its a theory, so moving forward."),Is=y(),O=p("h3"),N=p("a"),gl=o("DOM Clobbering"),Ts=y(),z=p("p"),Al=o("The milestone is to initialize a "),cs=p("code"),Cl=o("debug"),_l=o(" parameter on browser windows object."),Ps=y(),E=p("p"),xl=o("With DOM Clobbering, if we give "),is=p("code"),kl=o("id"),zl=o(" to an element, the element is then initialized on browser’s "),ys=p("code"),Il=o("window"),Tl=o(" object. I started with a simple "),Ds=p("code"),Pl=o("div"),jl=o(" tag in the "),ds=p("code"),Ol=o("Name Your Rant"),Sl=o(" field:"),js=y(),Es=new hs(!1),vs=Da(),this.h()},l(s){i=t(s,"H2",{id:!0});var e=F(i);v=t(e,"A",{href:!0});var Ll=F(v);b=n(Ll,"Introduction"),Ll.forEach(l),e.forEach(l),g=D(s),c=t(s,"P",{});var Ss=F(c);h=n(Ss,"In the AmateursCTF 2023, there was a challenge by the name "),A=t(Ss,"CODE",{});var $l=F(A);Ws=n($l,"Sanity"),$l.forEach(l),Rs=n(Ss,". Now, i wasn’t able to solve the challenge within the due time as i got stuck on the very last step of my Proof of Concept. Neverthless, i feel like writing the writeup for this one. This challenge got me hooked up for quite some time."),Ss.forEach(l),us=D(s),T=t(s,"H2",{id:!0});var Ml=F(T);B=t(Ml,"A",{href:!0});var Nl=F(B);Us=n(Nl,"Surface"),Nl.forEach(l),Ml.forEach(l),ms=D(s),d=t(s,"P",{});var m=F(d);Hs=n(m,"We were given 2 files: "),U=t(m,"CODE",{});var Wl=F(U);qs=n(Wl,"index.js"),Wl.forEach(l),Zs=n(m," and "),H=t(m,"CODE",{});var Rl=F(H);Xs=n(Rl,"sanes.ejs"),Rl.forEach(l),Vs=n(m,". The former is ofcourse the execution file which we are going launch and the other file is being parsed on the way to show the input we are going to enter. The "),q=t(m,"CODE",{});var Ul=F(q);Ys=n(Ul,"index.js"),Ul.forEach(l),Gs=n(m," file was calling puppeteer which is a headless browser like selenium. The browser was visiting the server created by the script, attaching the cookie which contained the "),Z=t(m,"CODE",{});var Hl=F(Z);Js=n(Hl,"flag"),Hl.forEach(l),Ks=n(m," and the visiting the sanes page created when we submitted the data. In index.js where the flag was being attached:"),m.forEach(l),ws=D(s),X=fs(s,!1),V=D(s),L=t(s,"P",{});var ql=F(L);Qs=n(ql,"Moving towards the template file, the template was using sanitizer API. Lets review the template file first:"),ql.forEach(l),bs=D(s),Y=fs(s,!1),G=D(s),C=t(s,"P",{});var Bs=F(C);sl=n(Bs,"As we can see in the above code, we have an interesting line where the javascript was checking for "),J=t(Bs,"CODE",{});var Zl=F(J);ll=n(Zl,"debug.sanitize"),Zl.forEach(l),al=n(Bs," property and if its false, the data was passed without any sanitization. Moreover, if we move a little above from this statement, we find our actual target. The following code:"),Bs.forEach(l),gs=D(s),K=fs(s,!1),Q=D(s),_=t(s,"P",{});var Ls=F(_);ol=n(Ls,"What exactly is happening here inside the if condition, the control is checking if the "),ss=t(Ls,"CODE",{});var Xl=F(ss);nl=n(Xl,"debug.extension"),Xl.forEach(l),el=n(Ls," parameter on windows object exists or not. If it does, fetch the value from URL and pass it to our next statement where we are passing the properties of 2 different javascript objects to another. There are 2 possible vulnerabilities that can be exploited here to gain XSS by bypassing the sanitizer API:"),Ls.forEach(l),As=D(s),x=t(s,"UL",{});var $s=F(x);ls=t($s,"LI",{});var Vl=F(ls);pl=n(Vl,"DOM Clobbering"),Vl.forEach(l),tl=D($s),as=t($s,"LI",{});var Yl=F(as);Fl=n(Yl,"Prototype Pollution"),Yl.forEach(l),$s.forEach(l),Cs=D(s),P=t(s,"H2",{id:!0});var Gl=F(P);$=t(Gl,"A",{href:!0});var Jl=F($);rl=n(Jl,"Behind the Scenes"),Jl.forEach(l),Gl.forEach(l),_s=D(s),f=t(s,"P",{});var W=F(f);cl=n(W,"First things first, i normally work with Firefox but Sanitizer API gave me "),os=t(W,"CODE",{});var Kl=F(os);il=n(Kl,"undefined"),Kl.forEach(l),yl=n(W," error. So, i moved to chrome considering that "),ns=t(W,"CODE",{});var Ql=F(ns);Dl=n(Ql,"puppeteer"),Ql.forEach(l),dl=n(W," also uses chromium."),W.forEach(l),xs=D(s),M=t(s,"P",{});var sa=F(M);va(j.$$.fragment,sa),sa.forEach(l),ks=D(s),k=t(s,"P",{});var Ms=F(k);El=n(Ms,"Before moving forward, i’d another problem in mind about the "),es=t(Ms,"CODE",{});var la=F(es);vl=n(la,"Debug"),la.forEach(l),hl=n(Ms," class. Inside the class we have:"),Ms.forEach(l),zs=D(s),ps=fs(s,!1),ts=D(s),u=t(s,"P",{});var R=F(u);fl=n(R,"The class parameter initialized is a private member. The problem here is i can’t override the prameter value even with prototype pollution because its a private member. Neverthless, whats important is that default value is nothing and hence if during the exploitation, i would skip this parameter, then the "),Fs=t(R,"CODE",{});var aa=F(Fs);ul=n(aa,"debug.sanitize"),aa.forEach(l),ml=n(R," should resolve to "),rs=t(R,"CODE",{});var oa=F(rs);wl=n(oa,"undefined"),oa.forEach(l),bl=n(R," in the execution code condition. Well, now its a theory, so moving forward."),R.forEach(l),Is=D(s),O=t(s,"H3",{id:!0});var na=F(O);N=t(na,"A",{href:!0});var ea=F(N);gl=n(ea,"DOM Clobbering"),ea.forEach(l),na.forEach(l),Ts=D(s),z=t(s,"P",{});var Ns=F(z);Al=n(Ns,"The milestone is to initialize a "),cs=t(Ns,"CODE",{});var pa=F(cs);Cl=n(pa,"debug"),pa.forEach(l),_l=n(Ns," parameter on browser windows object."),Ns.forEach(l),Ps=D(s),E=t(s,"P",{});var w=F(E);xl=n(w,"With DOM Clobbering, if we give "),is=t(w,"CODE",{});var ta=F(is);kl=n(ta,"id"),ta.forEach(l),zl=n(w," to an element, the element is then initialized on browser’s "),ys=t(w,"CODE",{});var Fa=F(ys);Il=n(Fa,"window"),Fa.forEach(l),Tl=n(w," object. I started with a simple "),Ds=t(w,"CODE",{});var ra=F(Ds);Pl=n(ra,"div"),ra.forEach(l),jl=n(w," tag in the "),ds=t(w,"CODE",{});var ca=F(ds);Ol=n(ca,"Name Your Rant"),ca.forEach(l),Sl=n(w," field:"),w.forEach(l),js=D(s),Es=fs(s,!1),vs=Da(),this.h()},h(){I(v,"href","#introduction"),I(i,"id","introduction"),I(B,"href","#surface"),I(T,"id","surface"),X.a=V,Y.a=G,K.a=Q,I($,"href","#behind-the-scenes"),I(P,"id","behind-the-scenes"),ps.a=ts,I(N,"href","#dom-clobbering"),I(O,"id","dom-clobbering"),Es.a=vs},m(s,e){r(s,i,e),a(i,v),a(v,b),r(s,g,e),r(s,c,e),a(c,h),a(c,A),a(A,Ws),a(c,Rs),r(s,us,e),r(s,T,e),a(T,B),a(B,Us),r(s,ms,e),r(s,d,e),a(d,Hs),a(d,U),a(U,qs),a(d,Zs),a(d,H),a(H,Xs),a(d,Vs),a(d,q),a(q,Ys),a(d,Gs),a(d,Z),a(Z,Js),a(d,Ks),r(s,ws,e),X.m(wa,s,e),r(s,V,e),r(s,L,e),a(L,Qs),r(s,bs,e),Y.m(ba,s,e),r(s,G,e),r(s,C,e),a(C,sl),a(C,J),a(J,ll),a(C,al),r(s,gs,e),K.m(ga,s,e),r(s,Q,e),r(s,_,e),a(_,ol),a(_,ss),a(ss,nl),a(_,el),r(s,As,e),r(s,x,e),a(x,ls),a(ls,pl),a(x,tl),a(x,as),a(as,Fl),r(s,Cs,e),r(s,P,e),a(P,$),a($,rl),r(s,_s,e),r(s,f,e),a(f,cl),a(f,os),a(os,il),a(f,yl),a(f,ns),a(ns,Dl),a(f,dl),r(s,xs,e),r(s,M,e),ha(j,M,null),r(s,ks,e),r(s,k,e),a(k,El),a(k,es),a(es,vl),a(k,hl),r(s,zs,e),ps.m(Aa,s,e),r(s,ts,e),r(s,u,e),a(u,fl),a(u,Fs),a(Fs,ul),a(u,ml),a(u,rs),a(rs,wl),a(u,bl),r(s,Is,e),r(s,O,e),a(O,N),a(N,gl),r(s,Ts,e),r(s,z,e),a(z,Al),a(z,cs),a(cs,Cl),a(z,_l),r(s,Ps,e),r(s,E,e),a(E,xl),a(E,is),a(is,kl),a(E,zl),a(E,ys),a(ys,Il),a(E,Tl),a(E,Ds),a(Ds,Pl),a(E,jl),a(E,ds),a(ds,Ol),a(E,Sl),r(s,js,e),Es.m(Ca,s,e),r(s,vs,e),Os=!0},p:Ia,i(s){Os||(fa(j.$$.fragment,s),Os=!0)},o(s){ua(j.$$.fragment,s),Os=!1},d(s){s&&l(i),s&&l(g),s&&l(c),s&&l(us),s&&l(T),s&&l(ms),s&&l(d),s&&l(ws),s&&X.d(),s&&l(V),s&&l(L),s&&l(bs),s&&Y.d(),s&&l(G),s&&l(C),s&&l(gs),s&&K.d(),s&&l(Q),s&&l(_),s&&l(As),s&&l(x),s&&l(Cs),s&&l(P),s&&l(_s),s&&l(f),s&&l(xs),s&&l(M),ma(j),s&&l(ks),s&&l(k),s&&l(zs),s&&ps.d(),s&&l(ts),s&&l(u),s&&l(Is),s&&l(O),s&&l(Ts),s&&l(z),s&&l(Ps),s&&l(E),s&&l(js),s&&l(vs),s&&Es.d()}}}function Oa(S){let i,v;const b=[S[0],da];let g={$$slots:{default:[ja]},$$scope:{ctx:S}};for(let c=0;c<b.length;c+=1)g=Bl(g,b[c]);return i=new Ta({props:g}),{c(){Ea(i.$$.fragment)},l(c){va(i.$$.fragment,c)},m(c,h){ha(i,c,h),v=!0},p(c,[h]){const A=h&1?za(b,[h&1&&ia(c[0]),h&0&&ia(da)]):{};h&2&&(A.$$scope={dirty:h,ctx:c}),i.$set(A)},i(c){v||(fa(i.$$.fragment,c),v=!0)},o(c){ua(i.$$.fragment,c),v=!1},d(c){ma(i,c)}}}const da={title:"Web Sanity Writeup AmateursCTF 2023 DOM Clobbering and Prototype Pollution",categories:["CTF","Writeups"],summary:"A complete writeup of sanity web challenge from AmateursCTF 2023. It covers the use of the Sanitizer API in browsers, DOM Clobbering, Parameter Pollution and XSS.",created:"2023-07-21T00:00:00.000Z",lastmod:"2023-07-21T00:00:00.000Z",image:"https://github.com/hash3liZer/khatta/assets/29171692/755e47ec-8f67-45e9-a7cb-04efe7584127",flags:[],updated:"2023-07-26T13:36:54.764Z",slug:"/blog/2023/amateursctf-web-2023-writeup-sanity/+page.md",path:"/blog/2023/amateursctf-web-2023-writeup-sanity",toc:[{depth:2,title:"Introduction",slug:"introduction"},{depth:2,title:"Surface",slug:"surface"},{depth:2,title:"Behind the Scenes",slug:"behind-the-scenes"},{depth:3,title:"DOM Clobbering",slug:"dom-clobbering"}]};function Sa(S,i,v){return S.$$set=b=>{v(0,i=Bl(Bl({},i),ya(b)))},i=ya(i),[i]}class Ma extends _a{constructor(i){super(),xa(this,i,Sa,Oa,ka,{})}}export{Ma as component};
