import{S as GF,i as qF,s as UF,U as Qr,y as I,z as j,A as x,V as WF,W as iF,g as R,d as N,B,X as rF,k as i,q as l,a as c,Y as d,l as r,m as p,r as o,h as s,c as F,Z as f,n as v,b as n,D as t,E as HF}from"../chunks/index.725d15e1.js";import{P as MF}from"../chunks/post_layout.1a04af22.js";import{I as G}from"../chunks/post_card.5135074f.js";function ZF(Re){let y,k,Q,V,u,L,J,ua,ya,_s,va,Ea,ks,ma,ha,Xl,ye,Ne,Da,zl,Be,wa,Ql,ve,Le,ga,Vl,C,ba,Cs,_a,ka,Os,Ca,Oa,Ss,Sa,Pa,Jl,K,Ta,Ps,Aa,$a,Kl,Ee,Ge,Ia,eo,ee,ja,Ts,xa,Ra,so,As,cF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">sudo apt update</span></div><div class='line'><span style="color: #EEFFFF">sudo apt install -y nginx python3 python3-dev python3-pip python3-virtualenv libpq-dev postgresql postgresql-contrib</span></div></code></div></pre>`,$s,qe,me,to,se,Na,Is,Ba,La,lo,js,FF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">sudo -s</span></div></code></div></pre>`,xs,Ue,he,oo,De,We,Ga,ao,O,qa,Rs,Ua,Wa,Ns,Ha,Ma,Bs,Za,Ya,no,Ls,dF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">rsync -arvz -e </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">ssh -p &lt;port-number&gt;</span><span style="color: #89DDFF">'</span><span style="color: #EEFFFF"> --progress --delete /path/to/local/folder user@remote-server:/var/www/</span></div></code></div></pre>`,Gs,te,Xa,qs,za,Qa,io,Us,fF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #82AAFF">cd</span><span style="color: #EEFFFF"> /var/www</span></div><div class='line'><span style="color: #EEFFFF">pip3 install django</span></div><div class='line'><span style="color: #EEFFFF">django-admin startproject myweb</span></div></code></div></pre>`,Ws,q,Va,Hs,Ja,Ka,Ms,en,sn,ro,Zs,uF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #82AAFF">cd</span><span style="color: #EEFFFF"> myweb/</span></div><div class='line'><span style="color: #EEFFFF">virtualenv venv</span></div></code></div></pre>`,Ys,le,tn,Xs,ln,on,po,zs,yF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #82AAFF">source</span><span style="color: #EEFFFF"> ./venv/bin/activate</span></div><div class='line'><span style="color: #EEFFFF">pip3 install -r requirements.txt     </span><span style="color: #546E7A"># In case you have one</span></div><div class='line'><span style="color: #EEFFFF">pip3 install django gunicorn psycopg2-binary</span></div></code></div></pre>`,Qs,we,He,an,co,oe,nn,Vs,rn,pn,Fo,ae,cn,Js,Fn,dn,fo,Ks,vF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF"><div class='code-container'><code><div class='line'><span style="color: undefined">sudo -u postgres psql</span></div></code></div></pre>`,et,U,fn,st,un,yn,tt,vn,En,uo,lt,EF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF"><div class='code-container'><code><div class='line'><span style="color: undefined">CREATE DATABASE hashbase;</span></div><div class='line'><span style="color: undefined">CREATE USER hashbaseuser WITH PASSWORD 'password1122';</span></div><div class='line'><span style="color: undefined">GRANT ALL PRIVILEGES ON DATABASE hashbase TO hashbaseuser;</span></div></code></div></pre>`,ot,Me,mn,yo,at,mF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">ALTER ROLE hashbaseuser SET client_encoding TO </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">utf8</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF">ALTER ROLE hashbaseuser SET default_transaction_isolation TO </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">read committed</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF">ALTER ROLE hashbaseuser SET timezone TO </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">UTC</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">;</span></div></code></div></pre>`,nt,Ze,hn,vo,it,hF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">q</span></div></code></div></pre>`,rt,Ye,ge,Eo,be,Xe,Dn,mo,W,wn,pt,gn,bn,ct,_n,kn,ho,Ft,DF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">nano myweb/settings.py</span></div></code></div></pre>`,dt,ze,_e,Do,g,Cn,ft,On,Sn,ut,Pn,Tn,yt,An,$n,vt,In,jn,wo,Et,wF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" python="true"><div class="language-id">python</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">...</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">ALLOWED_HOSTS </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">[</span></div><div class='line'><span style="color: #EEFFFF">  </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">13.229.230.156</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF">      </span><span style="color: #546E7A"># Public IP of the Server</span></div><div class='line'><span style="color: #EEFFFF">  </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">mydomain.com</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF">        </span><span style="color: #546E7A"># In case you have a domain, you can skip the IP Address</span></div><div class='line'><span style="color: #EEFFFF">  </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">someotherhostetc</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">,</span></div><div class='line'><span style="color: #89DDFF">]</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">...</span></div></code></div></pre>`,mt,S,xn,ht,Rn,Nn,Dt,Bn,Ln,wt,Gn,qn,go,gt,gF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" python="true"><div class="language-id">python</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">...</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">DATABASES </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">default</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">ENGINE</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">django.db.backends.postgresql_psycopg2</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">,</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">NAME</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">hashbase</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">,</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">USER</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">hashbaseuser</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">,</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">PASSWORD</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">password1122</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">,</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">HOST</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">localhost</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">,</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">PORT</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">''</span><span style="color: #89DDFF">,</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">...</span></div></code></div></pre>`,bt,h,Un,_t,Wn,Hn,kt,Mn,Zn,Ct,Yn,Xn,Ot,zn,Qn,St,Vn,Jn,bo,Pt,bF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" python="true"><div class="language-id">python</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">...</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">STATIC_URL </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">static/</span><span style="color: #89DDFF">'</span></div><div class='line'><span style="color: #EEFFFF">STATIC_ROOT </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> BASE_DIR </span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">public</span><span style="color: #89DDFF">'</span></div><div class='line'><span style="color: #EEFFFF">MEDIA_URL  </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">media/</span><span style="color: #89DDFF">'</span></div><div class='line'><span style="color: #EEFFFF">MEDIA_ROOT </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> BASE_DIR </span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">media</span><span style="color: #89DDFF">'</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">...</span></div></code></div></pre>`,Tt,E,Kn,At,ei,si,$t,ti,li,It,oi,ai,jt,ni,ii,xt,ri,pi,Rt,ci,Fi,Nt,di,fi,_o,ke,Qe,ui,ko,Ve,yi,Co,Je,vi,Oo,Bt,_F=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF"><div class='code-container'><code><div class='line'><span style="color: undefined">python3 manage.py makemigrations</span></div><div class='line'><span style="color: undefined">python3 manage.py migrate</span></div><div class='line'><span style="color: undefined">python3 manage.py createsuperuser     # Enter your credentials for the superuser when prompted</span></div></code></div></pre>`,Lt,Ke,Ce,So,P,Ei,Gt,mi,hi,qt,Di,wi,Ut,gi,bi,Po,Wt,kF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" python="true"><div class="language-id">python</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">python3 manage</span><span style="color: #89DDFF">.</span><span style="color: #F07178">py</span><span style="color: #EEFFFF"> collectstatic</span></div></code></div></pre>`,Ht,es,Oe,To,H,_i,Mt,ki,Ci,Zt,Oi,Si,Ao,Yt,CF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" python="true"><div class="language-id">python</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">service nginx stop</span></div><div class='line'><span style="color: #EEFFFF">python3 manage</span><span style="color: #89DDFF">.</span><span style="color: #F07178">py</span><span style="color: #EEFFFF"> runserver </span><span style="color: #F78C6C">0.0</span><span style="color: #89DDFF">.</span><span style="color: #F07178">0</span><span style="color: #89DDFF">.</span><span style="color: #F07178">0</span><span style="color: #89DDFF">:</span><span style="color: #F78C6C">80</span></div></code></div></pre>`,Xt,ss,Pi,$o,zt,OF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" python="true"><div class="language-id">python</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">http</span><span style="color: #89DDFF">://</span><span style="color: #EEFFFF">PUBLCI_IP_ADDRESS</span></div></code></div></pre>`,Qt,ts,Se,Io,b,Ti,Vt,Ai,$i,Jt,Ii,ji,Kt,xi,Ri,el,Ni,Bi,jo,sl,SF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF"><div class='code-container'><code><div class='line'><span style="color: undefined">nano myweb/settings.py</span></div><div class='line'><span style="color: undefined"></span></div><div class='line'><span style="color: undefined">...</span></div><div class='line'><span style="color: undefined">DEBUG = False</span></div><div class='line'><span style="color: undefined">...</span></div></code></div></pre>`,tl,ls,Li,xo,Pe,os,Gi,Ro,m,qi,ll,Ui,Wi,ol,Hi,Mi,al,Zi,Yi,nl,Xi,zi,il,Qi,Vi,rl,Ji,Ki,No,pl,PF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">gunicorn --bind 0.0.0.0:80 myweb.wsgi</span></div></code></div></pre>`,cl,as,Te,Bo,ne,er,Fl,sr,tr,Lo,dl,TF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">nano /etc/systemd/system/gunicorn.service</span></div></code></div></pre>`,fl,M,lr,ul,or,ar,yl,nr,ir,Go,vl,AF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" python="true"><div class="language-id">python</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">[</span><span style="color: #EEFFFF">Unit</span><span style="color: #89DDFF">]</span></div><div class='line'><span style="color: #EEFFFF">Description</span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF">gunicorn daemon</span></div><div class='line'><span style="color: #EEFFFF">After</span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF">network</span><span style="color: #89DDFF">.</span><span style="color: #F07178">target</span></div><div class='line'></div><div class='line'><span style="color: #89DDFF">[</span><span style="color: #EEFFFF">Service</span><span style="color: #89DDFF">]</span></div><div class='line'><span style="color: #EEFFFF">User</span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF">www</span><span style="color: #89DDFF">-</span><span style="color: #EEFFFF">data</span></div><div class='line'><span style="color: #EEFFFF">Group</span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF">www</span><span style="color: #89DDFF">-</span><span style="color: #EEFFFF">data</span></div><div class='line'><span style="color: #EEFFFF">WorkingDirectory</span><span style="color: #89DDFF">=/</span><span style="color: #EEFFFF">var</span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">www</span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">myweb</span></div><div class='line'><span style="color: #EEFFFF">ExecStart</span><span style="color: #89DDFF">=/</span><span style="color: #EEFFFF">var</span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">www</span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">myweb</span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">venv</span><span style="color: #89DDFF">/</span><span style="color: #82AAFF">bin</span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">gunicorn --access</span><span style="color: #89DDFF">-</span><span style="color: #EEFFFF">logfile </span><span style="color: #89DDFF">-</span><span style="color: #EEFFFF"> --workers </span><span style="color: #F78C6C">3</span><span style="color: #EEFFFF"> --timeout </span><span style="color: #F78C6C">300</span><span style="color: #EEFFFF"> --bind unix</span><span style="color: #89DDFF">:/</span><span style="color: #EEFFFF">var</span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">www</span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">myweb</span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">myweb</span><span style="color: #89DDFF">.</span><span style="color: #F07178">sock</span><span style="color: #EEFFFF"> myweb</span><span style="color: #89DDFF">.</span><span style="color: #F07178">wsgi</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF">application</span></div><div class='line'></div><div class='line'><span style="color: #89DDFF">[</span><span style="color: #EEFFFF">Install</span><span style="color: #89DDFF">]</span></div><div class='line'><span style="color: #EEFFFF">WantedBy</span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF">multi</span><span style="color: #89DDFF">-</span><span style="color: #EEFFFF">user</span><span style="color: #89DDFF">.</span><span style="color: #F07178">target</span></div></code></div></pre>`,El,D,rr,ml,pr,cr,hl,Fr,dr,Dl,fr,ur,wl,yr,vr,gl,Er,mr,qo,ns,hr,Uo,bl,$F=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">chown www-data:www-data -R /var/www/myweb</span></div></code></div></pre>`,_l,is,Dr,Wo,kl,IF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">systemctl daemon-reload</span></div><div class='line'><span style="color: #EEFFFF">systemctl restart gunicorn.service</span></div><div class='line'><span style="color: #EEFFFF">systemctl status gunicorn.service</span></div></code></div></pre>`,Cl,rs,Ae,Ho,ps,wr,Mo,Ol,jF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">sudo journalctl -u gunicorn</span></div></code></div></pre>`,Sl,$e,cs,gr,Zo,Z,br,Pl,_r,kr,Tl,Cr,Or,Yo,Al,xF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">rm /etc/nginx/sites-enabled/default</span></div><div class='line'><span style="color: #EEFFFF">nano /etc/nginx/sites-available/myweb</span></div></code></div></pre>`,$l,Fs,Sr,Xo,Il,RF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" nginx="true"><div class="language-id">nginx</div><div class='code-container'><code><div class='line'><span style="color: #C792EA">server</span><span style="color: #EEFFFF"> &#123;</span></div><div class='line'><span style="color: #EEFFFF">   </span><span style="color: #89DDFF"> listen </span><span style="color: #EEFFFF">80</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF">   </span><span style="color: #89DDFF"> server_name </span><span style="color: #EEFFFF">DOMAIN_OR_PUBLIC_IP</span><span style="color: #89DDFF">;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">location</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #C3E88D">/favicon.ico </span><span style="color: #EEFFFF">&#123;</span><span style="color: #89DDFF"> access_log </span><span style="color: #EEFFFF">off</span><span style="color: #89DDFF">; log_not_found </span><span style="color: #EEFFFF">off</span><span style="color: #89DDFF">;</span><span style="color: #EEFFFF"> &#125;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">location</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">/static/ </span><span style="color: #EEFFFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">       </span><span style="color: #89DDFF"> alias </span><span style="color: #EEFFFF">/var/www/myweb/public/</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF">       </span><span style="color: #89DDFF"> add_header </span><span style="color: #EEFFFF">Strict-Transport-Security </span><span style="color: #C3E88D">"max-age=31536000; includeSubDomains"</span><span style="color: #EEFFFF"> always</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF">    &#125;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">location</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">/media/ </span><span style="color: #EEFFFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">       </span><span style="color: #89DDFF"> alias </span><span style="color: #EEFFFF">/var/www/myweb/media/</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF">    &#125;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">location</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">/ </span><span style="color: #EEFFFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">       </span><span style="color: #89DDFF"> include </span><span style="color: #EEFFFF">proxy_params</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF">       </span><span style="color: #89DDFF"> add_header </span><span style="color: #EEFFFF">Strict-Transport-Security </span><span style="color: #C3E88D">"max-age=31536000; includeSubDomains"</span><span style="color: #EEFFFF"> always</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF">       </span><span style="color: #89DDFF"> proxy_pass </span><span style="color: #EEFFFF">http://unix:/var/www/myweb/myweb.sock</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF">    &#125;</span></div><div class='line'><span style="color: #EEFFFF">&#125;</span></div></code></div></pre>`,jl,ie,Pr,xl,Tr,Ar,zo,re,$r,Rl,Ir,jr,Qo,Nl,NF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" python="true"><div class="language-id">python</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">ln </span><span style="color: #89DDFF">-</span><span style="color: #EEFFFF">s </span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">etc</span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">nginx</span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">sites</span><span style="color: #89DDFF">-</span><span style="color: #EEFFFF">available</span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">myweb </span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">etc</span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">nginx</span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">sites</span><span style="color: #89DDFF">-</span><span style="color: #EEFFFF">enabled</span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">myweb</span></div></code></div></pre>`,Bl,ds,xr,Vo,Ll,BF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF"><div class='code-container'><code><div class='line'><span style="color: undefined">nginx -t</span></div><div class='line'><span style="color: undefined">systemctl restart nginx</span></div><div class='line'><span style="color: undefined">systemctl status nginx</span></div></code></div></pre>`,Gl,fs,Ie,Jo,T,Rr,ql,Nr,Br,Ul,Lr,Gr,Wl,qr,Ur,Ko,Hl,LF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" python="true"><div class="language-id">python</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">http</span><span style="color: #89DDFF">://</span><span style="color: #EEFFFF">PUBLIC_IP_ADDRESS_OR_DOMAIN</span><span style="color: #89DDFF">/</span><span style="color: #EEFFFF">admin</span></div></code></div></pre>`,Ml,us,je,ea,Y,Wr,Zl,Hr,Mr,Yl,Zr,Yr,sa,xe,ys,Xr,ta,vs,zr,la;return me=new G({props:{src:"https://github.com/hash3liZer/khatta/assets/29171692/5796e18f-36ee-4cb5-bd9c-7a8398627981",alt:"image"}}),he=new G({props:{src:"https://github.com/hash3liZer/khatta/assets/29171692/be2a19b9-c46a-4a72-b70f-dbb0446dd33c",alt:"image"}}),ge=new G({props:{src:"https://github.com/hash3liZer/khatta/assets/29171692/a450e21a-dfbe-4122-986f-8b5dc9e5c284",alt:"image"}}),_e=new G({props:{src:"https://github.com/hash3liZer/khatta/assets/29171692/3f6ad510-3443-4499-90ba-2ef8098d0989",alt:"image"}}),Ce=new G({props:{src:"https://github.com/hash3liZer/khatta/assets/29171692/bf41701c-c35d-448e-adbc-ff111a9ef7e6",alt:"image"}}),Oe=new G({props:{src:"https://github.com/hash3liZer/khatta/assets/29171692/a79e25e0-5960-4cd5-ab97-f359cc2de470",alt:"image"}}),Se=new G({props:{src:"https://github.com/hash3liZer/khatta/assets/29171692/f1bea206-f36f-4df3-8448-f5b2824587c1",alt:"image"}}),Te=new G({props:{src:"https://github.com/hash3liZer/khatta/assets/29171692/8c4e703d-fcf7-4658-b358-1addaa74f6fb",alt:"image"}}),Ae=new G({props:{src:"https://github.com/hash3liZer/khatta/assets/29171692/4f2ca54a-e633-4593-86f1-a292d4e899e6",alt:"image"}}),Ie=new G({props:{src:"https://github.com/hash3liZer/khatta/assets/29171692/bbab172e-0279-4ac6-a274-1fa9181530da",alt:"image"}}),je=new G({props:{src:"https://github.com/hash3liZer/khatta/assets/29171692/f3b0c7d0-3dff-40fd-b17f-4a22f280cc09",alt:"image"}}),{c(){y=i("h2"),k=i("a"),Q=l("Introduction"),V=c(),u=i("p"),L=l("Hi, its been a while since i wrote something on my blog. Today, i am going to write about the process of deployment of a django application on a Ubuntu 22.02 live server. I’ll try to cover as much details as i can and mention about the common issues i normally faces while following the process. This article is also a kind of reminder for myself for the tutorials and blog that i followed and the issues i ran into. So, we are going to cover this deployment process through "),J=i("strong"),ua=l("Gunicorn"),ya=l(", "),_s=i("strong"),va=l("NGINX"),Ea=l(" and optionally using "),ks=i("strong"),ma=l("Postgresql"),ha=l(" database."),Xl=c(),ye=i("h2"),Ne=i("a"),Da=l("Tutorial"),zl=c(),Be=i("p"),wa=l("So, without wasting any further time. Lets jump right into the details."),Ql=c(),ve=i("h3"),Le=i("a"),ga=l("Pre-Reqs"),Vl=c(),C=i("p"),ba=l("The foremost thing are the pre-reqs that we need to follow this tutorial. First is a server with a public IP. Many of you who are reading this might already have one before moving one. Well, if you don’t you can simply get one from any of the hosting services or Cloud platforms. Personally, i use "),Cs=i("strong"),_a=l("DigitalOcean"),ka=l(" or "),Os=i("strong"),Ca=l("AWS"),Oa=l(" most of the time. And also, for the sake of this tutorial i’ll be using a "),Ss=i("code"),Sa=l("t2.micro"),Pa=l(" instance of EC2 service from AWS."),Jl=c(),K=i("p"),Ta=l("But in general what you need is an online server with "),Ps=i("strong"),Aa=l("Ubuntu 22.04"),$a=l(" installed and with publicly accessibly ports. Thi should also work just fine with Ubuntu 20.04. Let me know in comments if someone tests it."),Kl=c(),Ee=i("h3"),Ge=i("a"),Ia=l("Installing Packages"),eo=c(),ee=i("p"),ja=l("First, lets update our "),Ts=i("strong"),xa=l("ubuntu"),Ra=l(" machine and install the required packages:"),so=c(),As=new d(!1),$s=c(),qe=i("p"),I(me.$$.fragment),to=c(),se=i("p"),Na=l("Before going forward, lets escalate to the "),Is=i("code"),Ba=l("root"),La=l(" shell as we might run into the permission issues again and again. And don’t worry, we will see the project and permissions of the other files at the last:"),lo=c(),js=new d(!1),xs=c(),Ue=i("p"),I(he.$$.fragment),oo=c(),De=i("h3"),We=i("a"),Ga=l("Setting up Project Directory"),ao=c(),O=i("p"),qa=l("Now, lets move to the "),Rs=i("code"),Ua=l("/var/www/"),Wa=l(" directory where we are going to place our project folder. I am going to setup a project from scratch for demo purposes using "),Ns=i("code"),Ha=l("django-admin"),Ma=l(" command. But if you already have one, make sure its uploaded correctly. I normally used "),Bs=i("code"),Za=l("rsync"),Ya=l(" for this:"),no=c(),Ls=new d(!1),Gs=c(),te=i("p"),Xa=l("For now, i will setup a new project from scratch and name it "),qs=i("code"),za=l("myweb"),Qa=l(". Lets install django and initialize an empty project:"),io=c(),Us=new d(!1),Ws=c(),q=i("p"),Va=l("Move to "),Hs=i("code"),Ja=l("myweb"),Ka=l(" and initialize new "),Ms=i("em"),en=l("virtual environment"),sn=l(":"),ro=c(),Zs=new d(!1),Ys=c(),le=i("p"),tn=l("Moving forward, activate the virtual environment and install all the necessary packages that you might have placed in "),Xs=i("code"),ln=l("requirements.txt"),on=l("."),po=c(),zs=new d(!1),Qs=c(),we=i("h3"),He=i("a"),an=l("Setting up Postgres (Database)"),co=c(),oe=i("p"),nn=l("You could move forward without this step if you are planning on using some database or the default sqlite. But please note that you will have to install the relevant packages for that. While in this case, i am only focusing on "),Vs=i("code"),rn=l("postgres"),pn=l("."),Fo=c(),ae=i("p"),cn=l("Launch "),Js=i("code"),Fn=l("postgres"),dn=l(":"),fo=c(),Ks=new d(!1),et=c(),U=i("p"),fn=l("The next steps are supposted to be inside the "),st=i("code"),un=l("postgres"),yn=l(" terminal. Create a new database. I am naming it "),tt=i("code"),vn=l("hashbase"),En=l(". Setup a new user and assign it to the database that we just created:"),uo=c(),lt=new d(!1),ot=c(),Me=i("p"),mn=l("Next, we will modify a couple of our database settings for better processing and django functions:"),yo=c(),at=new d(!1),nt=c(),Ze=i("p"),hn=l("Quit:"),vo=c(),it=new d(!1),rt=c(),Ye=i("p"),I(ge.$$.fragment),Eo=c(),be=i("h3"),Xe=i("a"),Dn=l("Project Settings"),mo=c(),W=i("p"),wn=l("We will look at the project settings now that needs to be replaced or modified. Considering we are in the project directory located at "),pt=i("code"),gn=l("/var/www/myweb"),bn=l(". Lets edit the "),ct=i("code"),_n=l("settings.py"),kn=l(" file:"),ho=c(),Ft=new d(!1),dt=c(),ze=i("p"),I(_e.$$.fragment),Do=c(),g=i("p"),Cn=l("Edit the "),ft=i("code"),On=l("ALLOWED_HOSTS"),Sn=l(" list variable to include all the "),ut=i("strong"),Pn=l("IPs"),Tn=l(" or "),yt=i("strong"),An=l("Hostnames"),$n=l(" that you plan on using for the website. In here, i am simply going to put the "),vt=i("strong"),In=l("PUBLIC IP"),jn=l(" of the server i am on. You can put domain names if you are going to configure one with the website."),wo=c(),Et=new d(!1),mt=c(),S=i("p"),xn=l("Now, move a bit below to this and find the "),ht=i("code"),Rn=l("DATABASES"),Nn=l(" variable section. By default it is configured to use "),Dt=i("code"),Bn=l("sqlite3"),Ln=l(" as its database. We will change the settings to use "),wt=i("code"),Gn=l("postgresql"),qn=l(":"),go=c(),gt=new d(!1),bt=c(),h=i("p"),Un=l("After this, we need to setup a "),_t=i("code"),Wn=l("static"),Hn=l(" and "),kt=i("code"),Mn=l("media"),Zn=l(" directory where our project static files are going to be stored. The "),Ct=i("code"),Yn=l("media"),Xn=l(" folder will contain files that are supposed to be uploaded by the user of the application. So, again in the "),Ot=i("code"),zn=l("settings.py"),Qn=l(" file, move at the end of the file and find the line "),St=i("code"),Vn=l("STATIC_URL = 'static/'"),Jn=l(" and add some new content below it:"),bo=c(),Pt=new d(!1),Tt=c(),E=i("p"),Kn=l("The "),At=i("code"),ei=l("STATIC_ROOT"),si=l(" defines the folder where the public content like "),$t=i("em"),ti=l("css,js or imgs"),li=l(" are going to be stored upon running the "),It=i("code"),oi=l("collectstatic"),ai=l(" command on "),jt=i("code"),ni=l("manage.py"),ii=l(" file. Please note that its totally different from the "),xt=i("code"),ri=l("STATICFILES_DIRS"),pi=l(" variable which is used to define the directories to locate static files. Think of "),Rt=i("code"),ci=l("STATIC_ROOT"),Fi=l(" as more of a "),Nt=i("strong"),di=l("production"),fi=l(" specific variable."),_o=c(),ke=i("h3"),Qe=i("a"),ui=l("Spin up the Project"),ko=c(),Ve=i("p"),yi=l("Lets move towards spinning up the project for the public. For that, we will do the normal django commands like migrations and super user."),Co=c(),Je=i("p"),vi=l("Run migrations and create a superuser:"),Oo=c(),Bt=new d(!1),Lt=c(),Ke=i("p"),I(Ce.$$.fragment),So=c(),P=i("p"),Ei=l("After this, we will run the "),Gt=i("code"),mi=l("collectstatic"),hi=l(" command to locate all the static files we have in our project and put them to the folder that we defined at "),qt=i("code"),Di=l("STATIC_ROOT"),wi=l(" variable. These static files will be served by the "),Ut=i("code"),gi=l("nginx"),bi=l(" server and not from django like we see during the development."),Po=c(),Wt=new d(!1),Ht=c(),es=i("p"),I(Oe.$$.fragment),To=c(),H=i("p"),_i=l("You can now execute the "),Mt=i("code"),ki=l("runserver"),Ci=l(" command on public interface to see your website. Before also make sure nginx is not using the port "),Zt=i("code"),Oi=l("80"),Si=l(" by default:"),Ao=c(),Yt=new d(!1),Xt=c(),ss=i("p"),Pi=l("Now, if you access your website at you would be able to see your project:"),$o=c(),zt=new d(!1),Qt=c(),ts=i("p"),I(Se.$$.fragment),Io=c(),b=i("p"),Ti=l("Finally, back in the "),Vt=i("code"),Ai=l("settings.py"),$i=l(" put the "),Jt=i("code"),Ii=l("DEBUG"),ji=l(" value to "),Kt=i("code"),xi=l("False"),Ri=l(". You can keep it enabled if you are going to debug the project or facing some other issue. But make sure to put the value to "),el=i("code"),Ni=l("False"),Bi=l(" for the production cases:"),jo=c(),sl=new d(!1),tl=c(),ls=i("p"),Li=l("At this point, we have our project all ok. But this is not how we are going to host the website actually."),xo=c(),Pe=i("h3"),os=i("a"),Gi=l("Setting up Gunicorn"),Ro=c(),m=i("p"),qi=l("Gunicorn is the server service that we are going to configure with "),ll=i("code"),Ui=l("nginx"),Wi=l(" for the public. We will configure a new "),ol=i("code"),Hi=l("systemd"),Mi=l(" service for this. But before, we will test if "),al=i("code"),Zi=l("gunicorn"),Yi=l(" is really working or not. So, simply bind gunicorn to the "),nl=i("code"),Xi=l("0.0.0.0"),zi=l(" and test if we can access the website at port "),il=i("code"),Qi=l("80"),Vi=l(" like we did before. Note that we are still inside "),rl=i("code"),Ji=l("/var/www/myweb"),Ki=l(" directory"),No=c(),pl=new d(!1),cl=c(),as=i("p"),I(Te.$$.fragment),Bo=c(),ne=i("p"),er=l("Fire up "),Fl=i("code"),sr=l("nano"),tr=l(" again for the gunicorn service and do the configuration:"),Lo=c(),dl=new d(!1),fl=c(),M=i("p"),lr=l("Inside the file. I’ll not get into much details of what is happening here. But you can refer to the "),ul=i("code"),or=l("systemd"),ar=l(" documentation for more in depth detail. However, we will review the "),yl=i("code"),nr=l("Service"),ir=l(" section here:"),Go=c(),vl=new d(!1),El=c(),D=i("p"),rr=l("The "),ml=i("code"),pr=l("User"),cr=l(" and "),hl=i("code"),Fr=l("Group"),dr=l(" defines the privileges the command is going to be executed with. The complete command is specified with "),Dl=i("code"),fr=l("ExecStart"),ur=l(" variable. Make sure to specify "),wl=i("code"),yr=l("WorkingDirectory"),vr=l(" as well. Otherwise, gunicorn wouldn’t be able to locate the "),gl=i("code"),Er=l("myweb.wsgi"),mr=l(" on path. Save the file."),qo=c(),ns=i("p"),hr=l("Make sure to change the project’s owner before starting gunicorn:"),Uo=c(),bl=new d(!1),_l=c(),is=i("p"),Dr=l("Start the service after saving and make that its running and doesn’t have any errors. If there are errors, you will need to fix them before moving forward:"),Wo=c(),kl=new d(!1),Cl=c(),rs=i("p"),I(Ae.$$.fragment),Ho=c(),ps=i("p"),wr=l("You can see more detailed logs of gunicorn if there are errors using:"),Mo=c(),Ol=new d(!1),Sl=c(),$e=i("h3"),cs=i("a"),gr=l("Setting UP NGINX"),Zo=c(),Z=i("p"),br=l("This is the last step. We will configure "),Pl=i("code"),_r=l("nginx"),kr=l(" which in short is the public server and will take requests from the public and forward it to gunicorn as a reverse proxy. Remove the default enabled nginx website and create a new "),Tl=i("code"),Cr=l("nginx"),Or=l(" project file:"),Yo=c(),Al=new d(!1),$l=c(),Fs=i("p"),Sr=l("Inside the file, configure your web server:"),Xo=c(),Il=new d(!1),jl=c(),ie=i("p"),Pr=l("In the above configuration, make sure you have changed it according to your requirements. One thing to look out for is the "),xl=i("code"),Tr=l("server_name"),Ar=l(" directive. If you are working with a domain name, make sure to replace it correctly. Another thing would be the paths that are mentioned in the configuration. Make sure all of the mentioned paths in your correct according to your settings."),zo=c(),re=i("p"),$r=l("Save the file and enable this nginx project by creating its soft link at "),Rl=i("code"),Ir=l("sites-enabled"),jr=l(" directory:"),Qo=c(),Nl=new d(!1),Bl=c(),ds=i("p"),xr=l("Check nginx configuration and restart nginx:"),Vo=c(),Ll=new d(!1),Gl=c(),fs=i("p"),I(Ie.$$.fragment),Jo=c(),T=i("p"),Rr=l("If everything goes correctly, you should be able to see the nginx service running and if you visit the "),ql=i("strong"),Nr=l("PUBLIC IP"),Br=l(" or "),Ul=i("strong"),Lr=l("Domain Name"),Gr=l(" now, you will see your website. For the final test, visit the "),Wl=i("code"),qr=l("/admin"),Ur=l(" page to make sure the static files are also served correctly from our nginx service:"),Ko=c(),Hl=new d(!1),Ml=c(),us=i("p"),I(je.$$.fragment),ea=c(),Y=i("p"),Wr=l("In case your static are not served properly, you can check the "),Zl=i("code"),Hr=l("nginx"),Mr=l(" error logs at: "),Yl=i("code"),Zr=l("/var/log/nginx/error.log"),Yr=l(" and debug the issues."),sa=c(),xe=i("h2"),ys=i("a"),Xr=l("Conclusion"),ta=c(),vs=i("p"),zr=l("Thanks for making it through. All in all, we saw how to host a django website using gunicorn, nginx and postgresql. Its not very tricky but yes sometimes debugging the configuration files can take time. So, while doing your own, make sure to double check your configuration files and make sure that they are making sense for what they are supposed to do."),this.h()},l(e){y=r(e,"H2",{id:!0});var a=p(y);k=r(a,"A",{href:!0});var Vr=p(k);Q=o(Vr,"Introduction"),Vr.forEach(s),a.forEach(s),V=F(e),u=r(e,"P",{});var pe=p(u);L=o(pe,"Hi, its been a while since i wrote something on my blog. Today, i am going to write about the process of deployment of a django application on a Ubuntu 22.02 live server. I’ll try to cover as much details as i can and mention about the common issues i normally faces while following the process. This article is also a kind of reminder for myself for the tutorials and blog that i followed and the issues i ran into. So, we are going to cover this deployment process through "),J=r(pe,"STRONG",{});var Jr=p(J);ua=o(Jr,"Gunicorn"),Jr.forEach(s),ya=o(pe,", "),_s=r(pe,"STRONG",{});var Kr=p(_s);va=o(Kr,"NGINX"),Kr.forEach(s),Ea=o(pe," and optionally using "),ks=r(pe,"STRONG",{});var ep=p(ks);ma=o(ep,"Postgresql"),ep.forEach(s),ha=o(pe," database."),pe.forEach(s),Xl=F(e),ye=r(e,"H2",{id:!0});var sp=p(ye);Ne=r(sp,"A",{href:!0});var tp=p(Ne);Da=o(tp,"Tutorial"),tp.forEach(s),sp.forEach(s),zl=F(e),Be=r(e,"P",{});var lp=p(Be);wa=o(lp,"So, without wasting any further time. Lets jump right into the details."),lp.forEach(s),Ql=F(e),ve=r(e,"H3",{id:!0});var op=p(ve);Le=r(op,"A",{href:!0});var ap=p(Le);ga=o(ap,"Pre-Reqs"),ap.forEach(s),op.forEach(s),Vl=F(e),C=r(e,"P",{});var ce=p(C);ba=o(ce,"The foremost thing are the pre-reqs that we need to follow this tutorial. First is a server with a public IP. Many of you who are reading this might already have one before moving one. Well, if you don’t you can simply get one from any of the hosting services or Cloud platforms. Personally, i use "),Cs=r(ce,"STRONG",{});var np=p(Cs);_a=o(np,"DigitalOcean"),np.forEach(s),ka=o(ce," or "),Os=r(ce,"STRONG",{});var ip=p(Os);Ca=o(ip,"AWS"),ip.forEach(s),Oa=o(ce," most of the time. And also, for the sake of this tutorial i’ll be using a "),Ss=r(ce,"CODE",{});var rp=p(Ss);Sa=o(rp,"t2.micro"),rp.forEach(s),Pa=o(ce," instance of EC2 service from AWS."),ce.forEach(s),Jl=F(e),K=r(e,"P",{});var oa=p(K);Ta=o(oa,"But in general what you need is an online server with "),Ps=r(oa,"STRONG",{});var pp=p(Ps);Aa=o(pp,"Ubuntu 22.04"),pp.forEach(s),$a=o(oa," installed and with publicly accessibly ports. Thi should also work just fine with Ubuntu 20.04. Let me know in comments if someone tests it."),oa.forEach(s),Kl=F(e),Ee=r(e,"H3",{id:!0});var cp=p(Ee);Ge=r(cp,"A",{href:!0});var Fp=p(Ge);Ia=o(Fp,"Installing Packages"),Fp.forEach(s),cp.forEach(s),eo=F(e),ee=r(e,"P",{});var aa=p(ee);ja=o(aa,"First, lets update our "),Ts=r(aa,"STRONG",{});var dp=p(Ts);xa=o(dp,"ubuntu"),dp.forEach(s),Ra=o(aa," machine and install the required packages:"),aa.forEach(s),so=F(e),As=f(e,!1),$s=F(e),qe=r(e,"P",{});var fp=p(qe);j(me.$$.fragment,fp),fp.forEach(s),to=F(e),se=r(e,"P",{});var na=p(se);Na=o(na,"Before going forward, lets escalate to the "),Is=r(na,"CODE",{});var up=p(Is);Ba=o(up,"root"),up.forEach(s),La=o(na," shell as we might run into the permission issues again and again. And don’t worry, we will see the project and permissions of the other files at the last:"),na.forEach(s),lo=F(e),js=f(e,!1),xs=F(e),Ue=r(e,"P",{});var yp=p(Ue);j(he.$$.fragment,yp),yp.forEach(s),oo=F(e),De=r(e,"H3",{id:!0});var vp=p(De);We=r(vp,"A",{href:!0});var Ep=p(We);Ga=o(Ep,"Setting up Project Directory"),Ep.forEach(s),vp.forEach(s),ao=F(e),O=r(e,"P",{});var Fe=p(O);qa=o(Fe,"Now, lets move to the "),Rs=r(Fe,"CODE",{});var mp=p(Rs);Ua=o(mp,"/var/www/"),mp.forEach(s),Wa=o(Fe," directory where we are going to place our project folder. I am going to setup a project from scratch for demo purposes using "),Ns=r(Fe,"CODE",{});var hp=p(Ns);Ha=o(hp,"django-admin"),hp.forEach(s),Ma=o(Fe," command. But if you already have one, make sure its uploaded correctly. I normally used "),Bs=r(Fe,"CODE",{});var Dp=p(Bs);Za=o(Dp,"rsync"),Dp.forEach(s),Ya=o(Fe," for this:"),Fe.forEach(s),no=F(e),Ls=f(e,!1),Gs=F(e),te=r(e,"P",{});var ia=p(te);Xa=o(ia,"For now, i will setup a new project from scratch and name it "),qs=r(ia,"CODE",{});var wp=p(qs);za=o(wp,"myweb"),wp.forEach(s),Qa=o(ia,". Lets install django and initialize an empty project:"),ia.forEach(s),io=F(e),Us=f(e,!1),Ws=F(e),q=r(e,"P",{});var Es=p(q);Va=o(Es,"Move to "),Hs=r(Es,"CODE",{});var gp=p(Hs);Ja=o(gp,"myweb"),gp.forEach(s),Ka=o(Es," and initialize new "),Ms=r(Es,"EM",{});var bp=p(Ms);en=o(bp,"virtual environment"),bp.forEach(s),sn=o(Es,":"),Es.forEach(s),ro=F(e),Zs=f(e,!1),Ys=F(e),le=r(e,"P",{});var ra=p(le);tn=o(ra,"Moving forward, activate the virtual environment and install all the necessary packages that you might have placed in "),Xs=r(ra,"CODE",{});var _p=p(Xs);ln=o(_p,"requirements.txt"),_p.forEach(s),on=o(ra,"."),ra.forEach(s),po=F(e),zs=f(e,!1),Qs=F(e),we=r(e,"H3",{id:!0});var kp=p(we);He=r(kp,"A",{href:!0});var Cp=p(He);an=o(Cp,"Setting up Postgres (Database)"),Cp.forEach(s),kp.forEach(s),co=F(e),oe=r(e,"P",{});var pa=p(oe);nn=o(pa,"You could move forward without this step if you are planning on using some database or the default sqlite. But please note that you will have to install the relevant packages for that. While in this case, i am only focusing on "),Vs=r(pa,"CODE",{});var Op=p(Vs);rn=o(Op,"postgres"),Op.forEach(s),pn=o(pa,"."),pa.forEach(s),Fo=F(e),ae=r(e,"P",{});var ca=p(ae);cn=o(ca,"Launch "),Js=r(ca,"CODE",{});var Sp=p(Js);Fn=o(Sp,"postgres"),Sp.forEach(s),dn=o(ca,":"),ca.forEach(s),fo=F(e),Ks=f(e,!1),et=F(e),U=r(e,"P",{});var ms=p(U);fn=o(ms,"The next steps are supposted to be inside the "),st=r(ms,"CODE",{});var Pp=p(st);un=o(Pp,"postgres"),Pp.forEach(s),yn=o(ms," terminal. Create a new database. I am naming it "),tt=r(ms,"CODE",{});var Tp=p(tt);vn=o(Tp,"hashbase"),Tp.forEach(s),En=o(ms,". Setup a new user and assign it to the database that we just created:"),ms.forEach(s),uo=F(e),lt=f(e,!1),ot=F(e),Me=r(e,"P",{});var Ap=p(Me);mn=o(Ap,"Next, we will modify a couple of our database settings for better processing and django functions:"),Ap.forEach(s),yo=F(e),at=f(e,!1),nt=F(e),Ze=r(e,"P",{});var $p=p(Ze);hn=o($p,"Quit:"),$p.forEach(s),vo=F(e),it=f(e,!1),rt=F(e),Ye=r(e,"P",{});var Ip=p(Ye);j(ge.$$.fragment,Ip),Ip.forEach(s),Eo=F(e),be=r(e,"H3",{id:!0});var jp=p(be);Xe=r(jp,"A",{href:!0});var xp=p(Xe);Dn=o(xp,"Project Settings"),xp.forEach(s),jp.forEach(s),mo=F(e),W=r(e,"P",{});var hs=p(W);wn=o(hs,"We will look at the project settings now that needs to be replaced or modified. Considering we are in the project directory located at "),pt=r(hs,"CODE",{});var Rp=p(pt);gn=o(Rp,"/var/www/myweb"),Rp.forEach(s),bn=o(hs,". Lets edit the "),ct=r(hs,"CODE",{});var Np=p(ct);_n=o(Np,"settings.py"),Np.forEach(s),kn=o(hs," file:"),hs.forEach(s),ho=F(e),Ft=f(e,!1),dt=F(e),ze=r(e,"P",{});var Bp=p(ze);j(_e.$$.fragment,Bp),Bp.forEach(s),Do=F(e),g=r(e,"P",{});var X=p(g);Cn=o(X,"Edit the "),ft=r(X,"CODE",{});var Lp=p(ft);On=o(Lp,"ALLOWED_HOSTS"),Lp.forEach(s),Sn=o(X," list variable to include all the "),ut=r(X,"STRONG",{});var Gp=p(ut);Pn=o(Gp,"IPs"),Gp.forEach(s),Tn=o(X," or "),yt=r(X,"STRONG",{});var qp=p(yt);An=o(qp,"Hostnames"),qp.forEach(s),$n=o(X," that you plan on using for the website. In here, i am simply going to put the "),vt=r(X,"STRONG",{});var Up=p(vt);In=o(Up,"PUBLIC IP"),Up.forEach(s),jn=o(X," of the server i am on. You can put domain names if you are going to configure one with the website."),X.forEach(s),wo=F(e),Et=f(e,!1),mt=F(e),S=r(e,"P",{});var de=p(S);xn=o(de,"Now, move a bit below to this and find the "),ht=r(de,"CODE",{});var Wp=p(ht);Rn=o(Wp,"DATABASES"),Wp.forEach(s),Nn=o(de," variable section. By default it is configured to use "),Dt=r(de,"CODE",{});var Hp=p(Dt);Bn=o(Hp,"sqlite3"),Hp.forEach(s),Ln=o(de," as its database. We will change the settings to use "),wt=r(de,"CODE",{});var Mp=p(wt);Gn=o(Mp,"postgresql"),Mp.forEach(s),qn=o(de,":"),de.forEach(s),go=F(e),gt=f(e,!1),bt=F(e),h=r(e,"P",{});var A=p(h);Un=o(A,"After this, we need to setup a "),_t=r(A,"CODE",{});var Zp=p(_t);Wn=o(Zp,"static"),Zp.forEach(s),Hn=o(A," and "),kt=r(A,"CODE",{});var Yp=p(kt);Mn=o(Yp,"media"),Yp.forEach(s),Zn=o(A," directory where our project static files are going to be stored. The "),Ct=r(A,"CODE",{});var Xp=p(Ct);Yn=o(Xp,"media"),Xp.forEach(s),Xn=o(A," folder will contain files that are supposed to be uploaded by the user of the application. So, again in the "),Ot=r(A,"CODE",{});var zp=p(Ot);zn=o(zp,"settings.py"),zp.forEach(s),Qn=o(A," file, move at the end of the file and find the line "),St=r(A,"CODE",{});var Qp=p(St);Vn=o(Qp,"STATIC_URL = 'static/'"),Qp.forEach(s),Jn=o(A," and add some new content below it:"),A.forEach(s),bo=F(e),Pt=f(e,!1),Tt=F(e),E=r(e,"P",{});var w=p(E);Kn=o(w,"The "),At=r(w,"CODE",{});var Vp=p(At);ei=o(Vp,"STATIC_ROOT"),Vp.forEach(s),si=o(w," defines the folder where the public content like "),$t=r(w,"EM",{});var Jp=p($t);ti=o(Jp,"css,js or imgs"),Jp.forEach(s),li=o(w," are going to be stored upon running the "),It=r(w,"CODE",{});var Kp=p(It);oi=o(Kp,"collectstatic"),Kp.forEach(s),ai=o(w," command on "),jt=r(w,"CODE",{});var ec=p(jt);ni=o(ec,"manage.py"),ec.forEach(s),ii=o(w," file. Please note that its totally different from the "),xt=r(w,"CODE",{});var sc=p(xt);ri=o(sc,"STATICFILES_DIRS"),sc.forEach(s),pi=o(w," variable which is used to define the directories to locate static files. Think of "),Rt=r(w,"CODE",{});var tc=p(Rt);ci=o(tc,"STATIC_ROOT"),tc.forEach(s),Fi=o(w," as more of a "),Nt=r(w,"STRONG",{});var lc=p(Nt);di=o(lc,"production"),lc.forEach(s),fi=o(w," specific variable."),w.forEach(s),_o=F(e),ke=r(e,"H3",{id:!0});var oc=p(ke);Qe=r(oc,"A",{href:!0});var ac=p(Qe);ui=o(ac,"Spin up the Project"),ac.forEach(s),oc.forEach(s),ko=F(e),Ve=r(e,"P",{});var nc=p(Ve);yi=o(nc,"Lets move towards spinning up the project for the public. For that, we will do the normal django commands like migrations and super user."),nc.forEach(s),Co=F(e),Je=r(e,"P",{});var ic=p(Je);vi=o(ic,"Run migrations and create a superuser:"),ic.forEach(s),Oo=F(e),Bt=f(e,!1),Lt=F(e),Ke=r(e,"P",{});var rc=p(Ke);j(Ce.$$.fragment,rc),rc.forEach(s),So=F(e),P=r(e,"P",{});var fe=p(P);Ei=o(fe,"After this, we will run the "),Gt=r(fe,"CODE",{});var pc=p(Gt);mi=o(pc,"collectstatic"),pc.forEach(s),hi=o(fe," command to locate all the static files we have in our project and put them to the folder that we defined at "),qt=r(fe,"CODE",{});var cc=p(qt);Di=o(cc,"STATIC_ROOT"),cc.forEach(s),wi=o(fe," variable. These static files will be served by the "),Ut=r(fe,"CODE",{});var Fc=p(Ut);gi=o(Fc,"nginx"),Fc.forEach(s),bi=o(fe," server and not from django like we see during the development."),fe.forEach(s),Po=F(e),Wt=f(e,!1),Ht=F(e),es=r(e,"P",{});var dc=p(es);j(Oe.$$.fragment,dc),dc.forEach(s),To=F(e),H=r(e,"P",{});var Ds=p(H);_i=o(Ds,"You can now execute the "),Mt=r(Ds,"CODE",{});var fc=p(Mt);ki=o(fc,"runserver"),fc.forEach(s),Ci=o(Ds," command on public interface to see your website. Before also make sure nginx is not using the port "),Zt=r(Ds,"CODE",{});var uc=p(Zt);Oi=o(uc,"80"),uc.forEach(s),Si=o(Ds," by default:"),Ds.forEach(s),Ao=F(e),Yt=f(e,!1),Xt=F(e),ss=r(e,"P",{});var yc=p(ss);Pi=o(yc,"Now, if you access your website at you would be able to see your project:"),yc.forEach(s),$o=F(e),zt=f(e,!1),Qt=F(e),ts=r(e,"P",{});var vc=p(ts);j(Se.$$.fragment,vc),vc.forEach(s),Io=F(e),b=r(e,"P",{});var z=p(b);Ti=o(z,"Finally, back in the "),Vt=r(z,"CODE",{});var Ec=p(Vt);Ai=o(Ec,"settings.py"),Ec.forEach(s),$i=o(z," put the "),Jt=r(z,"CODE",{});var mc=p(Jt);Ii=o(mc,"DEBUG"),mc.forEach(s),ji=o(z," value to "),Kt=r(z,"CODE",{});var hc=p(Kt);xi=o(hc,"False"),hc.forEach(s),Ri=o(z,". You can keep it enabled if you are going to debug the project or facing some other issue. But make sure to put the value to "),el=r(z,"CODE",{});var Dc=p(el);Ni=o(Dc,"False"),Dc.forEach(s),Bi=o(z," for the production cases:"),z.forEach(s),jo=F(e),sl=f(e,!1),tl=F(e),ls=r(e,"P",{});var wc=p(ls);Li=o(wc,"At this point, we have our project all ok. But this is not how we are going to host the website actually."),wc.forEach(s),xo=F(e),Pe=r(e,"H3",{id:!0});var gc=p(Pe);os=r(gc,"A",{href:!0});var bc=p(os);Gi=o(bc,"Setting up Gunicorn"),bc.forEach(s),gc.forEach(s),Ro=F(e),m=r(e,"P",{});var _=p(m);qi=o(_,"Gunicorn is the server service that we are going to configure with "),ll=r(_,"CODE",{});var _c=p(ll);Ui=o(_c,"nginx"),_c.forEach(s),Wi=o(_," for the public. We will configure a new "),ol=r(_,"CODE",{});var kc=p(ol);Hi=o(kc,"systemd"),kc.forEach(s),Mi=o(_," service for this. But before, we will test if "),al=r(_,"CODE",{});var Cc=p(al);Zi=o(Cc,"gunicorn"),Cc.forEach(s),Yi=o(_," is really working or not. So, simply bind gunicorn to the "),nl=r(_,"CODE",{});var Oc=p(nl);Xi=o(Oc,"0.0.0.0"),Oc.forEach(s),zi=o(_," and test if we can access the website at port "),il=r(_,"CODE",{});var Sc=p(il);Qi=o(Sc,"80"),Sc.forEach(s),Vi=o(_," like we did before. Note that we are still inside "),rl=r(_,"CODE",{});var Pc=p(rl);Ji=o(Pc,"/var/www/myweb"),Pc.forEach(s),Ki=o(_," directory"),_.forEach(s),No=F(e),pl=f(e,!1),cl=F(e),as=r(e,"P",{});var Tc=p(as);j(Te.$$.fragment,Tc),Tc.forEach(s),Bo=F(e),ne=r(e,"P",{});var Fa=p(ne);er=o(Fa,"Fire up "),Fl=r(Fa,"CODE",{});var Ac=p(Fl);sr=o(Ac,"nano"),Ac.forEach(s),tr=o(Fa," again for the gunicorn service and do the configuration:"),Fa.forEach(s),Lo=F(e),dl=f(e,!1),fl=F(e),M=r(e,"P",{});var ws=p(M);lr=o(ws,"Inside the file. I’ll not get into much details of what is happening here. But you can refer to the "),ul=r(ws,"CODE",{});var $c=p(ul);or=o($c,"systemd"),$c.forEach(s),ar=o(ws," documentation for more in depth detail. However, we will review the "),yl=r(ws,"CODE",{});var Ic=p(yl);nr=o(Ic,"Service"),Ic.forEach(s),ir=o(ws," section here:"),ws.forEach(s),Go=F(e),vl=f(e,!1),El=F(e),D=r(e,"P",{});var $=p(D);rr=o($,"The "),ml=r($,"CODE",{});var jc=p(ml);pr=o(jc,"User"),jc.forEach(s),cr=o($," and "),hl=r($,"CODE",{});var xc=p(hl);Fr=o(xc,"Group"),xc.forEach(s),dr=o($," defines the privileges the command is going to be executed with. The complete command is specified with "),Dl=r($,"CODE",{});var Rc=p(Dl);fr=o(Rc,"ExecStart"),Rc.forEach(s),ur=o($," variable. Make sure to specify "),wl=r($,"CODE",{});var Nc=p(wl);yr=o(Nc,"WorkingDirectory"),Nc.forEach(s),vr=o($," as well. Otherwise, gunicorn wouldn’t be able to locate the "),gl=r($,"CODE",{});var Bc=p(gl);Er=o(Bc,"myweb.wsgi"),Bc.forEach(s),mr=o($," on path. Save the file."),$.forEach(s),qo=F(e),ns=r(e,"P",{});var Lc=p(ns);hr=o(Lc,"Make sure to change the project’s owner before starting gunicorn:"),Lc.forEach(s),Uo=F(e),bl=f(e,!1),_l=F(e),is=r(e,"P",{});var Gc=p(is);Dr=o(Gc,"Start the service after saving and make that its running and doesn’t have any errors. If there are errors, you will need to fix them before moving forward:"),Gc.forEach(s),Wo=F(e),kl=f(e,!1),Cl=F(e),rs=r(e,"P",{});var qc=p(rs);j(Ae.$$.fragment,qc),qc.forEach(s),Ho=F(e),ps=r(e,"P",{});var Uc=p(ps);wr=o(Uc,"You can see more detailed logs of gunicorn if there are errors using:"),Uc.forEach(s),Mo=F(e),Ol=f(e,!1),Sl=F(e),$e=r(e,"H3",{id:!0});var Wc=p($e);cs=r(Wc,"A",{href:!0});var Hc=p(cs);gr=o(Hc,"Setting UP NGINX"),Hc.forEach(s),Wc.forEach(s),Zo=F(e),Z=r(e,"P",{});var gs=p(Z);br=o(gs,"This is the last step. We will configure "),Pl=r(gs,"CODE",{});var Mc=p(Pl);_r=o(Mc,"nginx"),Mc.forEach(s),kr=o(gs," which in short is the public server and will take requests from the public and forward it to gunicorn as a reverse proxy. Remove the default enabled nginx website and create a new "),Tl=r(gs,"CODE",{});var Zc=p(Tl);Cr=o(Zc,"nginx"),Zc.forEach(s),Or=o(gs," project file:"),gs.forEach(s),Yo=F(e),Al=f(e,!1),$l=F(e),Fs=r(e,"P",{});var Yc=p(Fs);Sr=o(Yc,"Inside the file, configure your web server:"),Yc.forEach(s),Xo=F(e),Il=f(e,!1),jl=F(e),ie=r(e,"P",{});var da=p(ie);Pr=o(da,"In the above configuration, make sure you have changed it according to your requirements. One thing to look out for is the "),xl=r(da,"CODE",{});var Xc=p(xl);Tr=o(Xc,"server_name"),Xc.forEach(s),Ar=o(da," directive. If you are working with a domain name, make sure to replace it correctly. Another thing would be the paths that are mentioned in the configuration. Make sure all of the mentioned paths in your correct according to your settings."),da.forEach(s),zo=F(e),re=r(e,"P",{});var fa=p(re);$r=o(fa,"Save the file and enable this nginx project by creating its soft link at "),Rl=r(fa,"CODE",{});var zc=p(Rl);Ir=o(zc,"sites-enabled"),zc.forEach(s),jr=o(fa," directory:"),fa.forEach(s),Qo=F(e),Nl=f(e,!1),Bl=F(e),ds=r(e,"P",{});var Qc=p(ds);xr=o(Qc,"Check nginx configuration and restart nginx:"),Qc.forEach(s),Vo=F(e),Ll=f(e,!1),Gl=F(e),fs=r(e,"P",{});var Vc=p(fs);j(Ie.$$.fragment,Vc),Vc.forEach(s),Jo=F(e),T=r(e,"P",{});var ue=p(T);Rr=o(ue,"If everything goes correctly, you should be able to see the nginx service running and if you visit the "),ql=r(ue,"STRONG",{});var Jc=p(ql);Nr=o(Jc,"PUBLIC IP"),Jc.forEach(s),Br=o(ue," or "),Ul=r(ue,"STRONG",{});var Kc=p(Ul);Lr=o(Kc,"Domain Name"),Kc.forEach(s),Gr=o(ue," now, you will see your website. For the final test, visit the "),Wl=r(ue,"CODE",{});var eF=p(Wl);qr=o(eF,"/admin"),eF.forEach(s),Ur=o(ue," page to make sure the static files are also served correctly from our nginx service:"),ue.forEach(s),Ko=F(e),Hl=f(e,!1),Ml=F(e),us=r(e,"P",{});var sF=p(us);j(je.$$.fragment,sF),sF.forEach(s),ea=F(e),Y=r(e,"P",{});var bs=p(Y);Wr=o(bs,"In case your static are not served properly, you can check the "),Zl=r(bs,"CODE",{});var tF=p(Zl);Hr=o(tF,"nginx"),tF.forEach(s),Mr=o(bs," error logs at: "),Yl=r(bs,"CODE",{});var lF=p(Yl);Zr=o(lF,"/var/log/nginx/error.log"),lF.forEach(s),Yr=o(bs," and debug the issues."),bs.forEach(s),sa=F(e),xe=r(e,"H2",{id:!0});var oF=p(xe);ys=r(oF,"A",{href:!0});var aF=p(ys);Xr=o(aF,"Conclusion"),aF.forEach(s),oF.forEach(s),ta=F(e),vs=r(e,"P",{});var nF=p(vs);zr=o(nF,"Thanks for making it through. All in all, we saw how to host a django website using gunicorn, nginx and postgresql. Its not very tricky but yes sometimes debugging the configuration files can take time. So, while doing your own, make sure to double check your configuration files and make sure that they are making sense for what they are supposed to do."),nF.forEach(s),this.h()},h(){v(k,"href","#introduction"),v(y,"id","introduction"),v(Ne,"href","#tutorial"),v(ye,"id","tutorial"),v(Le,"href","#pre-reqs"),v(ve,"id","pre-reqs"),v(Ge,"href","#installing-packages"),v(Ee,"id","installing-packages"),As.a=$s,js.a=xs,v(We,"href","#setting-up-project-directory"),v(De,"id","setting-up-project-directory"),Ls.a=Gs,Us.a=Ws,Zs.a=Ys,zs.a=Qs,v(He,"href","#setting-up-postgres-database"),v(we,"id","setting-up-postgres-database"),Ks.a=et,lt.a=ot,at.a=nt,it.a=rt,v(Xe,"href","#project-settings"),v(be,"id","project-settings"),Ft.a=dt,Et.a=mt,gt.a=bt,Pt.a=Tt,v(Qe,"href","#spin-up-the-project"),v(ke,"id","spin-up-the-project"),Bt.a=Lt,Wt.a=Ht,Yt.a=Xt,zt.a=Qt,sl.a=tl,v(os,"href","#setting-up-gunicorn"),v(Pe,"id","setting-up-gunicorn"),pl.a=cl,dl.a=fl,vl.a=El,bl.a=_l,kl.a=Cl,Ol.a=Sl,v(cs,"href","#setting-up-nginx"),v($e,"id","setting-up-nginx"),Al.a=$l,Il.a=jl,Nl.a=Bl,Ll.a=Gl,Hl.a=Ml,v(ys,"href","#conclusion"),v(xe,"id","conclusion")},m(e,a){n(e,y,a),t(y,k),t(k,Q),n(e,V,a),n(e,u,a),t(u,L),t(u,J),t(J,ua),t(u,ya),t(u,_s),t(_s,va),t(u,Ea),t(u,ks),t(ks,ma),t(u,ha),n(e,Xl,a),n(e,ye,a),t(ye,Ne),t(Ne,Da),n(e,zl,a),n(e,Be,a),t(Be,wa),n(e,Ql,a),n(e,ve,a),t(ve,Le),t(Le,ga),n(e,Vl,a),n(e,C,a),t(C,ba),t(C,Cs),t(Cs,_a),t(C,ka),t(C,Os),t(Os,Ca),t(C,Oa),t(C,Ss),t(Ss,Sa),t(C,Pa),n(e,Jl,a),n(e,K,a),t(K,Ta),t(K,Ps),t(Ps,Aa),t(K,$a),n(e,Kl,a),n(e,Ee,a),t(Ee,Ge),t(Ge,Ia),n(e,eo,a),n(e,ee,a),t(ee,ja),t(ee,Ts),t(Ts,xa),t(ee,Ra),n(e,so,a),As.m(cF,e,a),n(e,$s,a),n(e,qe,a),x(me,qe,null),n(e,to,a),n(e,se,a),t(se,Na),t(se,Is),t(Is,Ba),t(se,La),n(e,lo,a),js.m(FF,e,a),n(e,xs,a),n(e,Ue,a),x(he,Ue,null),n(e,oo,a),n(e,De,a),t(De,We),t(We,Ga),n(e,ao,a),n(e,O,a),t(O,qa),t(O,Rs),t(Rs,Ua),t(O,Wa),t(O,Ns),t(Ns,Ha),t(O,Ma),t(O,Bs),t(Bs,Za),t(O,Ya),n(e,no,a),Ls.m(dF,e,a),n(e,Gs,a),n(e,te,a),t(te,Xa),t(te,qs),t(qs,za),t(te,Qa),n(e,io,a),Us.m(fF,e,a),n(e,Ws,a),n(e,q,a),t(q,Va),t(q,Hs),t(Hs,Ja),t(q,Ka),t(q,Ms),t(Ms,en),t(q,sn),n(e,ro,a),Zs.m(uF,e,a),n(e,Ys,a),n(e,le,a),t(le,tn),t(le,Xs),t(Xs,ln),t(le,on),n(e,po,a),zs.m(yF,e,a),n(e,Qs,a),n(e,we,a),t(we,He),t(He,an),n(e,co,a),n(e,oe,a),t(oe,nn),t(oe,Vs),t(Vs,rn),t(oe,pn),n(e,Fo,a),n(e,ae,a),t(ae,cn),t(ae,Js),t(Js,Fn),t(ae,dn),n(e,fo,a),Ks.m(vF,e,a),n(e,et,a),n(e,U,a),t(U,fn),t(U,st),t(st,un),t(U,yn),t(U,tt),t(tt,vn),t(U,En),n(e,uo,a),lt.m(EF,e,a),n(e,ot,a),n(e,Me,a),t(Me,mn),n(e,yo,a),at.m(mF,e,a),n(e,nt,a),n(e,Ze,a),t(Ze,hn),n(e,vo,a),it.m(hF,e,a),n(e,rt,a),n(e,Ye,a),x(ge,Ye,null),n(e,Eo,a),n(e,be,a),t(be,Xe),t(Xe,Dn),n(e,mo,a),n(e,W,a),t(W,wn),t(W,pt),t(pt,gn),t(W,bn),t(W,ct),t(ct,_n),t(W,kn),n(e,ho,a),Ft.m(DF,e,a),n(e,dt,a),n(e,ze,a),x(_e,ze,null),n(e,Do,a),n(e,g,a),t(g,Cn),t(g,ft),t(ft,On),t(g,Sn),t(g,ut),t(ut,Pn),t(g,Tn),t(g,yt),t(yt,An),t(g,$n),t(g,vt),t(vt,In),t(g,jn),n(e,wo,a),Et.m(wF,e,a),n(e,mt,a),n(e,S,a),t(S,xn),t(S,ht),t(ht,Rn),t(S,Nn),t(S,Dt),t(Dt,Bn),t(S,Ln),t(S,wt),t(wt,Gn),t(S,qn),n(e,go,a),gt.m(gF,e,a),n(e,bt,a),n(e,h,a),t(h,Un),t(h,_t),t(_t,Wn),t(h,Hn),t(h,kt),t(kt,Mn),t(h,Zn),t(h,Ct),t(Ct,Yn),t(h,Xn),t(h,Ot),t(Ot,zn),t(h,Qn),t(h,St),t(St,Vn),t(h,Jn),n(e,bo,a),Pt.m(bF,e,a),n(e,Tt,a),n(e,E,a),t(E,Kn),t(E,At),t(At,ei),t(E,si),t(E,$t),t($t,ti),t(E,li),t(E,It),t(It,oi),t(E,ai),t(E,jt),t(jt,ni),t(E,ii),t(E,xt),t(xt,ri),t(E,pi),t(E,Rt),t(Rt,ci),t(E,Fi),t(E,Nt),t(Nt,di),t(E,fi),n(e,_o,a),n(e,ke,a),t(ke,Qe),t(Qe,ui),n(e,ko,a),n(e,Ve,a),t(Ve,yi),n(e,Co,a),n(e,Je,a),t(Je,vi),n(e,Oo,a),Bt.m(_F,e,a),n(e,Lt,a),n(e,Ke,a),x(Ce,Ke,null),n(e,So,a),n(e,P,a),t(P,Ei),t(P,Gt),t(Gt,mi),t(P,hi),t(P,qt),t(qt,Di),t(P,wi),t(P,Ut),t(Ut,gi),t(P,bi),n(e,Po,a),Wt.m(kF,e,a),n(e,Ht,a),n(e,es,a),x(Oe,es,null),n(e,To,a),n(e,H,a),t(H,_i),t(H,Mt),t(Mt,ki),t(H,Ci),t(H,Zt),t(Zt,Oi),t(H,Si),n(e,Ao,a),Yt.m(CF,e,a),n(e,Xt,a),n(e,ss,a),t(ss,Pi),n(e,$o,a),zt.m(OF,e,a),n(e,Qt,a),n(e,ts,a),x(Se,ts,null),n(e,Io,a),n(e,b,a),t(b,Ti),t(b,Vt),t(Vt,Ai),t(b,$i),t(b,Jt),t(Jt,Ii),t(b,ji),t(b,Kt),t(Kt,xi),t(b,Ri),t(b,el),t(el,Ni),t(b,Bi),n(e,jo,a),sl.m(SF,e,a),n(e,tl,a),n(e,ls,a),t(ls,Li),n(e,xo,a),n(e,Pe,a),t(Pe,os),t(os,Gi),n(e,Ro,a),n(e,m,a),t(m,qi),t(m,ll),t(ll,Ui),t(m,Wi),t(m,ol),t(ol,Hi),t(m,Mi),t(m,al),t(al,Zi),t(m,Yi),t(m,nl),t(nl,Xi),t(m,zi),t(m,il),t(il,Qi),t(m,Vi),t(m,rl),t(rl,Ji),t(m,Ki),n(e,No,a),pl.m(PF,e,a),n(e,cl,a),n(e,as,a),x(Te,as,null),n(e,Bo,a),n(e,ne,a),t(ne,er),t(ne,Fl),t(Fl,sr),t(ne,tr),n(e,Lo,a),dl.m(TF,e,a),n(e,fl,a),n(e,M,a),t(M,lr),t(M,ul),t(ul,or),t(M,ar),t(M,yl),t(yl,nr),t(M,ir),n(e,Go,a),vl.m(AF,e,a),n(e,El,a),n(e,D,a),t(D,rr),t(D,ml),t(ml,pr),t(D,cr),t(D,hl),t(hl,Fr),t(D,dr),t(D,Dl),t(Dl,fr),t(D,ur),t(D,wl),t(wl,yr),t(D,vr),t(D,gl),t(gl,Er),t(D,mr),n(e,qo,a),n(e,ns,a),t(ns,hr),n(e,Uo,a),bl.m($F,e,a),n(e,_l,a),n(e,is,a),t(is,Dr),n(e,Wo,a),kl.m(IF,e,a),n(e,Cl,a),n(e,rs,a),x(Ae,rs,null),n(e,Ho,a),n(e,ps,a),t(ps,wr),n(e,Mo,a),Ol.m(jF,e,a),n(e,Sl,a),n(e,$e,a),t($e,cs),t(cs,gr),n(e,Zo,a),n(e,Z,a),t(Z,br),t(Z,Pl),t(Pl,_r),t(Z,kr),t(Z,Tl),t(Tl,Cr),t(Z,Or),n(e,Yo,a),Al.m(xF,e,a),n(e,$l,a),n(e,Fs,a),t(Fs,Sr),n(e,Xo,a),Il.m(RF,e,a),n(e,jl,a),n(e,ie,a),t(ie,Pr),t(ie,xl),t(xl,Tr),t(ie,Ar),n(e,zo,a),n(e,re,a),t(re,$r),t(re,Rl),t(Rl,Ir),t(re,jr),n(e,Qo,a),Nl.m(NF,e,a),n(e,Bl,a),n(e,ds,a),t(ds,xr),n(e,Vo,a),Ll.m(BF,e,a),n(e,Gl,a),n(e,fs,a),x(Ie,fs,null),n(e,Jo,a),n(e,T,a),t(T,Rr),t(T,ql),t(ql,Nr),t(T,Br),t(T,Ul),t(Ul,Lr),t(T,Gr),t(T,Wl),t(Wl,qr),t(T,Ur),n(e,Ko,a),Hl.m(LF,e,a),n(e,Ml,a),n(e,us,a),x(je,us,null),n(e,ea,a),n(e,Y,a),t(Y,Wr),t(Y,Zl),t(Zl,Hr),t(Y,Mr),t(Y,Yl),t(Yl,Zr),t(Y,Yr),n(e,sa,a),n(e,xe,a),t(xe,ys),t(ys,Xr),n(e,ta,a),n(e,vs,a),t(vs,zr),la=!0},p:HF,i(e){la||(R(me.$$.fragment,e),R(he.$$.fragment,e),R(ge.$$.fragment,e),R(_e.$$.fragment,e),R(Ce.$$.fragment,e),R(Oe.$$.fragment,e),R(Se.$$.fragment,e),R(Te.$$.fragment,e),R(Ae.$$.fragment,e),R(Ie.$$.fragment,e),R(je.$$.fragment,e),la=!0)},o(e){N(me.$$.fragment,e),N(he.$$.fragment,e),N(ge.$$.fragment,e),N(_e.$$.fragment,e),N(Ce.$$.fragment,e),N(Oe.$$.fragment,e),N(Se.$$.fragment,e),N(Te.$$.fragment,e),N(Ae.$$.fragment,e),N(Ie.$$.fragment,e),N(je.$$.fragment,e),la=!1},d(e){e&&s(y),e&&s(V),e&&s(u),e&&s(Xl),e&&s(ye),e&&s(zl),e&&s(Be),e&&s(Ql),e&&s(ve),e&&s(Vl),e&&s(C),e&&s(Jl),e&&s(K),e&&s(Kl),e&&s(Ee),e&&s(eo),e&&s(ee),e&&s(so),e&&As.d(),e&&s($s),e&&s(qe),B(me),e&&s(to),e&&s(se),e&&s(lo),e&&js.d(),e&&s(xs),e&&s(Ue),B(he),e&&s(oo),e&&s(De),e&&s(ao),e&&s(O),e&&s(no),e&&Ls.d(),e&&s(Gs),e&&s(te),e&&s(io),e&&Us.d(),e&&s(Ws),e&&s(q),e&&s(ro),e&&Zs.d(),e&&s(Ys),e&&s(le),e&&s(po),e&&zs.d(),e&&s(Qs),e&&s(we),e&&s(co),e&&s(oe),e&&s(Fo),e&&s(ae),e&&s(fo),e&&Ks.d(),e&&s(et),e&&s(U),e&&s(uo),e&&lt.d(),e&&s(ot),e&&s(Me),e&&s(yo),e&&at.d(),e&&s(nt),e&&s(Ze),e&&s(vo),e&&it.d(),e&&s(rt),e&&s(Ye),B(ge),e&&s(Eo),e&&s(be),e&&s(mo),e&&s(W),e&&s(ho),e&&Ft.d(),e&&s(dt),e&&s(ze),B(_e),e&&s(Do),e&&s(g),e&&s(wo),e&&Et.d(),e&&s(mt),e&&s(S),e&&s(go),e&&gt.d(),e&&s(bt),e&&s(h),e&&s(bo),e&&Pt.d(),e&&s(Tt),e&&s(E),e&&s(_o),e&&s(ke),e&&s(ko),e&&s(Ve),e&&s(Co),e&&s(Je),e&&s(Oo),e&&Bt.d(),e&&s(Lt),e&&s(Ke),B(Ce),e&&s(So),e&&s(P),e&&s(Po),e&&Wt.d(),e&&s(Ht),e&&s(es),B(Oe),e&&s(To),e&&s(H),e&&s(Ao),e&&Yt.d(),e&&s(Xt),e&&s(ss),e&&s($o),e&&zt.d(),e&&s(Qt),e&&s(ts),B(Se),e&&s(Io),e&&s(b),e&&s(jo),e&&sl.d(),e&&s(tl),e&&s(ls),e&&s(xo),e&&s(Pe),e&&s(Ro),e&&s(m),e&&s(No),e&&pl.d(),e&&s(cl),e&&s(as),B(Te),e&&s(Bo),e&&s(ne),e&&s(Lo),e&&dl.d(),e&&s(fl),e&&s(M),e&&s(Go),e&&vl.d(),e&&s(El),e&&s(D),e&&s(qo),e&&s(ns),e&&s(Uo),e&&bl.d(),e&&s(_l),e&&s(is),e&&s(Wo),e&&kl.d(),e&&s(Cl),e&&s(rs),B(Ae),e&&s(Ho),e&&s(ps),e&&s(Mo),e&&Ol.d(),e&&s(Sl),e&&s($e),e&&s(Zo),e&&s(Z),e&&s(Yo),e&&Al.d(),e&&s($l),e&&s(Fs),e&&s(Xo),e&&Il.d(),e&&s(jl),e&&s(ie),e&&s(zo),e&&s(re),e&&s(Qo),e&&Nl.d(),e&&s(Bl),e&&s(ds),e&&s(Vo),e&&Ll.d(),e&&s(Gl),e&&s(fs),B(Ie),e&&s(Jo),e&&s(T),e&&s(Ko),e&&Hl.d(),e&&s(Ml),e&&s(us),B(je),e&&s(ea),e&&s(Y),e&&s(sa),e&&s(xe),e&&s(ta),e&&s(vs)}}}function YF(Re){let y,k;const Q=[Re[0],pF];let V={$$slots:{default:[ZF]},$$scope:{ctx:Re}};for(let u=0;u<Q.length;u+=1)V=Qr(V,Q[u]);return y=new MF({props:V}),{c(){I(y.$$.fragment)},l(u){j(y.$$.fragment,u)},m(u,L){x(y,u,L),k=!0},p(u,[L]){const J=L&1?WF(Q,[L&1&&iF(u[0]),L&0&&iF(pF)]):{};L&2&&(J.$$scope={dirty:L,ctx:u}),y.$set(J)},i(u){k||(R(y.$$.fragment,u),k=!0)},o(u){N(y.$$.fragment,u),k=!1},d(u){B(y,u)}}}const pF={title:"Deploy a Django Application on Ubuntu 22.04 with Gunicorn & NGINX",tags:["django","deployment","development","drf","python","ubuntu"],categories:["Linux","Development"],summary:"A Detailed walkthrough of the process of deploying a django application on a ubuntu server from scratch. This guide covers the deployment stages with Gunicorn, NGINX and Postgresql.",created:"2023-09-11T00:00:00.000Z",lastmod:"2023-09-11T00:00:00.000Z",image:"https://github.com/hash3liZer/khatta/assets/29171692/c70a5dc7-5294-45b7-8a9f-8a04ac9214b3",flags:[],updated:"2023-10-29T16:07:08.793Z",slug:"/blog/2023/deploy-django-website-nginx-gunicorn-ubuntu-22/+page.md",path:"/blog/2023/deploy-django-website-nginx-gunicorn-ubuntu-22",toc:[{depth:2,title:"Introduction",slug:"introduction"},{depth:2,title:"Tutorial",slug:"tutorial"},{depth:3,title:"Pre-Reqs",slug:"pre-reqs"},{depth:3,title:"Installing Packages",slug:"installing-packages"},{depth:3,title:"Setting up Project Directory",slug:"setting-up-project-directory"},{depth:3,title:"Setting up Postgres (Database)",slug:"setting-up-postgres-database"},{depth:3,title:"Project Settings",slug:"project-settings"},{depth:3,title:"Spin up the Project",slug:"spin-up-the-project"},{depth:3,title:"Setting up Gunicorn",slug:"setting-up-gunicorn"},{depth:3,title:"Setting UP NGINX",slug:"setting-up-nginx"},{depth:2,title:"Conclusion",slug:"conclusion"}]};function XF(Re,y,k){return Re.$$set=Q=>{k(0,y=Qr(Qr({},y),rF(Q)))},y=rF(y),[y]}class JF extends GF{constructor(y){super(),qF(this,y,XF,YF,UF,{})}}export{JF as component};
